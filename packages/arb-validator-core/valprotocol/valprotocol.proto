syntax = "proto3";
package valprotocol;
import "arb-util/common/common.proto";
option go_package = "github.com/offchainlabs/arbitrum/packages/arb-validator-core/valprotocol";

message ExecutionAssertionStubBuf {
    uint64 numGas = 1;
    common.HashBuf beforeMachineHash = 2;
    common.HashBuf afterMachineHash = 3;
    common.HashBuf beforeInboxAcc = 4;
    common.HashBuf afterInboxAcc = 5;
    common.HashBuf firstMessageHash = 6;
    common.HashBuf lastMessageHash = 7;
    uint64 messageCount = 8;
    common.HashBuf firstLogHash = 9;
    common.HashBuf lastLogHash = 10;
    uint64 logCount = 11;
}

message ChainParamsBuf {
    common.BigIntegerBuf stakeRequirement = 1;
    common.AddressBuf stakeToken = 2;
    common.TimeTicksBuf gracePeriod = 3;
    uint64 maxExecutionSteps = 4;
    uint64 ArbGasSpeedLimitPerTick = 5;
}

message VMProtoDataBuf {
    common.HashBuf machineHash = 1;
    common.HashBuf inboxTop = 2;
    common.BigIntegerBuf inboxCount = 3;
    common.BigIntegerBuf messageCount = 4;
    common.BigIntegerBuf logCount = 5;
}

message AssertionParamsBuf {
    uint64 numSteps = 1;
    common.BigIntegerBuf importedMessageCount = 2;
}

message DisputableNodeBuf {
    AssertionParamsBuf assertionParams = 1;
    valprotocol.ExecutionAssertionStubBuf assertion = 2;
    common.HashBuf maxInboxTop = 3;
    common.BigIntegerBuf maxInboxCount = 4;
}
