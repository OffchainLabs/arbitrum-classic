/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from 'ethers'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'
import { TypedEventFilter, TypedEvent, TypedListener } from './commons'

interface ConfirmRootsInterface extends ethers.utils.Interface {
  functions: {
    'confirmRoots(bytes32,uint256)': FunctionFragment
    'rollup()': FunctionFragment
    'setupConfirmData(uint256,bytes32,bytes,uint256[],uint256,bytes32,uint256)': FunctionFragment
  }

  encodeFunctionData(
    functionFragment: 'confirmRoots',
    values: [BytesLike, BigNumberish]
  ): string
  encodeFunctionData(functionFragment: 'rollup', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'setupConfirmData',
    values: [
      BigNumberish,
      BytesLike,
      BytesLike,
      BigNumberish[],
      BigNumberish,
      BytesLike,
      BigNumberish
    ]
  ): string

  decodeFunctionResult(
    functionFragment: 'confirmRoots',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'rollup', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'setupConfirmData',
    data: BytesLike
  ): Result

  events: {}
}

export class ConfirmRoots extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this

  listeners(eventName?: string): Array<Listener>
  off(eventName: string, listener: Listener): this
  on(eventName: string, listener: Listener): this
  once(eventName: string, listener: Listener): this
  removeListener(eventName: string, listener: Listener): this
  removeAllListeners(eventName?: string): this

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>

  interface: ConfirmRootsInterface

  functions: {
    confirmRoots(
      arg0: BytesLike,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>

    rollup(overrides?: CallOverrides): Promise<[string]>

    setupConfirmData(
      nodeNum: BigNumberish,
      beforeSendAcc: BytesLike,
      sendsData: BytesLike,
      sendLengths: BigNumberish[],
      afterSendCount: BigNumberish,
      afterLogAcc: BytesLike,
      afterLogCount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>
  }

  confirmRoots(
    arg0: BytesLike,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>

  rollup(overrides?: CallOverrides): Promise<string>

  setupConfirmData(
    nodeNum: BigNumberish,
    beforeSendAcc: BytesLike,
    sendsData: BytesLike,
    sendLengths: BigNumberish[],
    afterSendCount: BigNumberish,
    afterLogAcc: BytesLike,
    afterLogCount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  callStatic: {
    confirmRoots(
      arg0: BytesLike,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    rollup(overrides?: CallOverrides): Promise<string>

    setupConfirmData(
      nodeNum: BigNumberish,
      beforeSendAcc: BytesLike,
      sendsData: BytesLike,
      sendLengths: BigNumberish[],
      afterSendCount: BigNumberish,
      afterLogAcc: BytesLike,
      afterLogCount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>
  }

  filters: {}

  estimateGas: {
    confirmRoots(
      arg0: BytesLike,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    rollup(overrides?: CallOverrides): Promise<BigNumber>

    setupConfirmData(
      nodeNum: BigNumberish,
      beforeSendAcc: BytesLike,
      sendsData: BytesLike,
      sendLengths: BigNumberish[],
      afterSendCount: BigNumberish,
      afterLogAcc: BytesLike,
      afterLogCount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>
  }

  populateTransaction: {
    confirmRoots(
      arg0: BytesLike,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    rollup(overrides?: CallOverrides): Promise<PopulatedTransaction>

    setupConfirmData(
      nodeNum: BigNumberish,
      beforeSendAcc: BytesLike,
      sendsData: BytesLike,
      sendLengths: BigNumberish[],
      afterSendCount: BigNumberish,
      afterLogAcc: BytesLike,
      afterLogCount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>
  }
}
