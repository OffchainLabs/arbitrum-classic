/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts'

import type { FastExitMock } from '../FastExitMock'

export class FastExitMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(overrides?: Overrides): Promise<FastExitMock> {
    return super.deploy(overrides || {}) as Promise<FastExitMock>
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): FastExitMock {
    return super.attach(address) as FastExitMock
  }
  connect(signer: Signer): FastExitMock__factory {
    return super.connect(signer) as FastExitMock__factory
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FastExitMock {
    return new Contract(address, _abi, signerOrProvider) as FastExitMock
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'dest',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'erc20',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'exitNum',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'liquidityProof',
        type: 'bytes',
      },
    ],
    name: 'requestLiquidity',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fee',
        type: 'uint256',
      },
    ],
    name: 'setFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60806040526000805534801561001457600080fd5b50610204806100246000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806369fe0e2d1461003b578063effc168b1461005a575b600080fd5b6100586004803603602081101561005157600080fd5b50356100ef565b005b610058600480360360a081101561007057600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a0810160808201356401000000008111156100b057600080fd5b8201836020820111156100c257600080fd5b803590602001918460018302840111640100000000831117156100e457600080fd5b5090925090506100f4565b600055565b6000548411610136576040805162461bcd60e51b8152602060048201526009602482015268554e444552464c4f5760b81b604482015290519081900360640190fd5b846001600160a01b031663a9059cbb8760005487036040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561019a57600080fd5b505af11580156101ae573d6000803e3d6000fd5b505050506040513d60208110156101c457600080fd5b505050505050505056fea26469706673582212208b80add5eadedf403645f3cd5ca9bcc49a619968dab2124fd932a8d007eef4bb64736f6c634300060b0033'
