/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts'

import type { PassiveFastExitManager } from '../PassiveFastExitManager'

export class PassiveFastExitManager__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(overrides?: Overrides): Promise<PassiveFastExitManager> {
    return super.deploy(overrides || {}) as Promise<PassiveFastExitManager>
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): PassiveFastExitManager {
    return super.attach(address) as PassiveFastExitManager
  }
  connect(signer: Signer): PassiveFastExitManager__factory {
    return super.connect(signer) as PassiveFastExitManager__factory
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PassiveFastExitManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PassiveFastExitManager
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'erc20',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'onExitTransfered',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridge',
        type: 'address',
      },
    ],
    name: 'setBridge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b5061075f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638dd148021461003b578063f996ec0014610063575b600080fd5b6100616004803603602081101561005157600080fd5b50356001600160a01b031661010d565b005b6100f06004803603608081101561007957600080fd5b6001600160a01b038235811692602081013592604082013590921691810190608081016060820135600160201b8111156100b257600080fd5b8201836020820111156100c457600080fd5b803590602001918460018302840111600160201b831117156100e557600080fd5b50909250905061012f565b604080516001600160e01b03199092168252519081900360200190f35b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b0316331461017d576040805162461bcd60e51b815260206004820152600b60248201526a4f4e4c595f42524944474560a81b604482015290519081900360640190fd5b600080600080606080888860c081101561019657600080fd5b6001600160a01b038235811692602081013592604082013592606083013516919081019060a081016080820135600160201b8111156101d457600080fd5b8201836020820111156101e657600080fd5b803590602001918460018302840111600160201b8311171561020757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561025957600080fd5b82018360208201111561026b57600080fd5b803590602001918460018302840111600160201b8311171561028c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505095509550955095509550955060008a6001600160a01b03166370a082318e6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561033d57600080fd5b505afa158015610351573d6000803e3d6000fd5b505050506040513d602081101561036757600080fd5b81019080805190602001909291905050509050836001600160a01b031663effc168b888d8f8a886040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156104165781810151838201526020016103fe565b50505050905090810190601f1680156104435780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b15801561046657600080fd5b505af115801561047a573d6000803e3d6000fd5b5050505060008b6001600160a01b03166370a082318f6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156104d657600080fd5b505afa1580156104ea573d6000803e3d6000fd5b505050506040513d602081101561050057600080fd5b5051905061050e8d876106a0565b61051882846106a0565b10156105555760405162461bcd60e51b815260040180806020018281038252602c8152602001806106fe602c913960400191505060405180910390fd5b50506000809054906101000a90046001600160a01b03166001600160a01b0316631eb032f9878c8e8988876040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001858152602001848152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610620578181015183820152602001610608565b50505050905090810190601f16801561064d5780820380516001836020036101000a031916815260200191505b50975050505050505050600060405180830381600087803b15801561067157600080fd5b505af1158015610685573d6000803e3d6000fd5b50623e65bb60ea1b9f9e505050505050505050505050505050565b6000828211156106f7576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe5573657220646964206e6f7420676574206372656469746564207769746820656e6f75676820746f6b656e73a26469706673582212200d2f300ed9479a62451726d6e44c280322ca8e27957f60b802bae30d1c87e29164736f6c634300060b0033'
