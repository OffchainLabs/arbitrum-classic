/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from 'ethers'
import { Provider } from '@ethersproject/providers'

import type { INodeFactory } from '../INodeFactory'

export class INodeFactory__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): INodeFactory {
    return new Contract(address, _abi, signerOrProvider) as INodeFactory
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_stateHash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: '_challengeHash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: '_confirmData',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: '_prev',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_deadlineBlock',
        type: 'uint256',
      },
    ],
    name: 'createNode',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]
