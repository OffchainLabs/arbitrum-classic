/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts'

import type { RollupMock } from '../RollupMock'

export class RollupMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(overrides?: Overrides): Promise<RollupMock> {
    return super.deploy(overrides || {}) as Promise<RollupMock>
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): RollupMock {
    return super.attach(address) as RollupMock
  }
  connect(signer: Signer): RollupMock__factory {
    return super.connect(signer) as RollupMock__factory
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RollupMock {
    return new Contract(address, _abi, signerOrProvider) as RollupMock
  }
}

const _abi = [
  {
    inputs: [],
    name: 'sequencerInboxMaxDelayBlocks',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sequencerInboxMaxDelaySeconds',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_sequencerInboxMaxDelayBlocks',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_sequencerInboxMaxDelaySeconds',
        type: 'uint256',
      },
    ],
    name: 'setMock',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b5060ce8061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806314828f9214604157806327ce1def146059578063addd678414607b575b600080fd5b60476081565b60408051918252519081900360200190f35b607960048036036040811015606d57600080fd5b50803590602001356087565b005b60476092565b60005481565b600091909155600155565b6001548156fea26469706673582212200ecc187ffc470598e9b940c7c05f6e051c104c4157b2317394a65ea645bd3f7e64736f6c634300060b0033'
