/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { BridgeMock, BridgeMockInterface } from '../BridgeMock'

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'outbox',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'destAddr',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'BridgeCallTriggered',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'inbox',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    name: 'InboxToggle',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'messageIndex',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'beforeInboxAcc',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'inbox',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint8',
        name: 'kind',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'messageDataHash',
        type: 'bytes32',
      },
    ],
    name: 'MessageDelivered',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'outbox',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    name: 'OutboxToggle',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'activeOutbox',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'allowedInboxList',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'inbox',
        type: 'address',
      },
    ],
    name: 'allowedInboxes',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'allowedOutboxList',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'outbox',
        type: 'address',
      },
    ],
    name: 'allowedOutboxes',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'kind',
        type: 'uint8',
      },
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'messageDataHash',
        type: 'bytes32',
      },
    ],
    name: 'deliverMessageToInbox',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'kind',
        type: 'uint8',
      },
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'blockNumber',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'blockTimestamp',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasPrice',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'messageDataHash',
        type: 'bytes32',
      },
    ],
    name: 'deliverMessageToInboxTest',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'destAddr',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'executeCall',
    outputs: [
      {
        internalType: 'bool',
        name: 'success',
        type: 'bool',
      },
      {
        internalType: 'bytes',
        name: 'returnData',
        type: 'bytes',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'inboxAccs',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'messageCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'inbox',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    name: 'setInbox',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'outbox',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    name: 'setOutbox',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b50606980546001600160a01b0319163317905561134b806100326000396000f3fe6080604052600436106100d35760003560e01c80639e5d4c491161007a5780639e5d4c491461022c578063ab5d894314610341578063c29372de14610356578063cee3d72814610389578063d9dd67ab146103c4578063da9b1caf146103ee578063e45b7ce614610435578063f2fde38b14610470576100d3565b806302bbfad1146100d85780633dbcc8d11461011f578063413b35bd14610134578063715018a61461017b5780637ee94329146101925780638129fc1c146101d85780638da5cb5b146101ed578063945e114714610202575b600080fd5b61010d600480360360608110156100ee57600080fd5b5060ff813516906001600160a01b0360208201351690604001356104a3565b60408051918252519081900360200190f35b34801561012b57600080fd5b5061010d610511565b34801561014057600080fd5b506101676004803603602081101561015757600080fd5b50356001600160a01b0316610517565b604080519115158252519081900360200190f35b34801561018757600080fd5b50610190610538565b005b34801561019e57600080fd5b506101bc600480360360208110156101b557600080fd5b50356105d2565b604080516001600160a01b039092168252519081900360200190f35b3480156101e457600080fd5b506101906105f9565b3480156101f957600080fd5b506101bc6106a3565b34801561020e57600080fd5b506101bc6004803603602081101561022557600080fd5b50356106b2565b34801561023857600080fd5b506102be6004803603606081101561024f57600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561027f57600080fd5b82018360208201111561029157600080fd5b803590602001918460018302840111640100000000831117156102b357600080fd5b5090925090506106bf565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b838110156103055781810151838201526020016102ed565b50505050905090810190601f1680156103325780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561034d57600080fd5b506101bc610893565b34801561036257600080fd5b506101676004803603602081101561037957600080fd5b50356001600160a01b03166108a2565b34801561039557600080fd5b50610190600480360360408110156103ac57600080fd5b506001600160a01b03813516906020013515156108c3565b3480156103d057600080fd5b5061010d600480360360208110156103e757600080fd5b5035610b3c565b61010d600480360360c081101561040457600080fd5b5060ff813516906001600160a01b036020820135169060408101359060608101359060808101359060a00135610b5a565b34801561044157600080fd5b506101906004803603604081101561045857600080fd5b506001600160a01b0381351690602001351515610b75565b34801561047c57600080fd5b506101906004803603602081101561049357600080fd5b50356001600160a01b0316610dec565b3360009081526065602052604081206001015460ff166104fb576040805162461bcd60e51b815260206004820152600e60248201526d09c9ea8be8ca49e9abe929c849eb60931b604482015290519081900360640190fd5b610509848443423a87610edd565b949350505050565b606a5490565b6001600160a01b031660009081526066602052604090206001015460ff1690565b610540610fa0565b6001600160a01b03166105516106a3565b6001600160a01b03161461059a576040805162461bcd60e51b815260206004820181905260248201526000805160206112d6833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316906000805160206112f6833981519152908390a3603380546001600160a01b0319169055565b606781815481106105df57fe5b6000918252602090912001546001600160a01b0316905081565b600054610100900460ff16806106125750610612610fa4565b80610620575060005460ff16155b61065b5760405162461bcd60e51b815260040180806020018281038252602e8152602001806112a8602e913960400191505060405180910390fd5b600054610100900460ff16158015610686576000805460ff1961ff0019909116610100171660011790555b61068e610fb5565b80156106a0576000805461ff00191690555b50565b6033546001600160a01b031690565b606881815481106105df57fe5b3360009081526066602052604081206001015460609060ff1661071b576040805162461bcd60e51b815260206004820152600f60248201526e09c9ea8be8ca49e9abe9eaaa8849eb608b1b604482015290519081900360640190fd5b821561077657610733866001600160a01b0316611052565b610776576040805162461bcd60e51b815260206004820152600f60248201526e1393d7d0d3d11157d05517d11154d5608a1b604482015290519081900360640190fd5b606980546001600160a01b0319811633179091556040516001600160a01b0391821691881690879087908790808383808284376040519201945060009350909150508083038185875af1925050503d80600081146107f0576040519150601f19603f3d011682016040523d82523d6000602084013e6107f5565b606091505b50606980546001600160a01b0319166001600160a01b0385811691909117909155604080518a81526020810182815291810189905293965091945089169133917f2d9d115ef3e4a606d698913b1eae831a3cdfe20d9a83d48007b0526749c3d466918a918a918a9160608201848480828437600083820152604051601f909101601f1916909201829003965090945050505050a35094509492505050565b6069546001600160a01b031681565b6001600160a01b031660009081526065602052604090206001015460ff1690565b6108cb610fa0565b6001600160a01b03166108dc6106a3565b6001600160a01b031614610925576040805162461bcd60e51b815260206004820181905260248201526000805160206112d6833981519152604482015290519081900360640190fd5b6001600160a01b0382166000818152606660209081526040918290206001810154835186151581529351919460ff9091169390927f49477e7356dbcb654ab85d7534b50126772d938130d1350e23e2540370c8dffa92918290030190a280801561098c5750825b8061099e57508015801561099e575082155b156109aa575050610b38565b8215610a3957604080518082018252606880548252600160208084018281526001600160a01b038a16600081815260669093529582209451855551938201805460ff1916941515949094179093558154908101825591527fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c220977530180546001600160a01b0319169091179055610b35565b606880546000198101908110610a4b57fe5b6000918252602090912001548254606880546001600160a01b03909316929091908110610a7457fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508160000154606660006068856000015481548110610abc57fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020556068805480610aec57fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03861682526066905260408120908155600101805460ff191690555b50505b5050565b606a8181548110610b4957fe5b600091825260209091200154905081565b6000610b6a878787878787610edd565b979650505050505050565b610b7d610fa0565b6001600160a01b0316610b8e6106a3565b6001600160a01b031614610bd7576040805162461bcd60e51b815260206004820181905260248201526000805160206112d6833981519152604482015290519081900360640190fd5b6001600160a01b0382166000818152606560209081526040918290206001810154835186151581529351919460ff9091169390927f6675ce8882cb71637de5903a193d218cc0544be9c0650cb83e0955f6aa2bf52192918290030190a2808015610c3e5750825b80610c50575080158015610c50575082155b15610c5c575050610b38565b8215610ceb57604080518082018252606780548252600160208084018281526001600160a01b038a16600081815260659093529582209451855551938201805460ff1916941515949094179093558154908101825591527f9787eeb91fe3101235e4a76063c7023ecb40f923f97916639c598592fa30d6ae0180546001600160a01b0319169091179055610b35565b606780546000198101908110610cfd57fe5b6000918252602090912001548254606780546001600160a01b03909316929091908110610d2657fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508160000154606560006067856000015481548110610d6e57fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020556067805480610d9e57fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03861682526065905260408120908155600101805460ff1916905550505050565b610df4610fa0565b6001600160a01b0316610e056106a3565b6001600160a01b031614610e4e576040805162461bcd60e51b815260206004820181905260248201526000805160206112d6833981519152604482015290519081900360640190fd5b6001600160a01b038116610e935760405162461bcd60e51b81526004018080602001828103825260268152602001806112826026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216906000805160206112f683398151915290600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b606a5460009081610ef389898989868a8a611058565b905060008215610f1b57606a6001840381548110610f0d57fe5b906000526020600020015490505b606a610f2782846110ce565b8154600181018355600092835260209283902001556040805133815260ff8d16928101929092526001600160a01b038b16828201526060820187905251829185917f23be8e12e420b5da9fb98d8102572f640fb3c11a0085060472dfc0ed194b3cf79181900360800190a3509098975050505050505050565b3390565b6000610faf30611052565b15905090565b600054610100900460ff1680610fce5750610fce610fa4565b80610fdc575060005460ff16155b6110175760405162461bcd60e51b815260040180806020018281038252602e8152602001806112a8602e913960400191505060405180910390fd5b600054610100900460ff16158015611042576000805460ff1961ff0019909116610100171660011790555b61104a6110fa565b61068e61119a565b3b151590565b6040805160f89890981b6001600160f81b0319166020808a019190915260609790971b6bffffffffffffffffffffffff19166021890152603588019590955260558701939093526075860191909152609585015260b5808501919091528151808503909101815260d59093019052815191012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600054610100900460ff16806111135750611113610fa4565b80611121575060005460ff16155b61115c5760405162461bcd60e51b815260040180806020018281038252602e8152602001806112a8602e913960400191505060405180910390fd5b600054610100900460ff1615801561068e576000805460ff1961ff00199091166101001716600117905580156106a0576000805461ff001916905550565b600054610100900460ff16806111b357506111b3610fa4565b806111c1575060005460ff16155b6111fc5760405162461bcd60e51b815260040180806020018281038252602e8152602001806112a8602e913960400191505060405180910390fd5b600054610100900460ff16158015611227576000805460ff1961ff0019909116610100171660011790555b6000611231610fa0565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000906000805160206112f6833981519152908290a35080156106a0576000805461ff00191690555056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212202c90d3be7bc8ca6c224a6f681035de64ecce2b9107f20294c40bd3a9ec5d4e2364736f6c634300060b0033'

export class BridgeMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgeMock> {
    return super.deploy(overrides || {}) as Promise<BridgeMock>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): BridgeMock {
    return super.attach(address) as BridgeMock
  }
  connect(signer: Signer): BridgeMock__factory {
    return super.connect(signer) as BridgeMock__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): BridgeMockInterface {
    return new utils.Interface(_abi) as BridgeMockInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeMock {
    return new Contract(address, _abi, signerOrProvider) as BridgeMock
  }
}
