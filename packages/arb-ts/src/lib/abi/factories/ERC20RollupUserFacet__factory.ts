/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  ERC20RollupUserFacet,
  ERC20RollupUserFacetInterface,
} from '../ERC20RollupUserFacet'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nodeNum',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'afterSendAcc',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'afterSendCount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'afterLogAcc',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'afterLogCount',
        type: 'uint256',
      },
    ],
    name: 'NodeConfirmed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nodeNum',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'parentNodeHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'nodeHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'executionHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'inboxMaxCount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'afterInboxBatchEndCount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'afterInboxBatchAcc',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'bytes32[3][2]',
        name: 'assertionBytes32Fields',
        type: 'bytes32[3][2]',
      },
      {
        indexed: false,
        internalType: 'uint256[4][2]',
        name: 'assertionIntFields',
        type: 'uint256[4][2]',
      },
    ],
    name: 'NodeCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nodeNum',
        type: 'uint256',
      },
    ],
    name: 'NodeRejected',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'startNode',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'endNode',
        type: 'uint256',
      },
    ],
    name: 'NodesDestroyed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'OwnerFunctionCalled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'challengeContract',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'asserter',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'challenger',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'challengedNode',
        type: 'uint256',
      },
    ],
    name: 'RollupChallengeStarted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'machineHash',
        type: 'bytes32',
      },
    ],
    name: 'RollupCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'staker',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newNode',
        type: 'uint256',
      },
    ],
    name: 'StakerReassigned',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: '_stakerMap',
    outputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'latestStakedNode',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amountStaked',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'currentChallenge',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'isStaked',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'stakerAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenAmount',
        type: 'uint256',
      },
    ],
    name: 'addToDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'staker',
        type: 'address',
      },
    ],
    name: 'amountStaked',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'arbGasSpeedLimitPerBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'baseStake',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'challengeExecutionBisectionDegree',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'challengeFactory',
    outputs: [
      {
        internalType: 'contract IChallengeFactory',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'winningStaker',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'losingStaker',
        type: 'address',
      },
    ],
    name: 'completeChallenge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'beforeSendAcc',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'sendsData',
        type: 'bytes',
      },
      {
        internalType: 'uint256[]',
        name: 'sendLengths',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256',
        name: 'afterSendCount',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'afterLogAcc',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'afterLogCount',
        type: 'uint256',
      },
    ],
    name: 'confirmNextNode',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'confirmPeriodBlocks',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract INode',
        name: 'node',
        type: 'address',
      },
    ],
    name: 'countStakedZombies',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address payable[2]',
        name: 'stakers',
        type: 'address[2]',
      },
      {
        internalType: 'uint256[2]',
        name: 'nodeNums',
        type: 'uint256[2]',
      },
      {
        internalType: 'bytes32[2]',
        name: 'executionHashes',
        type: 'bytes32[2]',
      },
      {
        internalType: 'uint256[2]',
        name: 'proposedTimes',
        type: 'uint256[2]',
      },
      {
        internalType: 'uint256[2]',
        name: 'maxMessageCounts',
        type: 'uint256[2]',
      },
    ],
    name: 'createChallenge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'staker',
        type: 'address',
      },
    ],
    name: 'currentChallenge',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRequiredStake',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'delayedBridge',
    outputs: [
      {
        internalType: 'contract IBridge',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'extraChallengeTimeBlocks',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'firstUnresolvedNode',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'nodeNum',
        type: 'uint256',
      },
    ],
    name: 'getNode',
    outputs: [
      {
        internalType: 'contract INode',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'getNodeHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'stakerNum',
        type: 'uint256',
      },
    ],
    name: 'getStakerAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_stakeToken',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isMaster',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'staker',
        type: 'address',
      },
    ],
    name: 'isStaked',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'staker',
        type: 'address',
      },
    ],
    name: 'isZombie',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastStakeBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'latestConfirmed',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'latestNodeCreated',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'staker',
        type: 'address',
      },
    ],
    name: 'latestStakedNode',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minimumAssertionPeriod',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenAmount',
        type: 'uint256',
      },
    ],
    name: 'newStake',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nodeFactory',
    outputs: [
      {
        internalType: 'contract INodeFactory',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'outbox',
    outputs: [
      {
        internalType: 'contract IOutbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'target',
        type: 'uint256',
      },
    ],
    name: 'reduceDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'stakerAddress',
        type: 'address',
      },
    ],
    name: 'rejectNextNode',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'startIndex',
        type: 'uint256',
      },
    ],
    name: 'removeOldZombies',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'zombieNum',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maxNodes',
        type: 'uint256',
      },
    ],
    name: 'removeZombie',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'nodeNum',
        type: 'uint256',
      },
    ],
    name: 'requireUnresolved',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'requireUnresolvedExists',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'blockNumber',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'firstUnresolvedNodeNum',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'latestNodeCreated',
        type: 'uint256',
      },
    ],
    name: 'requiredStake',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'stakerAddress',
        type: 'address',
      },
    ],
    name: 'returnOldDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rollupEventBridge',
    outputs: [
      {
        internalType: 'contract RollupEventBridge',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sequencerBridge',
    outputs: [
      {
        internalType: 'contract ISequencerInbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sequencerInboxMaxDelayBlocks',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sequencerInboxMaxDelaySeconds',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'nodeNum',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'nodeHash',
        type: 'bytes32',
      },
    ],
    name: 'stakeOnExistingNode',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'expectedNodeHash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32[3][2]',
        name: 'assertionBytes32Fields',
        type: 'bytes32[3][2]',
      },
      {
        internalType: 'uint256[4][2]',
        name: 'assertionIntFields',
        type: 'uint256[4][2]',
      },
      {
        internalType: 'uint256',
        name: 'beforeProposedBlock',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'beforeInboxMaxCount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'sequencerBatchProof',
        type: 'bytes',
      },
    ],
    name: 'stakeOnNewNode',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakeToken',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakerCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address payable',
        name: 'destination',
        type: 'address',
      },
    ],
    name: 'withdrawStakerFunds',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'withdrawableFunds',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'zombieNum',
        type: 'uint256',
      },
    ],
    name: 'zombieAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'zombieCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'zombieNum',
        type: 'uint256',
      },
    ],
    name: 'zombieLatestStakedNode',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b506000805460ff19908116600117909155600b805490911690556150ba806100396000396000f3fe608060405234801561001057600080fd5b50600436106102ed5760003560e01c80637427be5111610193578063d735e21d116100e4578063f31d863f11610092578063f31d863f146107d7578063f33e1fac146108a8578063f3f0a03e146108c5578063f51de41b146108f1578063f8d1f194146108f9578063fa7803e614610916578063fb64884e14610944576102ed565b8063d735e21d14610718578063d93fe9c414610720578063dc72a33b14610728578063dff6978714610730578063e8bd492214610738578063edfd03ed14610794578063ef40a670146107b1576102ed565b80638da5cb5b116101415780638da5cb5b1461068f57806391c657e8146106975780639e8a713f146106bd578063addd6784146106c5578063c4d66de8146106cd578063ce11e6ab146106f3578063d01e6602146106fb576102ed565b80637427be511461060057806376e7e23b14610626578063771b2f971461062e5780637ba9534a146106365780637e2d21551461063e57806381fbc98a146106615780638640ce5f14610687576102ed565b80634f0f4aa91161024d57806363721d6b116101fb57806363721d6b1461056b57806365f7f80d1461057357806367425daf1461057b57806369fd251c146105835780636b94c33b146105a95780636f791d29146105cf5780636f7d0026146105d7576102ed565b80634f0f4aa9146104d757806351ed6a30146104f45780635c975abb146104fc5780635dbaf68b146105185780635e8ef106146105205780636177fd181461052857806362a82d7d1461054e576102ed565b80633e55c0c7116102aa5780633e55c0c71461039c5780633e96576e146103c05780633fe38627146103e6578063414f23fe1461047657806345e38b6414610499578063488ed1a9146104a15780634d26732d146104cf576102ed565b806304a28064146102f257806314828f921461032a5780631e83d30f146103325780632b2af0ab146103515780632e7acfa61461036e5780632f30cabd14610376575b600080fd5b6103186004803603602081101561030857600080fd5b50356001600160a01b0316610961565b60408051918252519081900360200190f35b610318610a22565b61034f6004803603602081101561034857600080fd5b5035610a28565b005b61034f6004803603602081101561036757600080fd5b5035610af4565b610318610b90565b6103186004803603602081101561038c57600080fd5b50356001600160a01b0316610b96565b6103a4610bb1565b604080516001600160a01b039092168252519081900360200190f35b610318600480360360208110156103d657600080fd5b50356001600160a01b0316610bc0565b61034f60048036036102408110156103fd57600080fd5b813591602081019160e08201916101e08101359161020082013591908101906102408101610220820135600160201b81111561043857600080fd5b82018360208201111561044a57600080fd5b803590602001918460018302840111600160201b8311171561046b57600080fd5b509092509050610bde565b61034f6004803603604081101561048c57600080fd5b5080359060200135611521565b610318611740565b61034f60048036036101408110156104b857600080fd5b50604081016080820160c083016101008401611746565b61031861204c565b6103a4600480360360208110156104ed57600080fd5b5035612071565b6103a461208c565b61050461209b565b604080519115158252519081900360200190f35b6103a46120a4565b6103186120b3565b6105046004803603602081101561053e57600080fd5b50356001600160a01b03166120b9565b6103a46004803603602081101561056457600080fd5b50356120e1565b61031861210b565b610318612111565b61034f612117565b6103a46004803603602081101561059957600080fd5b50356001600160a01b0316612181565b61034f600480360360208110156105bf57600080fd5b50356001600160a01b03166121a2565b6105046125f6565b610318600480360360608110156105ed57600080fd5b50803590602081013590604001356125ff565b61034f6004803603602081101561061657600080fd5b50356001600160a01b0316612616565b610318612715565b61031861271b565b610318612721565b61034f6004803603604081101561065457600080fd5b5080359060200135612727565b6103186004803603602081101561067757600080fd5b50356001600160a01b0316612964565b610318612ad8565b6103a4612ade565b610504600480360360208110156106ad57600080fd5b50356001600160a01b0316612aed565b6103a4612b47565b610318612b56565b61034f600480360360208110156106e357600080fd5b50356001600160a01b0316612b5c565b6103a4612c19565b6103a46004803603602081101561071157600080fd5b5035612c28565b610318612c57565b6103a4612c5d565b610318612c6c565b610318612c72565b61075e6004803603602081101561074e57600080fd5b50356001600160a01b0316612c78565b604080519586526020860194909452848401929092526001600160a01b0316606084015215156080830152519081900360a00190f35b61034f600480360360208110156107aa57600080fd5b5035612cb4565b610318600480360360208110156107c757600080fd5b50356001600160a01b0316612d19565b61034f600480360360c08110156107ed57600080fd5b81359190810190604081016020820135600160201b81111561080e57600080fd5b82018360208201111561082057600080fd5b803590602001918460018302840111600160201b8311171561084157600080fd5b919390929091602081019035600160201b81111561085e57600080fd5b82018360208201111561087057600080fd5b803590602001918460208302840111600160201b8311171561089157600080fd5b919350915080359060208101359060400135612d37565b610318600480360360208110156108be57600080fd5b503561331e565b61034f600480360360408110156108db57600080fd5b506001600160a01b038135169060200135613346565b6103a46134b7565b6103186004803603602081101561090f57600080fd5b50356134c6565b61034f6004803603604081101561092c57600080fd5b506001600160a01b03813581169160200135166134d8565b61034f6004803603602081101561095a57600080fd5b5035613588565b60008061096c61210b565b90506000805b82811015610a1857846001600160a01b0316639168ae7261099283612c28565b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156109d857600080fd5b505afa1580156109ec573d6000803e3d6000fd5b505050506040513d6020811015610a0257600080fd5b505115610a10576001909101905b600101610972565b509150505b919050565b60195481565b336000908152601d602052604090205460ff16610a7c576040805162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b604482015290519081900360640190fd5b610a8461209b565b15610ac4576040805162461bcd60e51b81526020600482015260106024820152600080516020615065833981519152604482015290519081900360640190fd5b610acd336136f4565b6000610ad761204c565b905080821015610ae5578091505b610aef338361378b565b505050565b610afc612c57565b811015610b42576040805162461bcd60e51b815260206004820152600f60248201526e1053149150511657d11150d2511151608a1b604482015290519081900360640190fd5b610b4a612721565b811115610b8d576040805162461bcd60e51b815260206004820152600c60248201526b1113d154d39517d1561254d560a21b604482015290519081900360640190fd5b50565b600c5481565b6001600160a01b03166000908152600a602052604090205490565b6011546001600160a01b031681565b6001600160a01b031660009081526008602052604090206001015490565b336000908152601d602052604090205460ff16610c32576040805162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b604482015290519081900360640190fd5b610c3a61209b565b15610c7a576040805162461bcd60e51b81526020600482015260106024820152600080516020615065833981519152604482015290519081900360640190fd5b610c83336120b9565b610cc1576040805162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b604482015290519081900360640190fd5b6000610ccc33610bc0565b9050610cd6614f75565b6000610ce183612071565b90506000601160009054906101000a90046001600160a01b03166001600160a01b0316633dbcc8d16040518163ffffffff1660e01b815260040160206040518083038186803b158015610d3357600080fd5b505afa158015610d47573d6000803e3d6000fd5b505050506040513d6020811015610d5d57600080fd5b50519050610d69614faa565b60408051808201909152610e23908c60026000835b82821015610dbf5760408051606081810190925290808402860190600390839083908082843760009201919091525050508152600190910190602001610d7e565b50506040805180820190915291508d905060026000835b82821015610e175760408051608081810190925290808402860190600490839083908082843760009201919091525050508152600190910190602001610dd6565b505050508b8b86613858565b90506000806000856001600160a01b031663701da98e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e6357600080fd5b505afa158015610e77573d6000803e3d6000fd5b505050506040513d6020811015610e8d57600080fd5b50518451610e9a906138a6565b14610ede576040805162461bcd60e51b815260206004820152600f60248201526e0a0a48aacbea6a882a88abe9082a69608b1b604482015290519081900360640190fd5b6011546020850151604090810151815163036648d960e11b81526024810182905260048101928352604481018d90526001600160a01b03909316926306cc91b2928e928e929091908190606401858580828437600081840152601f19601f820116905080830192505050945050505050604080518083038186803b158015610f6557600080fd5b505afa158015610f79573d6000803e3d6000fd5b505050506040513d6040811015610f8f57600080fd5b508051602090910151855160e001519194509250600090610fb790439063ffffffff61393b16565b9050601854811015610ffd576040805162461bcd60e51b815260206004820152600a60248201526954494d455f44454c544160b01b604482015290519081900360640190fd5b845151602086015151600091611019919063ffffffff61393b16565b90508560000151610100015186602001516040015110158061104e5750600e5461104a90839063ffffffff61399816565b8110155b8061107a57508551606090810151602088015190910151606491611078919063ffffffff61393b16565b145b6110b7576040805162461bcd60e51b81526020600482015260096024820152681513d3d7d4d350531360ba1b604482015290519081900360640190fd5b6110dd60046110d1600e548561399890919063ffffffff16565b9063ffffffff61399816565b81111561111d576040805162461bcd60e51b8152602060048201526009602482015268544f4f5f4c4152474560b81b604482015290519081900360640190fd5b600e546000906111549061114861113b82600163ffffffff61393b16565b859063ffffffff6139f116565b9063ffffffff613a4b16565b90506111e8816111dc611172600c54436139f190919063ffffffff16565b8c6001600160a01b0316632edfb42a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111ab57600080fd5b505afa1580156111bf573d6000803e3d6000fd5b505050506040513d60208110156111d557600080fd5b5051613ab2565b9063ffffffff6139f116565b93506000896001600160a01b031663f0dd77ff6040518163ffffffff1660e01b815260040160206040518083038186803b15801561122557600080fd5b505afa158015611239573d6000803e3d6000fd5b505050506040513d602081101561124f57600080fd5b5051905080156112a15761129e8561126683612071565b6001600160a01b0316632edfb42a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111ab57600080fd5b94505b50508686602001516040015111156112f1576040805162461bcd60e51b815260206004820152600e60248201526d12539093d617d41054d517d1539160921b604482015290519081900360640190fd5b5050600080600080896001600160a01b031663f0dd77ff6040518163ffffffff1660e01b815260040160206040518083038186803b15801561133257600080fd5b505afa158015611346573d6000803e3d6000fd5b505050506040513d602081101561135c57600080fd5b505111905080156113db576113d4896001600160a01b031663f0dd77ff6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113a357600080fd5b505afa1580156113b7573d6000803e3d6000fd5b505050506040513d60208110156113cd57600080fd5b50516134c6565b91506113e7565b6113e48b6134c6565b91505b6113f6878588888f8787613ac8565b9a50925050508f8114611447576040805162461bcd60e51b81526020600482015260146024820152730aa9c8ab0a08a86a88a88be9c9e888abe9082a6960631b604482015290519081900360640190fd5b61145b33611453612721565b600c54613d7e565b5050505050505061146b826134c6565b611473612721565b7f8016306209aff73e79f274cf38a41928996f746e2953111902e1f55be1713a548b84608001518560400151866000015187602001518f8f6040518088815260200187815260200186815260200185815260200184815260200183600260600280828437600083820152601f01601f191690910190508261010080828437600083820152604051601f909101601f1916909201829003995090975050505050505050a3505050505050505050565b336000908152601d602052604090205460ff16611575576040805162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b604482015290519081900360640190fd5b61157d61209b565b156115bd576040805162461bcd60e51b81526020600482015260106024820152600080516020615065833981519152604482015290519081900360640190fd5b6115c6336120b9565b611604576040805162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b604482015290519081900360640190fd5b8061160e836134c6565b1461164d576040805162461bcd60e51b815260206004820152600a6024820152694e4f44455f52454f524760b01b604482015290519081900360640190fd5b611655612c57565b821015801561166b5750611667612721565b8211155b61167457600080fd5b600061167f83612071565b9050806001600160a01b031663479c92546040518163ffffffff1660e01b815260040160206040518083038186803b1580156116ba57600080fd5b505afa1580156116ce573d6000803e3d6000fd5b505050506040513d60208110156116e457600080fd5b50516116ef33610bc0565b14611733576040805162461bcd60e51b815260206004820152600f60248201526e2727aa2fa9aa20a5a2a22fa82922ab60891b604482015290519081900360640190fd5b610aef3384600c54613d7e565b60185481565b336000908152601d602052604090205460ff1661179a576040805162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b604482015290519081900360640190fd5b6117a261209b565b156117e2576040805162461bcd60e51b81526020600482015260106024820152600080516020615065833981519152604482015290519081900360640190fd5b6020840135843510611829576040805162461bcd60e51b815260206004820152600b60248201526a2ba927a723afa7a92222a960a91b604482015290519081900360640190fd5b611831612721565b60208501351115611878576040805162461bcd60e51b815260206004820152600c60248201526b1393d517d41493d413d4d15160a21b604482015290519081900360640190fd5b8335611882612111565b106118c8576040805162461bcd60e51b81526020600482015260116024820152701053149150511657d0d3d3919254935151607a1b604482015290519081900360640190fd5b60006118da85825b6020020135612071565b905060006118e98660016118d0565b9050806001600160a01b031663479c92546040518163ffffffff1660e01b815260040160206040518083038186803b15801561192457600080fd5b505afa158015611938573d6000803e3d6000fd5b505050506040513d602081101561194e57600080fd5b5051604080516311e7249560e21b815290516001600160a01b0385169163479c9254916004808301926020929190829003018186803b15801561199057600080fd5b505afa1580156119a4573d6000803e3d6000fd5b505050506040513d60208110156119ba57600080fd5b5051146119fa576040805162461bcd60e51b81526020600482015260096024820152682224a3232fa82922ab60b91b604482015290519081900360640190fd5b611a148760005b60200201356001600160a01b03166136f4565b611a1f876001611a01565b604080516348b4573960e11b81526001600160a01b03893581166004830152915191841691639168ae7291602480820192602092909190829003018186803b158015611a6a57600080fd5b505afa158015611a7e573d6000803e3d6000fd5b505050506040513d6020811015611a9457600080fd5b5051611adc576040805162461bcd60e51b815260206004820152601260248201527114d51052d1548c57d393d517d4d51052d15160721b604482015290519081900360640190fd5b604080516348b4573960e11b81526001600160a01b0360208a81013582166004840152925190841692639168ae729260248082019391829003018186803b158015611b2657600080fd5b505afa158015611b3a573d6000803e3d6000fd5b505050506040513d6020811015611b5057600080fd5b5051611b98576040805162461bcd60e51b815260206004820152601260248201527114d51052d1548c97d393d517d4d51052d15160721b604482015290519081900360640190fd5b611bad853585358560005b6020020135613f17565b826001600160a01b0316635b8b22806040518163ffffffff1660e01b815260040160206040518083038186803b158015611be657600080fd5b505afa158015611bfa573d6000803e3d6000fd5b505050506040513d6020811015611c1057600080fd5b505114611c51576040805162461bcd60e51b815260206004820152600a6024820152694348414c5f484153483160b01b604482015290519081900360640190fd5b611c6660208087013590860135856001611ba3565b816001600160a01b0316635b8b22806040518163ffffffff1660e01b815260040160206040518083038186803b158015611c9f57600080fd5b505afa158015611cb3573d6000803e3d6000fd5b505050506040513d6020811015611cc957600080fd5b505114611d0a576040805162461bcd60e51b815260206004820152600a60248201526921a420a62fa420a9a41960b11b604482015290519081900360640190fd5b6000611e61611d7c846001600160a01b031663479c92546040518163ffffffff1660e01b815260040160206040518083038186803b158015611d4b57600080fd5b505afa158015611d5f573d6000803e3d6000fd5b505050506040513d6020811015611d7557600080fd5b5051612071565b6001600160a01b031663d7ff5e356040518163ffffffff1660e01b815260040160206040518083038186803b158015611db457600080fd5b505afa158015611dc8573d6000803e3d6000fd5b505050506040513d6020811015611dde57600080fd5b5051600d546111dc90818960006020020135886001600160a01b0316632edfb42a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e2957600080fd5b505afa158015611e3d573d6000803e3d6000fd5b505050506040513d6020811015611e5357600080fd5b50519063ffffffff61393b16565b90506020850135811015611e9b57611e936001600160a01b0389351689600160200201356001600160a01b0316613f4e565b505050612045565b6014546000906001600160a01b0390811690638ecaab119030908a35908935908e35168e600160200201356001600160a01b0316611ef38d600060028110611edf57fe5b60200201358a61393b90919063ffffffff16565b611f0d8e600160200201358b61393b90919063ffffffff16565b601154601054604080516001600160e01b031960e08d901b1681526001600160a01b039a8b166004820152602481019990995260448901979097529488166064880152928716608487015260a486019190915260c4850152841660e484015290921661010482015290516101248083019260209291908290030181600087803b158015611f9957600080fd5b505af1158015611fad573d6000803e3d6000fd5b505050506040513d6020811015611fc357600080fd5b50519050611fec6001600160a01b038a35168a600160200201356001600160a01b031683613fd5565b604080516001600160a01b038b35811682526020808d01358216908301528a35828401529151918316917fa5256d19d4ddaf646f4b5c1861b8d4c08238e6356b8ae36dcc49ac67fda758799181900360600190a2505050505b5050505050565b600080612057612c57565b905061206b4382612066612721565b61401f565b91505090565b6000908152600560205260409020546001600160a01b031690565b6017546001600160a01b031681565b600b5460ff1690565b6014546001600160a01b031681565b600e5481565b6001600160a01b0316600090815260086020526040902060030154600160a01b900460ff1690565b6000600782815481106120f057fe5b6000918252602090912001546001600160a01b031692915050565b60095490565b60015490565b6000612121612c57565b905061212b612111565b81118015612140575061213c612721565b8111155b610b8d576040805162461bcd60e51b815260206004820152600d60248201526c1393d7d553949154d3d3159151609a1b604482015290519081900360640190fd5b6001600160a01b039081166000908152600860205260409020600301541690565b336000908152601d602052604090205460ff166121f6576040805162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b604482015290519081900360640190fd5b6121fe61209b565b1561223e576040805162461bcd60e51b81526020600482015260106024820152600080516020615065833981519152604482015290519081900360640190fd5b612246612117565b6000612250612111565b9050600061225c612c57565b9050600061226982612071565b905082816001600160a01b031663479c92546040518163ffffffff1660e01b815260040160206040518083038186803b1580156122a557600080fd5b505afa1580156122b9573d6000803e3d6000fd5b505050506040513d60208110156122cf57600080fd5b50511415612558576122e0846120b9565b61231e576040805162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b604482015290519081900360640190fd5b61232f61232a85610bc0565b610af4565b806001600160a01b0316639168ae72856040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561238557600080fd5b505afa158015612399573d6000803e3d6000fd5b505050506040513d60208110156123af57600080fd5b5051156123f6576040805162461bcd60e51b815260206004820152601060248201526f14d51052d15117d3d397d5105491d15560821b604482015290519081900360640190fd5b806001600160a01b03166388d221c66040518163ffffffff1660e01b815260040160006040518083038186803b15801561242f57600080fd5b505afa158015612443573d6000803e3d6000fd5b5050505061245083612071565b6001600160a01b0316633aa192746040518163ffffffff1660e01b815260040160006040518083038186803b15801561248857600080fd5b505afa15801561249c573d6000803e3d6000fd5b505050506124aa6000612cb4565b6124b381610961565b816001600160a01b031663dff697876040518163ffffffff1660e01b815260040160206040518083038186803b1580156124ec57600080fd5b505afa158015612500573d6000803e3d6000fd5b505050506040513d602081101561251657600080fd5b505114612558576040805162461bcd60e51b815260206004820152600b60248201526a4841535f5354414b45525360a81b604482015290519081900360640190fd5b6125606142ca565b60135460408051630c2a09ad60e21b81526004810185905290516001600160a01b03909216916330a826b49160248082019260009290919082900301818387803b1580156125ad57600080fd5b505af11580156125c1573d6000803e3d6000fd5b50506040518492507f9f7eee12f08e41a1d1a617e76576aa2d6a1e06dbdd72d817e62b6e8dfdebe2a39150600090a250505050565b60005460ff1690565b600061260c84848461401f565b90505b9392505050565b336000908152601d602052604090205460ff1661266a576040805162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b604482015290519081900360640190fd5b61267261209b565b156126b2576040805162461bcd60e51b81526020600482015260106024820152600080516020615065833981519152604482015290519081900360640190fd5b6126ba612111565b6126c382610bc0565b1115612703576040805162461bcd60e51b815260206004820152600a6024820152691513d3d7d49150d1539560b21b604482015290519081900360640190fd5b61270c816136f4565b610b8d816142e0565b600f5481565b600d5481565b60035490565b336000908152601d602052604090205460ff1661277b576040805162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b604482015290519081900360640190fd5b61278361209b565b156127c3576040805162461bcd60e51b81526020600482015260106024820152600080516020615065833981519152604482015290519081900360640190fd5b6127cb61210b565b821115612810576040805162461bcd60e51b815260206004820152600e60248201526d4e4f5f535543485f5a4f4d42494560901b604482015290519081900360640190fd5b600061281b83612c28565b905060006128288461331e565b9050600080612835612c57565b90505b80831015801561284757508482105b1561293c57600061285784612071565b9050806001600160a01b03166396a9fdc0866040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b1580156128b157600080fd5b505af11580156128c5573d6000803e3d6000fd5b50505050806001600160a01b031663479c92546040518163ffffffff1660e01b815260040160206040518083038186803b15801561290257600080fd5b505afa158015612916573d6000803e3d6000fd5b505050506040513d602081101561292c57600080fd5b5051935050600190910190612838565b808310156129525761294d86614339565b61295c565b61295c86846143d5565b505050505050565b336000908152601d602052604081205460ff166129b8576040805162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b604482015290519081900360640190fd5b6129c061209b565b15612a00576040805162461bcd60e51b81526020600482015260106024820152600080516020615065833981519152604482015290519081900360640190fd5b6000612a0b336143fc565b6017546040805163a9059cbb60e01b81526001600160a01b03878116600483015260248201859052915193945091169163a9059cbb916044808201926020929091908290030181600087803b158015612a6357600080fd5b505af1158015612a77573d6000803e3d6000fd5b505050506040513d6020811015612a8d57600080fd5b5051612ad2576040805162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015290519081900360640190fd5b92915050565b60045490565b6016546001600160a01b031681565b6000805b600954811015612b3e5760098181548110612b0857fe5b60009182526020909120600290910201546001600160a01b0384811691161415612b36576001915050610a1d565b600101612af1565b50600092915050565b6013546001600160a01b031681565b601a5481565b6001600160a01b038116612baa576040805162461bcd60e51b815260206004820152601060248201526f2722a2a22fa9aa20a5a2afaa27a5a2a760811b604482015290519081900360640190fd5b6017546001600160a01b031615612bf7576040805162461bcd60e51b815260206004820152600c60248201526b1053149150511657d253925560a21b604482015290519081900360640190fd5b601780546001600160a01b0319166001600160a01b0392909216919091179055565b6012546001600160a01b031681565b600060098281548110612c3757fe5b60009182526020909120600290910201546001600160a01b031692915050565b60025490565b6015546001600160a01b031681565b601b5481565b60075490565b6008602052600090815260409020805460018201546002830154600390930154919290916001600160a01b03811690600160a01b900460ff1685565b6000612cbe61210b565b90506000612cca612c57565b9050825b82811015612d13575b81612ce18261331e565b1015612d0b57612cf081614339565b60001990920191828110612d0657505050610b8d565b612cd7565b600101612cce565b50505050565b6001600160a01b031660009081526008602052604090206002015490565b336000908152601d602052604090205460ff16612d8b576040805162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b604482015290519081900360640190fd5b612d9361209b565b15612dd3576040805162461bcd60e51b81526020600482015260106024820152600080516020615065833981519152604482015290519081900360640190fd5b612ddb612117565b6000612de5612c72565b11612e24576040805162461bcd60e51b815260206004820152600a6024820152694e4f5f5354414b45525360b01b604482015290519081900360640190fd5b6000612e2e612c57565b90506000612e3b82612071565b9050806001600160a01b03166388d221c66040518163ffffffff1660e01b815260040160006040518083038186803b158015612e7657600080fd5b505afa158015612e8a573d6000803e3d6000fd5b50505050612e96612111565b816001600160a01b031663479c92546040518163ffffffff1660e01b815260040160206040518083038186803b158015612ecf57600080fd5b505afa158015612ee3573d6000803e3d6000fd5b505050506040513d6020811015612ef957600080fd5b505114612f3c576040805162461bcd60e51b815260206004820152600c60248201526b24a72b20a624a22fa82922ab60a11b604482015290519081900360640190fd5b612f4c612f47612111565b612071565b6001600160a01b0316633aa192746040518163ffffffff1660e01b815260040160006040518083038186803b158015612f8457600080fd5b505afa158015612f98573d6000803e3d6000fd5b50505050612fa66000612cb4565b612fba612fb282610961565b6111dc612c72565b816001600160a01b031663dff697876040518163ffffffff1660e01b815260040160206040518083038186803b158015612ff357600080fd5b505afa158015613007573d6000803e3d6000fd5b505050506040513d602081101561301d57600080fd5b505114613062576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d0531317d4d51052d15160921b604482015290519081900360640190fd5b60006130e38a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020808e0282810182019093528d82529093508d92508c918291850190849080828437600081840152601f19601f820116905080830192505050505050508d61441b565b90506130f28b8287898861451c565b826001600160a01b03166397bdc5106040518163ffffffff1660e01b815260040160206040518083038186803b15801561312b57600080fd5b505afa15801561313f573d6000803e3d6000fd5b505050506040513d602081101561315557600080fd5b505114613198576040805162461bcd60e51b815260206004820152600c60248201526b434f4e4649524d5f4441544160a01b604482015290519081900360640190fd5b60125460408051630c72684760e01b815260048101918252604481018c90526001600160a01b0390921691630c726847918d918d918d918d919081906024810190606401878780828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b15801561324257600080fd5b505af1158015613256573d6000803e3d6000fd5b50505050613262614563565b601354604080516316b9109b60e01b81526004810186905290516001600160a01b03909216916316b9109b9160248082019260009290919082900301818387803b1580156132af57600080fd5b505af11580156132c3573d6000803e3d6000fd5b505060408051848152602081018a90528082018990526060810188905290518693507f2400bd6e429cfcd98fe43a75bbbe4702c59c99d636100690130cc1ebb611c5a292509081900360800190a25050505050505050505050565b60006009828154811061332d57fe5b9060005260206000209060020201600101549050919050565b336000908152601d602052604090205460ff1661339a576040805162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b604482015290519081900360640190fd5b6133a261209b565b156133e2576040805162461bcd60e51b81526020600482015260106024820152600080516020615065833981519152604482015290519081900360640190fd5b6133ec828261457c565b601754604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561344657600080fd5b505af115801561345a573d6000803e3d6000fd5b505050506040513d602081101561347057600080fd5b50516134b3576040805162461bcd60e51b815260206004820152600d60248201526c1514905394d1915497d1905253609a1b604482015290519081900360640190fd5b5050565b6010546001600160a01b031681565b60009081526006602052604090205490565b6134e061209b565b15613520576040805162461bcd60e51b81526020600482015260106024820152600080516020615065833981519152604482015290519081900360640190fd5b61352a828261462b565b6001600160a01b0316336001600160a01b03161461357e576040805162461bcd60e51b815260206004820152600c60248201526b2ba927a723afa9a2a72222a960a11b604482015290519081900360640190fd5b6134b38282613f4e565b336000908152601d602052604090205460ff166135dc576040805162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b604482015290519081900360640190fd5b6135e461209b565b15613624576040805162461bcd60e51b81526020600482015260106024820152600080516020615065833981519152604482015290519081900360640190fd5b61362d816146ed565b601754604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561368757600080fd5b505af115801561369b573d6000803e3d6000fd5b505050506040513d60208110156136b157600080fd5b5051610b8d576040805162461bcd60e51b815260206004820152600d60248201526c1514905394d1915497d1905253609a1b604482015290519081900360640190fd5b6136fd816120b9565b61373b576040805162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b604482015290519081900360640190fd5b600061374682612181565b6001600160a01b031614610b8d576040805162461bcd60e51b8152602060048201526007602482015266125397d0d2105360ca1b604482015290519081900360640190fd5b6001600160a01b03821660009081526008602052604081206002810154808411156137f0576040805162461bcd60e51b815260206004820152601060248201526f544f4f5f4c4954544c455f5354414b4560801b604482015290519081900360640190fd5b6000613802828663ffffffff61393b16565b600284018690556001600160a01b0387166000908152600a6020526040902054909150613835908263ffffffff6139f116565b6001600160a01b0387166000908152600a60205260409020559250505092915050565b613860614faa565b6040805180820190915286518651829161387b9188886148f9565b815260200161389a8860016020020151886001602002015143876148f9565b90529695505050505050565b6000816000015182602001518360400151846060015185608001518660a001518760c001518860e00151896101000151604051602001808a81526020018981526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019950505050505050505050604051602081830303815290604052805190602001209050919050565b600082821115613992576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000826139a757506000612ad2565b828202828482816139b457fe5b041461260f5760405162461bcd60e51b81526004018080602001828103825260218152602001806150446021913960400191505060405180910390fd5b60008282018381101561260f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000808211613aa1576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381613aaa57fe5b049392505050565b6000818311613ac1578161260f565b5090919050565b6000613ad2614f75565b613ada614f75565b601160009054906101000a90046001600160a01b03166001600160a01b0316633dbcc8d16040518163ffffffff1660e01b815260040160206040518083038186803b158015613b2857600080fd5b505afa158015613b3c573d6000803e3d6000fd5b505050506040513d6020811015613b5257600080fd5b50516040820152613b6286612071565b6001600160a01b031660a08201526000613b7a612721565b6001019050613b888b614997565b60808301528882526020820188905260135460408051638b8ca19960e01b815260048101849052602481018a9052604481018d905233606482015290516001600160a01b0390921691638b8ca1999160848082019260009290919082900301818387803b158015613bf857600080fd5b505af1158015613c0c573d6000803e3d6000fd5b505060155460208e01516001600160a01b03909116925063d45ab2b59150613c33906138a6565b613c428e8660800151436149c8565b613c4b8f6149dd565b8b8f6040518663ffffffff1660e01b81526004018086815260200185815260200184815260200183815260200182815260200195505050505050602060405180830381600087803b158015613c9f57600080fd5b505af1158015613cb3573d6000803e3d6000fd5b505050506040513d6020811015613cc957600080fd5b50516001600160a01b031660608301525060808101516020820151600091613cf49187918991614a0d565b9050613d04826060015182614a74565b8160a001516001600160a01b0316631bc09d0a613d1f612721565b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015613d5557600080fd5b505af1158015613d69573d6000803e3d6000fd5b50929d939c50929a5050505050505050505050565b6001600160a01b0380841660008181526008602090815260408083208784526005835281842054825163123334b760e11b815260048101969096529151909591909116938492632466696e9260248084019382900301818787803b158015613de557600080fd5b505af1158015613df9573d6000803e3d6000fd5b505050506040513d6020811015613e0f57600080fd5b5051600180850187905590915081141561295c57600060056000846001600160a01b031663479c92546040518163ffffffff1660e01b815260040160206040518083038186803b158015613e6257600080fd5b505afa158015613e76573d6000803e3d6000fd5b505050506040513d6020811015613e8c57600080fd5b505181526020810191909152604001600020546001600160a01b0316905080636971dfe5613ec0438863ffffffff6139f116565b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015613ef657600080fd5b505af1158015613f0a573d6000803e3d6000fd5b5050505050505050505050565b6040805160208082019590955280820193909352606080840192909252805180840390920182526080909201909152805191012090565b6000613f5982612d19565b90506000613f6684612d19565b905080821115613f8d57613f8a613f7d848361378b565b839063ffffffff61393b16565b91505b60028204613f9b8582614abe565b613fab838263ffffffff61393b16565b9250613fb685614af5565b601654613fcc906001600160a01b031684614b1f565b61204584614b68565b6001600160a01b03928316600090815260086020526040808220600390810180549487166001600160a01b0319958616811790915594909516825290209092018054909216179055565b6000816001840314156140355750600f5461260f565b600061404084612071565b6001600160a01b0316632edfb42a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561407857600080fd5b505afa15801561408c573d6000803e3d6000fd5b505050506040513d60208110156140a257600080fd5b50519050808510156140b8575050600f5461260f565b6140c0614fcf565b506040805161014081018252600181526201e05b60208201526201f7d191810191909152620138916060820152620329e160808201526201be4360a08201526204cb8c60c08201526201fbc460e082015262036d326101008201526202797361012082015261412d614fcf565b506040805161014081018252600181526201c03060208201526201b6999181019190915261fde26060820152620265c6608082015262013b8e60a0820152620329e160c08201526201389160e08201526201f7d16101008201526201537561012082015260006141a3888563ffffffff61393b16565b905060006141c1600c54611148600a8561399890919063ffffffff16565b905060ff6141d682600a63ffffffff613a4b16565b106141ea576000199550505050505061260f565b60006141fd82600a63ffffffff613a4b16565b60020a9050600085600a8406600a811061421357fe5b602002015162ffffff168202905085600a8406600a811061423057fe5b602002015162ffffff1682828161424357fe5b041461425a5760001997505050505050505061260f565b600061428586600a8606600a811061426e57fe5b6020020151839062ffffff1663ffffffff613a4b16565b905080614290575060015b600f5480820290829082816142a157fe5b04146142ba57600019995050505050505050505061260f565b9c9b505050505050505050505050565b6142d5600254614c18565b600280546001019055565b6001600160a01b03811660009081526008602090815260408083206002810154600a9093529220546143179163ffffffff6139f116565b6001600160a01b0383166000908152600a60205260409020556134b382614c9a565b60098054600019810190811061434b57fe5b90600052602060002090600202016009828154811061436657fe5b60009182526020909120825460029092020180546001600160a01b0319166001600160a01b0390921691909117815560019182015491015560098054806143a957fe5b60008281526020812060026000199093019283020180546001600160a01b031916815560010155905550565b80600983815481106143e357fe5b9060005260206000209060020201600101819055505050565b6001600160a01b03166000908152600a60205260408120805491905590565b81518351600091829184835b838110156144ce57600088828151811061443d57fe5b6020026020010151905083818701111561448d576040805162461bcd60e51b815260206004820152600c60248201526b2220aa20afa7ab22a9292aa760a11b604482015290519081900360640190fd5b6020868b0181018290206040805180840196909652858101919091528051808603820181526060909501905283519301929092209190940193600101614427565b50818414614511576040805162461bcd60e51b815260206004820152600b60248201526a08882a882be988a9c8ea8960ab1b604482015290519081900360640190fd5b979650505050505050565b60408051602080820197909752808201959095526060850192909252608084019290925260a0808401929092528051808403909201825260c0909201909152805191012090565b61456e600154614c18565b600280546001818155019055565b336000908152601d602052604090205460ff166145d0576040805162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b604482015290519081900360640190fd5b6145d861209b565b15614618576040805162461bcd60e51b81526020600482015260106024820152600080516020615065833981519152604482015290519081900360640190fd5b614621826136f4565b6134b38282614abe565b6001600160a01b038083166000908152600860205260408082208484168352908220600380830154908201549394929391929081169116811461469f576040805162461bcd60e51b8152602060048201526007602482015266125397d0d2105360ca1b604482015290519081900360640190fd5b6001600160a01b0381166146e4576040805162461bcd60e51b81526020600482015260076024820152661393d7d0d2105360ca1b604482015290519081900360640190fd5b95945050505050565b336000908152601d602052604090205460ff16614741576040805162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b604482015290519081900360640190fd5b61474961209b565b15614789576040805162461bcd60e51b81526020600482015260106024820152600080516020615065833981519152604482015290519081900360640190fd5b614792336120b9565b156147d5576040805162461bcd60e51b815260206004820152600e60248201526d1053149150511657d4d51052d15160921b604482015290519081900360640190fd5b6147de33612aed565b15614823576040805162461bcd60e51b815260206004820152601060248201526f5354414b45525f49535f5a4f4d42494560801b604482015290519081900360640190fd5b61482b61204c565b811015614872576040805162461bcd60e51b815260206004820152601060248201526f4e4f545f454e4f5547485f5354414b4560801b604482015290519081900360640190fd5b61487c3382614dc0565b6013546001600160a01b031663f03c04a533614896612111565b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156148e557600080fd5b505af1158015612045573d6000803e3d6000fd5b614901614fee565b60408051610120810182528551815286516020820152908101856001602002015181526020018560026004811061493457fe5b602002015181526020018560036004811061494b57fe5b602002015181526020018660016003811061496257fe5b602002015181526020018660026003811061497957fe5b60200201518152602001848152602001838152509050949350505050565b80518051602083015151600092612ad29291829003906149b690614e8b565b6149c38660200151614e8b565b614ec0565b600061260c8383866020015160400151613f17565b805160a09081015160208301519182015160c08301516060840151608090940151600094612ad29493929161451c565b60008085614a1c576000614a1f565b60015b905080858585604051602001808560ff1660ff1660f81b815260010184815260200183815260200182815260200194505050505060405160208183030381529060405280519060200120915050949350505050565b60038054600101808255600090815260056020908152604080832080546001600160a01b0319166001600160a01b0397909716969096179095559154815260069091529190912055565b6001600160a01b03821660009081526008602052604090206002810154614aeb908363ffffffff6139f116565b6002909101555050565b6001600160a01b0316600090815260086020526040902060030180546001600160a01b0319169055565b6001600160a01b0382166000908152600a6020526040902054614b48908263ffffffff6139f116565b6001600160a01b039092166000908152600a602052604090209190915550565b6001600160a01b0381811660008181526008602090815260408083208151808301909252938152600180850154928201928352600980549182018155909352517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af600290930292830180546001600160a01b031916919095161790935591517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0909201919091556134b382614c9a565b60008181526005602052604080822054815163083197ef60e41b815291516001600160a01b03909116926383197ef0926004808201939182900301818387803b158015614c6457600080fd5b505af1158015614c78573d6000803e3d6000fd5b50505060009182525060056020526040902080546001600160a01b0319169055565b6001600160a01b03811660009081526008602052604090208054600780546000198101908110614cc657fe5b600091825260209091200154600780546001600160a01b039092169183908110614cec57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806008600060078481548110614d2c57fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020556007805480614d5c57fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03949094168152600890935250506040812081815560018101829055600281019190915560030180546001600160a81b0319169055565b6007805460018082019092557fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688810180546001600160a01b039586166001600160a01b031991821681179092556040805160a08101825293845284546020858101918252858301978852600060608701818152608088018981529682526008909252929092209451855551948401949094559351600283015591516003909101805492511515600160a01b0260ff60a01b199290951692909316919091171691909117905543600455565b6000612ad28260000151614ebb846040015185602001518660a0015187606001518860c001518960800151614efe565b614f49565b604080516020808201969096528082019490945260608401929092526080808401919091528151808403909101815260a09092019052805191012090565b60408051602080820198909852808201969096526060860194909452608085019290925260a084015260c0808401919091528151808403909101815260e09092019052805191012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040518060400160405280614fbd614fee565b8152602001614fca614fee565b905290565b604051806101400160405280600a906020820280368337509192915050565b604051806101200160405280600081526020016000801916815260200160008152602001600081526020016000815260200160008019168152602001600080191681526020016000815260200160008152509056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775061757361626c653a2070617573656400000000000000000000000000000000a2646970667358221220acc08116da83a5407ed3626c92689fcbc4f0510e92d4f926d968c58858d4443464736f6c634300060b0033'

export class ERC20RollupUserFacet__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20RollupUserFacet> {
    return super.deploy(overrides || {}) as Promise<ERC20RollupUserFacet>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): ERC20RollupUserFacet {
    return super.attach(address) as ERC20RollupUserFacet
  }
  connect(signer: Signer): ERC20RollupUserFacet__factory {
    return super.connect(signer) as ERC20RollupUserFacet__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ERC20RollupUserFacetInterface {
    return new utils.Interface(_abi) as ERC20RollupUserFacetInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20RollupUserFacet {
    return new Contract(address, _abi, signerOrProvider) as ERC20RollupUserFacet
  }
}
