/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts'

import type { Callback } from '../Callback'

export class Callback__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(overrides?: Overrides): Promise<Callback> {
    return super.deploy(overrides || {}) as Promise<Callback>
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): Callback {
    return super.attach(address) as Callback
  }
  connect(signer: Signer): Callback__factory {
    return super.connect(signer) as Callback__factory
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Callback {
    return new Contract(address, _abi, signerOrProvider) as Callback
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'a',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'b',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'c',
        type: 'uint256',
      },
    ],
    name: 'DummyEvent',
    type: 'event',
  },
  {
    inputs: [],
    name: 'doCallback',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sendDummies',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b506104fe806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630cfa65e11461003b578063307a9a7b14610060575b600080fd5b61004361006a565b604051808381526020018281526020019250505060405180910390f35b6100686103fd565b005b60008060017ff7078c2e906ae46c8c17077c57d1656528bcc53cf31769ccc5f4a6423d6909c060026003604051808381526020018281526020019250505060405180910390a260047ff7078c2e906ae46c8c17077c57d1656528bcc53cf31769ccc5f4a6423d6909c060056006604051808381526020018281526020019250505060405180910390a26000606473ffffffffffffffffffffffffffffffffffffffff1663928c169a602a6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252600b8152602001807f68656c6c6f20776f726c6400000000000000000000000000000000000000000081525060200192505050602060405180830381600087803b1580156101af57600080fd5b505af11580156101c3573d6000803e3d6000fd5b505050506040513d60208110156101d957600080fd5b8101908080519060200190929190505050905060077ff7078c2e906ae46c8c17077c57d1656528bcc53cf31769ccc5f4a6423d6909c060086009604051808381526020018281526020019250505060405180910390a2600a7ff7078c2e906ae46c8c17077c57d1656528bcc53cf31769ccc5f4a6423d6909c0600b600c604051808381526020018281526020019250505060405180910390a2600d7ff7078c2e906ae46c8c17077c57d1656528bcc53cf31769ccc5f4a6423d6909c0600e600f604051808381526020018281526020019250505060405180910390a26000606473ffffffffffffffffffffffffffffffffffffffff1663928c169a602b6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825260118152602001807f68656c6c6f20746865726520776f726c6400000000000000000000000000000081525060200192505050602060405180830381600087803b15801561037157600080fd5b505af1158015610385573d6000803e3d6000fd5b505050506040513d602081101561039b57600080fd5b8101908080519060200190929190505050905060107ff7078c2e906ae46c8c17077c57d1656528bcc53cf31769ccc5f4a6423d6909c060116012604051808381526020018281526020019250505060405180910390a281819350935050509091565b60017ff7078c2e906ae46c8c17077c57d1656528bcc53cf31769ccc5f4a6423d6909c0600b6015604051808381526020018281526020019250505060405180910390a260027ff7078c2e906ae46c8c17077c57d1656528bcc53cf31769ccc5f4a6423d6909c0600c6016604051808381526020018281526020019250505060405180910390a260037ff7078c2e906ae46c8c17077c57d1656528bcc53cf31769ccc5f4a6423d6909c0600d6017604051808381526020018281526020019250505060405180910390a256fea2646970667358221220b8f3c67831283456e0b5f1fff1214cb04baa18338d1e177a85d4c60883599ab764736f6c634300060b0033'
