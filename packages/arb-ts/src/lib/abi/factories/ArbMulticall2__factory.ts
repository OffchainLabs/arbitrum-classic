/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { ArbMulticall2, ArbMulticall2Interface } from '../ArbMulticall2'

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'target',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'callData',
            type: 'bytes',
          },
        ],
        internalType: 'struct ArbMulticall2.Call[]',
        name: 'calls',
        type: 'tuple[]',
      },
    ],
    name: 'aggregate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'blockNumber',
        type: 'uint256',
      },
      {
        internalType: 'bytes[]',
        name: 'returnData',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'target',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'callData',
            type: 'bytes',
          },
        ],
        internalType: 'struct ArbMulticall2.Call[]',
        name: 'calls',
        type: 'tuple[]',
      },
    ],
    name: 'blockAndAggregate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'blockNumber',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'blockHash',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'bool',
            name: 'success',
            type: 'bool',
          },
          {
            internalType: 'bytes',
            name: 'returnData',
            type: 'bytes',
          },
        ],
        internalType: 'struct ArbMulticall2.Result[]',
        name: 'returnData',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'blockNumber',
        type: 'uint256',
      },
    ],
    name: 'getBlockHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'blockHash',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getBlockNumber',
    outputs: [
      {
        internalType: 'uint256',
        name: 'blockNumber',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockCoinbase',
    outputs: [
      {
        internalType: 'address',
        name: 'coinbase',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockDifficulty',
    outputs: [
      {
        internalType: 'uint256',
        name: 'difficulty',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockGasLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: 'gaslimit',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockTimestamp',
    outputs: [
      {
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'addr',
        type: 'address',
      },
    ],
    name: 'getEthBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getL1BlockNumber',
    outputs: [
      {
        internalType: 'uint256',
        name: 'l1BlockNumber',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLastBlockHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'blockHash',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'requireSuccess',
        type: 'bool',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'target',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'callData',
            type: 'bytes',
          },
        ],
        internalType: 'struct ArbMulticall2.Call[]',
        name: 'calls',
        type: 'tuple[]',
      },
    ],
    name: 'tryAggregate',
    outputs: [
      {
        components: [
          {
            internalType: 'bool',
            name: 'success',
            type: 'bool',
          },
          {
            internalType: 'bytes',
            name: 'returnData',
            type: 'bytes',
          },
        ],
        internalType: 'struct ArbMulticall2.Result[]',
        name: 'returnData',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'requireSuccess',
        type: 'bool',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'target',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'callData',
            type: 'bytes',
          },
        ],
        internalType: 'struct ArbMulticall2.Call[]',
        name: 'calls',
        type: 'tuple[]',
      },
    ],
    name: 'tryBlockAndAggregate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'blockNumber',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'blockHash',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'bool',
            name: 'success',
            type: 'bool',
          },
          {
            internalType: 'bytes',
            name: 'returnData',
            type: 'bytes',
          },
        ],
        internalType: 'struct ArbMulticall2.Result[]',
        name: 'returnData',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b50610bb9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100bf5760003560e01c806372425d9d1161007c57806372425d9d1461014857806386d516e814610150578063a8b0574e14610158578063b9b3efe91461016d578063bce38bd714610175578063c3077fa914610195578063ee82ac5e146101a8576100bf565b80630f28c97d146100c4578063252dba42146100e257806327e86d6e14610103578063399542e91461010b57806342cbb15c1461012d5780634d2301cc14610135575b600080fd5b6100cc6101bb565b6040516100d991906109d7565b60405180910390f35b6100f56100f0366004610840565b6101bf565b6040516100d9929190610a56565b6100cc610370565b61011e61011936600461087a565b6103ed565b6040516100d993929190610abe565b6100cc6104ee565b6100cc610143366004610812565b610567565b6100cc610574565b6100cc610578565b61016061057c565b6040516100d991906109b0565b6100cc610580565b61018861018336600461087a565b610584565b6040516100d991906109c4565b61011e6101a3366004610840565b6106d9565b6100cc6101b63660046108cb565b6106f6565b4290565b6000606060646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101fd57600080fd5b505afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023591906108e3565b915082516001600160401b038111801561024e57600080fd5b5060405190808252806020026020018201604052801561028257816020015b606081526020019060019003908161026d5790505b50905060005b835181101561036a57600060608583815181106102a157fe5b6020026020010151600001516001600160a01b03168684815181106102c257fe5b6020026020010151602001516040516102db9190610994565b6000604051808303816000865af19150503d8060008114610318576040519150601f19603f3d011682016040523d82523d6000602084013e61031d565b606091505b5091509150816103485760405162461bcd60e51b815260040161033f90610a21565b60405180910390fd5b8084848151811061035557fe5b60209081029190910101525050600101610288565b50915091565b6000600160646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ae57600080fd5b505afa1580156103c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e691906108e3565b0340905090565b600080606060646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561042c57600080fd5b505afa158015610440573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046491906108e3565b925060646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a057600080fd5b505afa1580156104b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d891906108e3565b4091506104e58585610584565b90509250925092565b600060646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561052a57600080fd5b505afa15801561053e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056291906108e3565b905090565b6001600160a01b03163190565b4490565b4590565b4190565b4390565b606081516001600160401b038111801561059d57600080fd5b506040519080825280602002602001820160405280156105d757816020015b6105c46106fa565b8152602001906001900390816105bc5790505b50905060005b82518110156106d257600060608483815181106105f657fe5b6020026020010151600001516001600160a01b031685848151811061061757fe5b6020026020010151602001516040516106309190610994565b6000604051808303816000865af19150503d806000811461066d576040519150601f19603f3d011682016040523d82523d6000602084013e610672565b606091505b5091509150851561069a578161069a5760405162461bcd60e51b815260040161033f906109e0565b60405180604001604052808315158152602001828152508484815181106106bd57fe5b602090810291909101015250506001016105dd565b5092915050565b60008060606106e96001856103ed565b9196909550909350915050565b4090565b60408051808201909152600081526060602082015290565b600082601f830112610722578081fd5b81356001600160401b0380821115610738578283fd5b60206107478182850201610ae6565b838152935080840185820160005b858110156108065781358801604080601f19838d0301121561077657600080fd5b61077f81610ae6565b8683013561078c81610b6b565b8152828201358881111561079f57600080fd5b8084018d603f8201126107b157600080fd5b8881013594506107c86107c386610b0c565b610ae6565b91508482528d848683010111156107de57600080fd5b6107ed858a8401868401610b2f565b5081880152855250509183019190830190600101610755565b50505050505092915050565b600060208284031215610823578081fd5b81356001600160a01b0381168114610839578182fd5b9392505050565b600060208284031215610851578081fd5b81356001600160401b03811115610866578182fd5b61087284828501610712565b949350505050565b6000806040838503121561088c578081fd5b8235801515811461089b578182fd5b915060208301356001600160401b038111156108b5578182fd5b6108c185828601610712565b9150509250929050565b6000602082840312156108dc578081fd5b5035919050565b6000602082840312156108f4578081fd5b5051919050565b60008282518085526020808601955080818302840101818601855b8481101561095b57601f198684030189528151604081511515855285820151818787015261094682870182610968565b9b87019b955050509184019150600101610916565b5090979650505050505050565b60008151808452610980816020860160208601610b3b565b601f01601f19169290920160200192915050565b600082516109a6818460208701610b3b565b9190910192915050565b6001600160a01b0391909116815260200190565b60006020825261083960208301846108fb565b90815260200190565b60208082526021908201527f4d756c746963616c6c32206167677265676174653a2063616c6c206661696c656040820152601960fa1b606082015260800190565b6020808252818101527f4d756c746963616c6c206167677265676174653a2063616c6c206661696c6564604082015260600190565b600060408201848352602060408185015281855180845260608601915060608382028701019350828701855b82811015610ab057605f19888703018452610a9e868351610968565b95509284019290840190600101610a82565b509398975050505050505050565b600084825283602083015260606040830152610add60608301846108fb565b95945050505050565b6040518181016001600160401b0381118282101715610b0457600080fd5b604052919050565b60006001600160401b03821115610b21578081fd5b50601f01601f191660200190565b82818337506000910152565b60005b83811015610b56578181015183820152602001610b3e565b83811115610b65576000848401525b50505050565b6001600160a01b0381168114610b8057600080fd5b5056fea2646970667358221220af89a66f1ccf6b7bd8a41c21a93ea4475369c3d716510fb935c08b2c100cd62a64736f6c634300060b0033'

export class ArbMulticall2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ArbMulticall2> {
    return super.deploy(overrides || {}) as Promise<ArbMulticall2>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): ArbMulticall2 {
    return super.attach(address) as ArbMulticall2
  }
  connect(signer: Signer): ArbMulticall2__factory {
    return super.connect(signer) as ArbMulticall2__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ArbMulticall2Interface {
    return new utils.Interface(_abi) as ArbMulticall2Interface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbMulticall2 {
    return new Contract(address, _abi, signerOrProvider) as ArbMulticall2
  }
}
