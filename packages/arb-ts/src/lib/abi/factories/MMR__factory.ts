/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts'

import type { MMR } from '../MMR'

export class MMR__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(overrides?: Overrides): Promise<MMR> {
    return super.deploy(overrides || {}) as Promise<MMR>
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): MMR {
    return super.attach(address) as MMR
  }
  connect(signer: Signer): MMR__factory {
    return super.connect(signer) as MMR__factory
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MMR {
    return new Contract(address, _abi, signerOrProvider) as MMR
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'getChildren',
    outputs: [
      {
        internalType: 'uint256',
        name: 'left',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'right',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'width',
        type: 'uint256',
      },
    ],
    name: 'getLeafIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'width',
        type: 'uint256',
      },
    ],
    name: 'getPeakIndexes',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'peakIndexes',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'width',
        type: 'uint256',
      },
    ],
    name: 'getSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'left',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 'right',
        type: 'bytes32',
      },
    ],
    name: 'hashBranch',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'dataHash',
        type: 'bytes32',
      },
    ],
    name: 'hashLeaf',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'heightAt',
    outputs: [
      {
        internalType: 'uint8',
        name: 'height',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'root',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'width',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'value',
        type: 'bytes',
      },
      {
        internalType: 'bytes32[]',
        name: 'peaks',
        type: 'bytes32[]',
      },
      {
        internalType: 'bytes32[]',
        name: 'siblings',
        type: 'bytes32[]',
      },
    ],
    name: 'inclusionProof',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'isLeaf',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'size',
        type: 'uint256',
      },
    ],
    name: 'mountainHeight',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'width',
        type: 'uint256',
      },
    ],
    name: 'numOfPeaks',
    outputs: [
      {
        internalType: 'uint256',
        name: 'num',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'width',
        type: 'uint256',
      },
      {
        internalType: 'bytes32[]',
        name: 'peaks',
        type: 'bytes32[]',
      },
    ],
    name: 'peakBagging',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'width',
        type: 'uint256',
      },
      {
        internalType: 'bytes32[255]',
        name: 'peakMap',
        type: 'bytes32[255]',
      },
    ],
    name: 'peakMapToPeaks',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: 'peaks',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'width',
        type: 'uint256',
      },
      {
        internalType: 'bytes32[255]',
        name: 'prevPeakMap',
        type: 'bytes32[255]',
      },
      {
        internalType: 'bytes32',
        name: 'itemHash',
        type: 'bytes32',
      },
    ],
    name: 'peakUpdate',
    outputs: [
      {
        internalType: 'bytes32[255]',
        name: 'nextPeakMap',
        type: 'bytes32[255]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'width',
        type: 'uint256',
      },
      {
        internalType: 'bytes32[]',
        name: 'peaks',
        type: 'bytes32[]',
      },
    ],
    name: 'peaksToPeakMap',
    outputs: [
      {
        internalType: 'bytes32[255]',
        name: 'peakMap',
        type: 'bytes32[255]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'root',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'width',
        type: 'uint256',
      },
      {
        internalType: 'bytes32[]',
        name: 'peaks',
        type: 'bytes32[]',
      },
      {
        internalType: 'bytes32[]',
        name: 'itemHashes',
        type: 'bytes32[]',
      },
    ],
    name: 'rollUp',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'newRoot',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
]

const _bytecode =
  '0x611c2e610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061014c5760003560e01c806391b419ac116100c2578063cce3c13b11610086578063cce3c13b14610790578063da556f92146107ad578063e6334ede14610877578063ed9f51b314610931578063f38b7582146109d9578063f6fd8800146109f65761014c565b806391b419ac14610435578063997db80414610452578063a248cd4f14610621578063c365c8dd14610750578063c522e7bc146107735761014c565b8063366140761161011457806336614076146102d1578063452a3a0e146102fa57806349ae8dc31461031d57806367e8f90c1461035357806378317ef41461037057806383e24c88146104185761014c565b8063023c23db1461015157806324c144391461018057806326cf02ae1461019d5780632d129442146102315780632f2e2ea714610264575b600080fd5b61016e6004803603602081101561016757600080fd5b5035610a4f565b60408051918252519081900360200190f35b61016e6004803603602081101561019657600080fd5b5035610a68565b6101f860048036036120208110156101b457600080fd5b60408051611fe0818101909252833593928301929161200083019190602084019060ff9083908390808284376000920191909152509194505090359150610a6f9050565b6040518082611fe080838360005b8381101561021e578181015183820152602001610206565b5050505090500191505060405180910390f35b61024e6004803603602081101561024757600080fd5b5035610b94565b6040805160ff9092168252519081900360200190f35b6102816004803603602081101561027a57600080fd5b5035610bbc565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102bd5781810151838201526020016102a5565b505050509050019250505060405180910390f35b61016e600480360360608110156102e757600080fd5b5080359060208101359060400135610cb0565b61016e6004803603604081101561031057600080fd5b5080359060200135610ce7565b61033a6004803603602081101561033357600080fd5b5035610d13565b6040805192835260208301919091528051918290030190f35b61024e6004803603602081101561036957600080fd5b5035610d7c565b6101f86004803603604081101561038657600080fd5b81359190810190604081016020820135600160201b8111156103a757600080fd5b8201836020820111156103b957600080fd5b803590602001918460208302840111600160201b831117156103da57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610dbc945050505050565b61016e6004803603602081101561042e57600080fd5b5035610e93565b6102816004803603602081101561044b57600080fd5b5035610ec7565b61060d600480360360c081101561046857600080fd5b81359160208101359160408201359190810190608081016060820135600160201b81111561049557600080fd5b8201836020820111156104a757600080fd5b803590602001918460018302840111600160201b831117156104c857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561051a57600080fd5b82018360208201111561052c57600080fd5b803590602001918460208302840111600160201b8311171561054d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561059c57600080fd5b8201836020820111156105ae57600080fd5b803590602001918460208302840111600160201b831117156105cf57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610f71945050505050565b604080519115158252519081900360200190f35b61016e6004803603608081101561063757600080fd5b813591602081013591810190606081016040820135600160201b81111561065d57600080fd5b82018360208201111561066f57600080fd5b803590602001918460208302840111600160201b8311171561069057600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156106df57600080fd5b8201836020820111156106f157600080fd5b803590602001918460208302840111600160201b8311171561071257600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061133a945050505050565b61016e6004803603604081101561076657600080fd5b5080359060200135611406565b61016e6004803603602081101561078957600080fd5b503561141c565b61060d600480360360208110156107a657600080fd5b5035611420565b6107d0600480360360408110156107c357600080fd5b5080359060200135611438565b604051808581526020018481526020018060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610820578181015183820152602001610808565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561085f578181015183820152602001610847565b50505050905001965050505050505060405180910390f35b81801561088357600080fd5b5061092f6004803603604081101561089a57600080fd5b81359190810190604081016020820135600160201b8111156108bb57600080fd5b8201836020820111156108cd57600080fd5b803590602001918460018302840111600160201b831117156108ee57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611698945050505050565b005b61016e6004803603604081101561094757600080fd5b81359190810190604081016020820135600160201b81111561096857600080fd5b82018360208201111561097a57600080fd5b803590602001918460208302840111600160201b8311171561099b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611850945050505050565b61016e600480360360208110156109ef57600080fd5b503561194b565b6102816004803603612000811015610a0d57600080fd5b60408051611fe0818101909252833593928301929161200083019190602084019060ff9083908390808284376000920191909152509194506119769350505050565b6000610a5a8261194b565b600183901b0390505b919050565b6001015490565b610a77611b3e565b600184016000610a8682610e93565b90506000610a948286610ce7565b905060008080808060015b60ff8111610b84578060ff0395508115610ada578b8660ff8110610abf57fe5b60200201518a8760ff8110610ad057fe5b6020020152610b7c565b60019788019760001982011b94508c8516158015945089861615159350610b1957610b16888d8860ff8110610b0b57fe5b602002015189610cb0565b96505b8215610b68578315610b4c578b8660ff8110610b3157fe5b60200201518a8760ff8110610b4257fe5b6020020152610b5f565b868a8760ff8110610b5957fe5b60200201525b60019150610b7c565b60008a8760ff8110610b7657fe5b60200201525b600101610a9f565b5050505050505050509392505050565b600060015b60ff8116838101600190911b11610bb257600101610b99565b6000190192915050565b6060610bc78261194b565b6001600160401b0381118015610bdc57600080fd5b50604051908082528060200260200182016040528015610c06578160200160208202803683370190505b50905060008060ff5b8015610c5957600160001982011b851615610c50576001816001901b830103915081848480600101955081518110610c4357fe5b6020026020010181815250505b60001901610c0f565b5082518214610ca9576040805162461bcd60e51b815260206004820152601760248201527624b73b30b634b2103134ba1031b0b631bab630ba34b7b760491b604482015290519081900360640190fd5b5050919050565b6040805160208082019590955280820193909352606080840192909252805180840390920182526080909201909152805191012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6000806001610d2184610d7c565b0360ff166001901b8303915060018303905080821415610d77576040805162461bcd60e51b815260206004820152600c60248201526b139bdd0818481c185c995b9d60a21b604482015290519081900360640190fd5b915091565b600081815b80821115610db45760018360ff166001901b0382039150610da182610b94565b925050600019600160ff84161b01610d81565b039003919050565b610dc4611b3e565b8151600090819060015b60ff8111610e3c5760ff8190039350600160001982011b925086831615610e205785826001900392508281518110610e0257fe5b6020026020010151858560ff8110610e1657fe5b6020020152610e34565b6000858560ff8110610e2e57fe5b60200201525b600101610dce565b508015610e8a576040805162461bcd60e51b8152602060048201526017602482015276496e76616c6964206e756d626572206f66207065616b7360481b604482015290519081900360640190fd5b50505092915050565b60006002820660011415610eb157610eaa82610a4f565b9050610a63565b610ebd60018303610a4f565b6001019050610a63565b606080610ed78360020154610bbc565b905080516001600160401b0381118015610ef057600080fd5b50604051908082528060200260200182016040528015610f1a578160200160208202803683370190505b50915060005b8151811015610ca957836003016000838381518110610f3b57fe5b6020026020010151815260200190815260200160002054838281518110610f5e57fe5b6020908102919091010152600101610f20565b600080610f7d87610a4f565b905085811015610fcc576040805162461bcd60e51b8152602060048201526015602482015274496e646578206973206f7574206f662072616e676560581b604482015290519081900360640190fd5b80818560405160200180838152602001828051906020019060200280838360005b83811015611005578181015183820152602001610fed565b50505050905001925050506040516020818303038152906040528051906020012060405160200180838152602001828152602001925050506040516020818303038152906040528051906020012088146110a6576040805162461bcd60e51b815260206004820181905260248201527f496e76616c696420726f6f7420686173682066726f6d20746865207065616b73604482015290519081900360640190fd5b60008060606110b48a610bbc565b905060005b815181101561111557898282815181106110cf57fe5b60200260200101511061110d578781815181106110e857fe5b602002602001015192508181815181106110fe57fe5b60200260200101519350611115565b6001016110b9565b508161115e576040805162461bcd60e51b815260206004820152601360248201527215185c99d95d081a5cc81b9bdd08199bdd5b99606a1b604482015290519081900360640190fd5b606086516001016001600160401b038111801561117a57600080fd5b506040519080825280602002602001820160405280156111a4578160200160208202803683370190505b5090506000806000895160010190505b60ff811615611211578684826001900392508260ff16815181106111d457fe5b6020026020010181815250508c8714156111ed57611211565b6111f687610d13565b9093509150828d11611208578261120a565b815b96506111b4565b60005b84518260ff1610156112d757848260ff168151811061122f57fe5b602002602001015197508160ff166000141561125d57611256888e80519060200120610ce7565b90506112cc565b846001830360ff168151811061126f57fe5b60200260200101516001890314156112a557611256888c6001850360ff168151811061129757fe5b602002602001015183610cb0565b6112c988828d6001860360ff16815181106112bc57fe5b6020026020010151610cb0565b90505b600190910190611214565b868114611324576040805162461bcd60e51b815260206004820152601660248201527512185cda1959081c19585ac81a5cc81a5b9d985b1a5960521b604482015290519081900360640190fd5b5060019f9e505050505050505050505050505050565b60006113468484611850565b8514611399576040805162461bcd60e51b815260206004820181905260248201527f496e76616c696420726f6f7420686173682066726f6d20746865207065616b73604482015290519081900360640190fd5b836113a2611b3e565b6113ac8686610dbc565b905060005b84518110156113e7576113d883838784815181106113cb57fe5b6020026020010151610a6f565b600193840193909250016113b1565b506113fb826113f68484611976565b611850565b979650505050505050565b6000908152600391909101602052604090205490565b5490565b600061142b82610d7c565b60ff166001149050919050565b60008060608085600101548510611485576040805162461bcd60e51b815260206004820152600c60248201526b4f7574206f662072616e676560a01b604482015290519081900360640190fd5b61148e85611420565b6114cc576040805162461bcd60e51b815260206004820152600a6024820152692737ba1030903632b0b360b11b604482015290519081900360640190fd5b85546002870154909450925060606114e384610bbc565b905080516001600160401b03811180156114fc57600080fd5b50604051908082528060200260200182016040528015611526578160200160208202803683370190505b5092506000805b82518110156115bc5788600301600084838151811061154857fe5b602002602001015181526020019081526020016000205485828151811061156b57fe5b6020026020010181815250508783828151811061158457fe5b602002602001015110158015611598575081155b156115b4578281815181106115a957fe5b602002602001015191505b60010161152d565b5060008060006115cb84610d7c565b90506001810360ff166001600160401b03811180156115e957600080fd5b50604051908082528060200260200182016040528015611613578160200160208202803683370190505b5095505b89841461168a576000190161162b84610d13565b9093509150828a111561163e5781611640565b825b93508a6003016000848c11156116565784611658565b835b815260200190815260200160002054866001830360ff168151811061167957fe5b602002602001018181525050611617565b505050505092959194509250565b6000818051906020012090508083600401600083815260200190815260200160002060405180828054600181600116156101000203166002900480156117155780601f106116f3576101008083540402835291820191611715565b820191906000526020600020905b815481529060010190602001808311611701575b505091505060405180910390201461174a5760008181526004840160209081526040909120835161174892850190611b5d565b505b600061175d846001015460010183610ce7565b6001808601548101600090815260038701602052604090208290556002860180549091019081905590915060609061179490610bbc565b90506117a38560020154610a4f565b600186015580516060906001600160401b03811180156117c257600080fd5b506040519080825280602002602001820160405280156117ec578160200160208202803683370190505b50905060005b8251811015611837576118188784838151811061180b57fe5b6020026020010151611a7b565b82828151811061182457fe5b60209081029190910101526001016117f2565b50611846866002015482611850565b9095555050505050565b60008061185c84610a4f565b905082516118698561194b565b146118bb576040805162461bcd60e51b815260206004820181905260248201527f526563656976656420696e76616c6964206e756d626572206f66207065616b73604482015290519081900360640190fd5b80818460405160200180838152602001828051906020019060200280838360005b838110156118f45781810151838201526020016118dc565b50505050905001925050506040516020818303038152906040528051906020012060405160200180838152602001828152602001925050506040516020818303038152906040528051906020012091505092915050565b6000815b8015611970576002810660011415611968576001909101905b60011c61194f565b50919050565b606060006119838461194b565b9050806001600160401b038111801561199b57600080fd5b506040519080825280602002602001820160405280156119c5578160200160208202803683370190505b5091506000805b60ff811015611a24576000858260ff81106119e357fe5b602002015114611a1c57848160ff81106119f957fe5b60200201518451600184019386918110611a0f57fe5b6020026020010181815250505b6001016119cc565b50818114611a73576040805162461bcd60e51b8152602060048201526017602482015276496e76616c6964206e756d626572206f66207065616b7360481b604482015290519081900360640190fd5b505092915050565b60008260010154821115611ac5576040805162461bcd60e51b815260206004820152600c60248201526b4f7574206f662072616e676560a01b604482015290519081900360640190fd5b6000828152600384016020526040902054611b2757600080611ae684610d13565b915091506000611af68684611a7b565b90506000611b048784611a7b565b9050611b11868383610cb0565b6000878152600389016020526040902055505050505b506000908152600391909101602052604090205490565b60405180611fe0016040528060ff906020820280368337509192915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b9e57805160ff1916838001178555611bcb565b82800160010185558215611bcb579182015b82811115611bcb578251825591602001919060010190611bb0565b50611bd7929150611bdb565b5090565b611bf591905b80821115611bd75760008155600101611be1565b9056fea2646970667358221220e7aa9e731326a86f1811a3472a63cbce09c596af2c78424e987ab6d184a205fb64736f6c634300060b0033'
