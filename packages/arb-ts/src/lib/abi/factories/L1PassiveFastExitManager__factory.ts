/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts'

import type { L1PassiveFastExitManager } from '../L1PassiveFastExitManager'

export class L1PassiveFastExitManager__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(overrides?: Overrides): Promise<L1PassiveFastExitManager> {
    return super.deploy(overrides || {}) as Promise<L1PassiveFastExitManager>
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): L1PassiveFastExitManager {
    return super.attach(address) as L1PassiveFastExitManager
  }
  connect(signer: Signer): L1PassiveFastExitManager__factory {
    return super.connect(signer) as L1PassiveFastExitManager__factory
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1PassiveFastExitManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as L1PassiveFastExitManager
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'exitNum',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'onExitTransfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridge',
        type: 'address',
      },
    ],
    name: 'setBridge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b50610787806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063592e20701461003b5780638dd14802146100d2575b600080fd5b6100be6004803603606081101561005157600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561008057600080fd5b82018360208201111561009257600080fd5b803590602001918460018302840111600160201b831117156100b357600080fd5b5090925090506100fa565b604080519115158252519081900360200190f35b6100f8600480360360208110156100e857600080fd5b50356001600160a01b031661064e565b005b600080546001600160a01b03163314610148576040805162461bcd60e51b815260206004820152600b60248201526a4f4e4c595f42524944474560a81b604482015290519081900360640190fd5b6101506106cd565b838360e081101561016057600080fd5b6001600160a01b038235811692602081013592604082013583169260608301359260808101359091169181019060c0810160a0820135600160201b8111156101a757600080fd5b8201836020820111156101b957600080fd5b803590602001918460018302840111600160201b831117156101da57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561022c57600080fd5b82018360208201111561023e57600080fd5b803590602001918460018302840111600160201b8311171561025f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060c08f019490945250505060a08b01949094525050506001600160a01b03918216608088018190526060880193909352928116604080880191909152602080880195909552948116865284516370a0823160e01b8152908b1660048201529351919390926370a0823192602480840193829003018186803b15801561031557600080fd5b505afa158015610329573d6000803e3d6000fd5b505050506040513d602081101561033f57600080fd5b8101908080519060200190929190505050905081604001516001600160a01b031663effc168b8360000151846080015185606001518a8760a001516040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156104025781810151838201526020016103ea565b50505050905090810190601f16801561042f5780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b15801561045257600080fd5b505af1158015610466573d6000803e3d6000fd5b50505050600082608001516001600160a01b03166370a08231896040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156104c657600080fd5b505afa1580156104da573d6000803e3d6000fd5b505050506040513d60208110156104f057600080fd5b50516060840151602085015191925061050891610670565b6105128284610670565b101561054f5760405162461bcd60e51b815260040180806020018281038252602c815260200180610726602c913960400191505060405180910390fd5b505060008054825160408085015160c08601519151635a688a6d60e11b8152600481018b81526001600160a01b0385811660248401528381166044840152608060648401908152855160848501528551919097169763b4d114da978e979694909260a4909101916020860191908190849084905b838110156105db5781810151838201526020016105c3565b50505050905090810190601f1680156106085780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561062a57600080fd5b505af115801561063e573d6000803e3d6000fd5b5060019998505050505050505050565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828211156106c7576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6040518060e0016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160006001600160a01b031681526020016060815260200160608152509056fe5573657220646964206e6f7420676574206372656469746564207769746820656e6f75676820746f6b656e73a26469706673582212204ad8b47044d0f71c104e179a10a2afa7d8228f7607c00ec5b593d1a8e259717064736f6c634300060b0033'
