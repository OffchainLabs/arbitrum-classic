/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from 'ethers'
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from '@ethersproject/contracts'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'

interface IERC1820RegistryInterface extends ethers.utils.Interface {
  functions: {
    'getInterfaceImplementer(address,bytes32)': FunctionFragment
    'getManager(address)': FunctionFragment
    'implementsERC165Interface(address,bytes4)': FunctionFragment
    'implementsERC165InterfaceNoCache(address,bytes4)': FunctionFragment
    'interfaceHash(string)': FunctionFragment
    'setInterfaceImplementer(address,bytes32,address)': FunctionFragment
    'setManager(address,address)': FunctionFragment
    'updateERC165Cache(address,bytes4)': FunctionFragment
  }

  encodeFunctionData(
    functionFragment: 'getInterfaceImplementer',
    values: [string, BytesLike]
  ): string
  encodeFunctionData(functionFragment: 'getManager', values: [string]): string
  encodeFunctionData(
    functionFragment: 'implementsERC165Interface',
    values: [string, BytesLike]
  ): string
  encodeFunctionData(
    functionFragment: 'implementsERC165InterfaceNoCache',
    values: [string, BytesLike]
  ): string
  encodeFunctionData(
    functionFragment: 'interfaceHash',
    values: [string]
  ): string
  encodeFunctionData(
    functionFragment: 'setInterfaceImplementer',
    values: [string, BytesLike, string]
  ): string
  encodeFunctionData(
    functionFragment: 'setManager',
    values: [string, string]
  ): string
  encodeFunctionData(
    functionFragment: 'updateERC165Cache',
    values: [string, BytesLike]
  ): string

  decodeFunctionResult(
    functionFragment: 'getInterfaceImplementer',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'getManager', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'implementsERC165Interface',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'implementsERC165InterfaceNoCache',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'interfaceHash',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'setInterfaceImplementer',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'setManager', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'updateERC165Cache',
    data: BytesLike
  ): Result

  events: {
    'InterfaceImplementerSet(address,bytes32,address)': EventFragment
    'ManagerChanged(address,address)': EventFragment
  }

  getEvent(nameOrSignatureOrTopic: 'InterfaceImplementerSet'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'ManagerChanged'): EventFragment
}

export class IERC1820Registry extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  on(event: EventFilter | string, listener: Listener): this
  once(event: EventFilter | string, listener: Listener): this
  addListener(eventName: EventFilter | string, listener: Listener): this
  removeAllListeners(eventName: EventFilter | string): this
  removeListener(eventName: any, listener: Listener): this

  interface: IERC1820RegistryInterface

  functions: {
    getInterfaceImplementer(
      account: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>

    'getInterfaceImplementer(address,bytes32)'(
      account: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>

    getManager(account: string, overrides?: CallOverrides): Promise<[string]>

    'getManager(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<[string]>

    implementsERC165Interface(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>

    'implementsERC165Interface(address,bytes4)'(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>

    implementsERC165InterfaceNoCache(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>

    'implementsERC165InterfaceNoCache(address,bytes4)'(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>

    interfaceHash(
      interfaceName: string,
      overrides?: CallOverrides
    ): Promise<[string]>

    'interfaceHash(string)'(
      interfaceName: string,
      overrides?: CallOverrides
    ): Promise<[string]>

    setInterfaceImplementer(
      account: string,
      _interfaceHash: BytesLike,
      implementer: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'setInterfaceImplementer(address,bytes32,address)'(
      account: string,
      _interfaceHash: BytesLike,
      implementer: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    setManager(
      account: string,
      newManager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'setManager(address,address)'(
      account: string,
      newManager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    updateERC165Cache(
      account: string,
      interfaceId: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'updateERC165Cache(address,bytes4)'(
      account: string,
      interfaceId: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>
  }

  getInterfaceImplementer(
    account: string,
    _interfaceHash: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>

  'getInterfaceImplementer(address,bytes32)'(
    account: string,
    _interfaceHash: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>

  getManager(account: string, overrides?: CallOverrides): Promise<string>

  'getManager(address)'(
    account: string,
    overrides?: CallOverrides
  ): Promise<string>

  implementsERC165Interface(
    account: string,
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>

  'implementsERC165Interface(address,bytes4)'(
    account: string,
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>

  implementsERC165InterfaceNoCache(
    account: string,
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>

  'implementsERC165InterfaceNoCache(address,bytes4)'(
    account: string,
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>

  interfaceHash(
    interfaceName: string,
    overrides?: CallOverrides
  ): Promise<string>

  'interfaceHash(string)'(
    interfaceName: string,
    overrides?: CallOverrides
  ): Promise<string>

  setInterfaceImplementer(
    account: string,
    _interfaceHash: BytesLike,
    implementer: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'setInterfaceImplementer(address,bytes32,address)'(
    account: string,
    _interfaceHash: BytesLike,
    implementer: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  setManager(
    account: string,
    newManager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'setManager(address,address)'(
    account: string,
    newManager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  updateERC165Cache(
    account: string,
    interfaceId: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'updateERC165Cache(address,bytes4)'(
    account: string,
    interfaceId: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  callStatic: {
    getInterfaceImplementer(
      account: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>

    'getInterfaceImplementer(address,bytes32)'(
      account: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>

    getManager(account: string, overrides?: CallOverrides): Promise<string>

    'getManager(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<string>

    implementsERC165Interface(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>

    'implementsERC165Interface(address,bytes4)'(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>

    implementsERC165InterfaceNoCache(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>

    'implementsERC165InterfaceNoCache(address,bytes4)'(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>

    interfaceHash(
      interfaceName: string,
      overrides?: CallOverrides
    ): Promise<string>

    'interfaceHash(string)'(
      interfaceName: string,
      overrides?: CallOverrides
    ): Promise<string>

    setInterfaceImplementer(
      account: string,
      _interfaceHash: BytesLike,
      implementer: string,
      overrides?: CallOverrides
    ): Promise<void>

    'setInterfaceImplementer(address,bytes32,address)'(
      account: string,
      _interfaceHash: BytesLike,
      implementer: string,
      overrides?: CallOverrides
    ): Promise<void>

    setManager(
      account: string,
      newManager: string,
      overrides?: CallOverrides
    ): Promise<void>

    'setManager(address,address)'(
      account: string,
      newManager: string,
      overrides?: CallOverrides
    ): Promise<void>

    updateERC165Cache(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>

    'updateERC165Cache(address,bytes4)'(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>
  }

  filters: {
    InterfaceImplementerSet(
      account: string | null,
      interfaceHash: BytesLike | null,
      implementer: string | null
    ): EventFilter

    ManagerChanged(
      account: string | null,
      newManager: string | null
    ): EventFilter
  }

  estimateGas: {
    getInterfaceImplementer(
      account: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'getInterfaceImplementer(address,bytes32)'(
      account: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    getManager(account: string, overrides?: CallOverrides): Promise<BigNumber>

    'getManager(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    implementsERC165Interface(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'implementsERC165Interface(address,bytes4)'(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    implementsERC165InterfaceNoCache(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'implementsERC165InterfaceNoCache(address,bytes4)'(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    interfaceHash(
      interfaceName: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'interfaceHash(string)'(
      interfaceName: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    setInterfaceImplementer(
      account: string,
      _interfaceHash: BytesLike,
      implementer: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    'setInterfaceImplementer(address,bytes32,address)'(
      account: string,
      _interfaceHash: BytesLike,
      implementer: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    setManager(
      account: string,
      newManager: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    'setManager(address,address)'(
      account: string,
      newManager: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    updateERC165Cache(
      account: string,
      interfaceId: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>

    'updateERC165Cache(address,bytes4)'(
      account: string,
      interfaceId: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>
  }

  populateTransaction: {
    getInterfaceImplementer(
      account: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'getInterfaceImplementer(address,bytes32)'(
      account: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    getManager(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'getManager(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    implementsERC165Interface(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'implementsERC165Interface(address,bytes4)'(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    implementsERC165InterfaceNoCache(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'implementsERC165InterfaceNoCache(address,bytes4)'(
      account: string,
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    interfaceHash(
      interfaceName: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'interfaceHash(string)'(
      interfaceName: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    setInterfaceImplementer(
      account: string,
      _interfaceHash: BytesLike,
      implementer: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'setInterfaceImplementer(address,bytes32,address)'(
      account: string,
      _interfaceHash: BytesLike,
      implementer: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    setManager(
      account: string,
      newManager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'setManager(address,address)'(
      account: string,
      newManager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    updateERC165Cache(
      account: string,
      interfaceId: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'updateERC165Cache(address,bytes4)'(
      account: string,
      interfaceId: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>
  }
}
