/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts'

import { Bridge } from './Bridge'

export class BridgeFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(overrides?: Overrides): Promise<Bridge> {
    return super.deploy(overrides || {}) as Promise<Bridge>
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): Bridge {
    return super.attach(address) as Bridge
  }
  connect(signer: Signer): BridgeFactory {
    return super.connect(signer) as BridgeFactory
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bridge {
    return new Contract(address, _abi, signerOrProvider) as Bridge
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'messageIndex',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'beforeInboxAcc',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'inbox',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint8',
        name: 'kind',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'messageDataHash',
        type: 'bytes32',
      },
    ],
    name: 'MessageDelivered',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'activeOutbox',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'inbox',
        type: 'address',
      },
    ],
    name: 'allowedInboxes',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'outbox',
        type: 'address',
      },
    ],
    name: 'allowedOutboxes',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'kind',
        type: 'uint8',
      },
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'messageDataHash',
        type: 'bytes32',
      },
    ],
    name: 'deliverMessageToInbox',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'destAddr',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'executeCall',
    outputs: [
      {
        internalType: 'bool',
        name: 'success',
        type: 'bool',
      },
      {
        internalType: 'bytes',
        name: 'returnData',
        type: 'bytes',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'inboxAccs',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'messageCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'inbox',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    name: 'setInbox',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'outbox',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    name: 'setOutbox',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b5060006100246001600160e01b0361007316565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610077565b3390565b610db2806100866000396000f3fe6080604052600436106100a75760003560e01c8063ab5d894311610064578063ab5d8943146102ac578063c29372de146102c1578063cee3d728146102f4578063d9dd67ab1461032f578063e45b7ce614610359578063f2fde38b14610394576100a7565b806302bbfad1146100ac5780633dbcc8d1146100f3578063413b35bd14610108578063715018a61461014f5780638da5cb5b146101665780639e5d4c4914610197575b600080fd5b6100e1600480360360608110156100c257600080fd5b5060ff813516906001600160a01b0360208201351690604001356103c7565b60408051918252519081900360200190f35b3480156100ff57600080fd5b506100e16104dd565b34801561011457600080fd5b5061013b6004803603602081101561012b57600080fd5b50356001600160a01b03166104e3565b604080519115158252519081900360200190f35b34801561015b57600080fd5b50610164610504565b005b34801561017257600080fd5b5061017b6105b0565b604080516001600160a01b039092168252519081900360200190f35b3480156101a357600080fd5b50610229600480360360608110156101ba57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156101ea57600080fd5b8201836020820111156101fc57600080fd5b8035906020019184600183028401116401000000008311171561021e57600080fd5b5090925090506105bf565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610270578181015183820152602001610258565b50505050905090810190601f16801561029d5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156102b857600080fd5b5061017b6106c8565b3480156102cd57600080fd5b5061013b600480360360208110156102e457600080fd5b50356001600160a01b03166106d7565b34801561030057600080fd5b506101646004803603604081101561031757600080fd5b506001600160a01b03813516906020013515156106f9565b34801561033b57600080fd5b506100e16004803603602081101561035257600080fd5b5035610935565b34801561036557600080fd5b506101646004803603604081101561037c57600080fd5b506001600160a01b0381351690602001351515610953565b3480156103a057600080fd5b50610164600480360360208110156103b757600080fd5b50356001600160a01b0316610b8e565b3360009081526001602081905260408220015460ff1661041f576040805162461bcd60e51b815260206004820152600e60248201526d09c9ea8be8ca49e9abe929c849eb60931b604482015290519081900360640190fd5b600654600061043386864342863a8a610c90565b90506000821561045b576006600184038154811061044d57fe5b906000526020600020015490505b60066104678284610d06565b8154600181018355600092835260209283902001556040805133815260ff8a16928101929092526001600160a01b038816828201526060820187905251829185917f23be8e12e420b5da9fb98d8102572f640fb3c11a0085060472dfc0ed194b3cf79181900360800190a3509095945050505050565b60065490565b6001600160a01b031660009081526002602052604090206001015460ff1690565b61050c610d32565b6001600160a01b031661051d6105b0565b6001600160a01b031614610566576040805162461bcd60e51b81526020600482018190526024820152600080516020610d5d833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b3360009081526002602052604081206001015460609060ff1661061b576040805162461bcd60e51b815260206004820152600f60248201526e09c9ea8be8ca49e9abe9eaaa8849eb608b1b604482015290519081900360640190fd5b600580546001600160a01b0319811633179091556040516001600160a01b0391821691881690879087908790808383808284376040519201945060009350909150508083038185875af1925050503d8060008114610695576040519150601f19603f3d011682016040523d82523d6000602084013e61069a565b606091505b50600580546001600160a01b0319166001600160a01b03949094169390931790925597909650945050505050565b6005546001600160a01b031681565b6001600160a01b03166000908152600160208190526040909120015460ff1690565b610701610d32565b6001600160a01b03166107126105b0565b6001600160a01b03161461075b576040805162461bcd60e51b81526020600482018190526024820152600080516020610d5d833981519152604482015290519081900360640190fd5b6001600160a01b0382166000908152600260205260409020600181015460ff168080156107855750825b80610797575080158015610797575082155b156107a3575050610931565b821561083257604080518082018252600480548252600160208084018281526001600160a01b038a16600081815260029093529582209451855551938201805460ff1916941515949094179093558154908101825591527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b031916909117905561092e565b60048054600019810190811061084457fe5b6000918252602090912001548254600480546001600160a01b0390931692909190811061086d57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600001546002600060048560000154815481106108b557fe5b60009182526020808320909101546001600160a01b0316835282019290925260400190205560048054806108e557fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03861682526002905260408120908155600101805460ff191690555b50505b5050565b6006818154811061094257fe5b600091825260209091200154905081565b61095b610d32565b6001600160a01b031661096c6105b0565b6001600160a01b0316146109b5576040805162461bcd60e51b81526020600482018190526024820152600080516020610d5d833981519152604482015290519081900360640190fd5b6001600160a01b03821660009081526001602081905260409091209081015460ff168080156109e15750825b806109f35750801580156109f3575082155b156109ff575050610931565b8215610a8d57604080518082018252600380548252600160208084018281526001600160a01b038a166000818152928490529582209451855551938201805460ff1916941515949094179093558154908101825591527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b031916909117905561092e565b600380546000198101908110610a9f57fe5b6000918252602090912001548254600380546001600160a01b03909316929091908110610ac857fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508160000154600160006003856000015481548110610b1057fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020556003805480610b4057fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03861682526001908190526040822091825501805460ff1916905550505050565b610b96610d32565b6001600160a01b0316610ba76105b0565b6001600160a01b031614610bf0576040805162461bcd60e51b81526020600482018190526024820152600080516020610d5d833981519152604482015290519081900360640190fd5b6001600160a01b038116610c355760405162461bcd60e51b8152600401808060200182810382526026815260200180610d376026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160f89890981b6001600160f81b0319166020808a019190915260609790971b6bffffffffffffffffffffffff19166021890152603588019590955260558701939093526075860191909152609585015260b5808501919091528151808503909101815260d59093019052815191012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212206c934e59f3ddb0b34c69cddb64a869d574b91ead5b50fb6fda4a66beaf29e00e64736f6c634300060b0033'
