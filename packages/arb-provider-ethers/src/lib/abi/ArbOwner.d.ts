/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from 'ethers'
import { Listener, Provider } from 'ethers/providers'
import { Arrayish, BigNumber, BigNumberish, Interface } from 'ethers/utils'
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from '.'

interface ArbOwnerInterface extends Interface {
  functions: {
    changeSequencer: TypedFunctionDescription<{
      encode([sequencerAddr, maxDelayBlocks, maxDelaySeconds]: [
        string,
        BigNumberish,
        BigNumberish
      ]): string
    }>

    continueArbosUpgrade: TypedFunctionDescription<{
      encode([marshalledCode]: [Arrayish]): string
    }>

    finishArbosUpgrade: TypedFunctionDescription<{ encode([]: []): string }>

    giveOwnership: TypedFunctionDescription<{
      encode([newOwnerAddr]: [string]): string
    }>

    startArbosUpgrade: TypedFunctionDescription<{ encode([]: []): string }>
  }

  events: {}
}

export class ArbOwner extends Contract {
  connect(signerOrProvider: Signer | Provider | string): ArbOwner
  attach(addressOrName: string): ArbOwner
  deployed(): Promise<ArbOwner>

  on(event: EventFilter | string, listener: Listener): ArbOwner
  once(event: EventFilter | string, listener: Listener): ArbOwner
  addListener(eventName: EventFilter | string, listener: Listener): ArbOwner
  removeAllListeners(eventName: EventFilter | string): ArbOwner
  removeListener(eventName: any, listener: Listener): ArbOwner

  interface: ArbOwnerInterface

  functions: {
    changeSequencer(
      sequencerAddr: string,
      maxDelayBlocks: BigNumberish,
      maxDelaySeconds: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    'changeSequencer(address,uint256,uint256)'(
      sequencerAddr: string,
      maxDelayBlocks: BigNumberish,
      maxDelaySeconds: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    continueArbosUpgrade(
      marshalledCode: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    'continueArbosUpgrade(bytes)'(
      marshalledCode: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    finishArbosUpgrade(
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    'finishArbosUpgrade()'(
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    giveOwnership(
      newOwnerAddr: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    'giveOwnership(address)'(
      newOwnerAddr: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    startArbosUpgrade(
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    'startArbosUpgrade()'(
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>
  }

  changeSequencer(
    sequencerAddr: string,
    maxDelayBlocks: BigNumberish,
    maxDelaySeconds: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  'changeSequencer(address,uint256,uint256)'(
    sequencerAddr: string,
    maxDelayBlocks: BigNumberish,
    maxDelaySeconds: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  continueArbosUpgrade(
    marshalledCode: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  'continueArbosUpgrade(bytes)'(
    marshalledCode: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  finishArbosUpgrade(
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  'finishArbosUpgrade()'(
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  giveOwnership(
    newOwnerAddr: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  'giveOwnership(address)'(
    newOwnerAddr: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  startArbosUpgrade(
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  'startArbosUpgrade()'(
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  filters: {}

  estimate: {
    changeSequencer(
      sequencerAddr: string,
      maxDelayBlocks: BigNumberish,
      maxDelaySeconds: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'changeSequencer(address,uint256,uint256)'(
      sequencerAddr: string,
      maxDelayBlocks: BigNumberish,
      maxDelaySeconds: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    continueArbosUpgrade(
      marshalledCode: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'continueArbosUpgrade(bytes)'(
      marshalledCode: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    finishArbosUpgrade(overrides?: TransactionOverrides): Promise<BigNumber>

    'finishArbosUpgrade()'(overrides?: TransactionOverrides): Promise<BigNumber>

    giveOwnership(
      newOwnerAddr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'giveOwnership(address)'(
      newOwnerAddr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    startArbosUpgrade(overrides?: TransactionOverrides): Promise<BigNumber>

    'startArbosUpgrade()'(overrides?: TransactionOverrides): Promise<BigNumber>
  }
}
