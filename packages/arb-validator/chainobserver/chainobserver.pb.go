//
// Copyright 2020, Offchain Labs, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: chainobserver.proto

package chainobserver

import (
	proto "github.com/golang/protobuf/proto"
	common "github.com/offchainlabs/arbitrum/packages/arb-util/common"
	nodegraph "github.com/offchainlabs/arbitrum/packages/arb-validator/nodegraph"
	structures "github.com/offchainlabs/arbitrum/packages/arb-validator/structures"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ChainObserverBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StakedNodeGraph     *nodegraph.StakedNodeGraphBuf `protobuf:"bytes,1,opt,name=stakedNodeGraph,proto3" json:"stakedNodeGraph,omitempty"`
	ContractAddress     *common.AddressBuf            `protobuf:"bytes,2,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	Inbox               *structures.InboxBuf          `protobuf:"bytes,3,opt,name=inbox,proto3" json:"inbox,omitempty"`
	KnownValidNode      *common.HashBuf               `protobuf:"bytes,4,opt,name=knownValidNode,proto3" json:"knownValidNode,omitempty"`
	CalculatedValidNode *common.HashBuf               `protobuf:"bytes,5,opt,name=calculatedValidNode,proto3" json:"calculatedValidNode,omitempty"`
}

func (x *ChainObserverBuf) Reset() {
	*x = ChainObserverBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chainobserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainObserverBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainObserverBuf) ProtoMessage() {}

func (x *ChainObserverBuf) ProtoReflect() protoreflect.Message {
	mi := &file_chainobserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainObserverBuf.ProtoReflect.Descriptor instead.
func (*ChainObserverBuf) Descriptor() ([]byte, []int) {
	return file_chainobserver_proto_rawDescGZIP(), []int{0}
}

func (x *ChainObserverBuf) GetStakedNodeGraph() *nodegraph.StakedNodeGraphBuf {
	if x != nil {
		return x.StakedNodeGraph
	}
	return nil
}

func (x *ChainObserverBuf) GetContractAddress() *common.AddressBuf {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

func (x *ChainObserverBuf) GetInbox() *structures.InboxBuf {
	if x != nil {
		return x.Inbox
	}
	return nil
}

func (x *ChainObserverBuf) GetKnownValidNode() *common.HashBuf {
	if x != nil {
		return x.KnownValidNode
	}
	return nil
}

func (x *ChainObserverBuf) GetCalculatedValidNode() *common.HashBuf {
	if x != nil {
		return x.CalculatedValidNode
	}
	return nil
}

var File_chainobserver_proto protoreflect.FileDescriptor

var file_chainobserver_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x6f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x1a, 0x1c, 0x61, 0x72, 0x62, 0x2d, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x27, 0x61, 0x72, 0x62, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x6e, 0x6f, 0x64, 0x65,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x61, 0x72, 0x62,
	0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc1, 0x02, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x75, 0x66, 0x12, 0x47, 0x0a, 0x0f, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x42, 0x75, 0x66, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x12, 0x3c, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x75,
	0x66, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x49,
	0x6e, 0x62, 0x6f, 0x78, 0x42, 0x75, 0x66, 0x52, 0x05, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x12, 0x37,
	0x0a, 0x0e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x4e, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x42, 0x75, 0x66, 0x52, 0x0e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a, 0x13, 0x63, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x61,
	0x73, 0x68, 0x42, 0x75, 0x66, 0x52, 0x13, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x47, 0x5a, 0x45, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x61, 0x72, 0x62, 0x69, 0x74, 0x72, 0x75, 0x6d, 0x2f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x61, 0x72, 0x62, 0x2d, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chainobserver_proto_rawDescOnce sync.Once
	file_chainobserver_proto_rawDescData = file_chainobserver_proto_rawDesc
)

func file_chainobserver_proto_rawDescGZIP() []byte {
	file_chainobserver_proto_rawDescOnce.Do(func() {
		file_chainobserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_chainobserver_proto_rawDescData)
	})
	return file_chainobserver_proto_rawDescData
}

var file_chainobserver_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_chainobserver_proto_goTypes = []interface{}{
	(*ChainObserverBuf)(nil),             // 0: chainobserver.ChainObserverBuf
	(*nodegraph.StakedNodeGraphBuf)(nil), // 1: nodegraph.StakedNodeGraphBuf
	(*common.AddressBuf)(nil),            // 2: common.AddressBuf
	(*structures.InboxBuf)(nil),          // 3: structures.InboxBuf
	(*common.HashBuf)(nil),               // 4: common.HashBuf
}
var file_chainobserver_proto_depIdxs = []int32{
	1, // 0: chainobserver.ChainObserverBuf.stakedNodeGraph:type_name -> nodegraph.StakedNodeGraphBuf
	2, // 1: chainobserver.ChainObserverBuf.contractAddress:type_name -> common.AddressBuf
	3, // 2: chainobserver.ChainObserverBuf.inbox:type_name -> structures.InboxBuf
	4, // 3: chainobserver.ChainObserverBuf.knownValidNode:type_name -> common.HashBuf
	4, // 4: chainobserver.ChainObserverBuf.calculatedValidNode:type_name -> common.HashBuf
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_chainobserver_proto_init() }
func file_chainobserver_proto_init() {
	if File_chainobserver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chainobserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainObserverBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chainobserver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chainobserver_proto_goTypes,
		DependencyIndexes: file_chainobserver_proto_depIdxs,
		MessageInfos:      file_chainobserver_proto_msgTypes,
	}.Build()
	File_chainobserver_proto = out.File
	file_chainobserver_proto_rawDesc = nil
	file_chainobserver_proto_goTypes = nil
	file_chainobserver_proto_depIdxs = nil
}
