/*
 * Copyright 2019, Offchain Labs, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
package rollup;
import "common/common.proto";
import "structures/structures.proto";
import "valprotocol/valprotocol.proto";
import "node/node.proto";
option go_package = "github.com/offchainlabs/arbitrum/packages/arb-validator/rollup";

message NodeGraphBuf {
    repeated node.NodeBuf nodes = 1;
    common.HashBuf oldestNodeHash = 2;
    common.HashBuf latestConfirmedHash = 3;
    repeated common.HashBuf    leafHashes = 4;
    valprotocol.ChainParamsBuf params = 5;
}

message StakedNodeGraphBuf {
    NodeGraphBuf nodeGraph = 1;
    repeated StakerBuf stakers = 2;
    repeated ChallengeBuf challenges = 3;
}

message ChainObserverBuf {
    StakedNodeGraphBuf stakedNodeGraph = 1;
    common.AddressBuf contractAddress = 2;
    structures.InboxBuf inbox = 3;
    common.HashBuf knownValidNode = 4;
    common.HashBuf calculatedValidNode = 5;
    common.BlockIdBuf latestBlockId = 6;
    bool isOpinionated = 7;
}

message StakerBuf {
    common.AddressBuf address = 1;
    common.HashBuf location = 2;
    common.TimeTicksBuf creationTime = 3;
    common.AddressBuf challengeAddr = 4;
}

message ChallengeBuf {
    common.BlockIdBuf blockId = 1;
    uint64 logIndex = 2;
    common.AddressBuf asserter = 3;
    common.AddressBuf challenger = 4;
    common.AddressBuf contract = 5;
    common.HashBuf conflictNodeHash = 6;
}
