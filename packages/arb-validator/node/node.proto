/*
 * Copyright 2019, Offchain Labs, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
package node;
import "common/common.proto";
import "structures/structures.proto";
import "valprotocol/valprotocol.proto";
option go_package = "github.com/offchainlabs/arbitrum/packages/arb-validator/node";

message NodeBuf {
    common.HashBuf prevHash = 1;
    common.TimeTicksBuf deadline = 2;
    valprotocol.DisputableNodeBuf disputableNode = 3;
    uint32 linkType = 4;
    valprotocol.VMProtoDataBuf vmProtoData = 5;

    common.HashBuf machineHash = 6;
    structures.ExecutionAssertionBuf assertion = 7;
    uint64 depth = 8;
    common.HashBuf nodeDataHash = 9;
    common.HashBuf innerHash = 10;
    common.HashBuf hash = 11;
    common.HashBuf assertionTxHash = 12;
}
