//
// Copyright 2019, Offchain Labs, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.10.1
// source: structures.proto

package structures

import (
	proto "github.com/golang/protobuf/proto"
	common "github.com/offchainlabs/arbitrum/packages/arb-util/common"
	valprotocol "github.com/offchainlabs/arbitrum/packages/arb-validator-core/valprotocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ExecutionAssertionBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AfterHash    *common.HashBuf   `protobuf:"bytes,1,opt,name=afterHash,proto3" json:"afterHash,omitempty"`
	DidInboxInsn bool              `protobuf:"varint,2,opt,name=didInboxInsn,proto3" json:"didInboxInsn,omitempty"`
	NumGas       uint64            `protobuf:"varint,3,opt,name=numGas,proto3" json:"numGas,omitempty"`
	Messages     []*common.HashBuf `protobuf:"bytes,4,rep,name=messages,proto3" json:"messages,omitempty"`
	Logs         []*common.HashBuf `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *ExecutionAssertionBuf) Reset() {
	*x = ExecutionAssertionBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structures_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionAssertionBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionAssertionBuf) ProtoMessage() {}

func (x *ExecutionAssertionBuf) ProtoReflect() protoreflect.Message {
	mi := &file_structures_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionAssertionBuf.ProtoReflect.Descriptor instead.
func (*ExecutionAssertionBuf) Descriptor() ([]byte, []int) {
	return file_structures_proto_rawDescGZIP(), []int{0}
}

func (x *ExecutionAssertionBuf) GetAfterHash() *common.HashBuf {
	if x != nil {
		return x.AfterHash
	}
	return nil
}

func (x *ExecutionAssertionBuf) GetDidInboxInsn() bool {
	if x != nil {
		return x.DidInboxInsn
	}
	return false
}

func (x *ExecutionAssertionBuf) GetNumGas() uint64 {
	if x != nil {
		return x.NumGas
	}
	return 0
}

func (x *ExecutionAssertionBuf) GetMessages() []*common.HashBuf {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ExecutionAssertionBuf) GetLogs() []*common.HashBuf {
	if x != nil {
		return x.Logs
	}
	return nil
}

type InboxItemBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValType uint32          `protobuf:"varint,1,opt,name=valType,proto3" json:"valType,omitempty"`
	ValHash *common.HashBuf `protobuf:"bytes,2,opt,name=valHash,proto3" json:"valHash,omitempty"`
}

func (x *InboxItemBuf) Reset() {
	*x = InboxItemBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structures_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboxItemBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboxItemBuf) ProtoMessage() {}

func (x *InboxItemBuf) ProtoReflect() protoreflect.Message {
	mi := &file_structures_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboxItemBuf.ProtoReflect.Descriptor instead.
func (*InboxItemBuf) Descriptor() ([]byte, []int) {
	return file_structures_proto_rawDescGZIP(), []int{1}
}

func (x *InboxItemBuf) GetValType() uint32 {
	if x != nil {
		return x.ValType
	}
	return 0
}

func (x *InboxItemBuf) GetValHash() *common.HashBuf {
	if x != nil {
		return x.ValHash
	}
	return nil
}

type InboxBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopCount   *common.BigIntegerBuf `protobuf:"bytes,1,opt,name=topCount,proto3" json:"topCount,omitempty"`
	Items      []*InboxItemBuf       `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	HashOfRest *common.HashBuf       `protobuf:"bytes,3,opt,name=hashOfRest,proto3" json:"hashOfRest,omitempty"`
}

func (x *InboxBuf) Reset() {
	*x = InboxBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structures_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboxBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboxBuf) ProtoMessage() {}

func (x *InboxBuf) ProtoReflect() protoreflect.Message {
	mi := &file_structures_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboxBuf.ProtoReflect.Descriptor instead.
func (*InboxBuf) Descriptor() ([]byte, []int) {
	return file_structures_proto_rawDescGZIP(), []int{2}
}

func (x *InboxBuf) GetTopCount() *common.BigIntegerBuf {
	if x != nil {
		return x.TopCount
	}
	return nil
}

func (x *InboxBuf) GetItems() []*InboxItemBuf {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *InboxBuf) GetHashOfRest() *common.HashBuf {
	if x != nil {
		return x.HashOfRest
	}
	return nil
}

type NodeBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevHash        *common.HashBuf                `protobuf:"bytes,1,opt,name=prevHash,proto3" json:"prevHash,omitempty"`
	Deadline        *common.TimeTicksBuf           `protobuf:"bytes,2,opt,name=deadline,proto3" json:"deadline,omitempty"`
	DisputableNode  *valprotocol.DisputableNodeBuf `protobuf:"bytes,3,opt,name=disputableNode,proto3" json:"disputableNode,omitempty"`
	LinkType        uint32                         `protobuf:"varint,4,opt,name=linkType,proto3" json:"linkType,omitempty"`
	VmProtoData     *valprotocol.VMProtoDataBuf    `protobuf:"bytes,5,opt,name=vmProtoData,proto3" json:"vmProtoData,omitempty"`
	MachineHash     *common.HashBuf                `protobuf:"bytes,6,opt,name=machineHash,proto3" json:"machineHash,omitempty"`
	Assertion       *ExecutionAssertionBuf         `protobuf:"bytes,7,opt,name=assertion,proto3" json:"assertion,omitempty"`
	Depth           uint64                         `protobuf:"varint,8,opt,name=depth,proto3" json:"depth,omitempty"`
	NodeDataHash    *common.HashBuf                `protobuf:"bytes,9,opt,name=nodeDataHash,proto3" json:"nodeDataHash,omitempty"`
	InnerHash       *common.HashBuf                `protobuf:"bytes,10,opt,name=innerHash,proto3" json:"innerHash,omitempty"`
	Hash            *common.HashBuf                `protobuf:"bytes,11,opt,name=hash,proto3" json:"hash,omitempty"`
	AssertionTxHash *common.HashBuf                `protobuf:"bytes,12,opt,name=assertionTxHash,proto3" json:"assertionTxHash,omitempty"`
}

func (x *NodeBuf) Reset() {
	*x = NodeBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structures_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeBuf) ProtoMessage() {}

func (x *NodeBuf) ProtoReflect() protoreflect.Message {
	mi := &file_structures_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeBuf.ProtoReflect.Descriptor instead.
func (*NodeBuf) Descriptor() ([]byte, []int) {
	return file_structures_proto_rawDescGZIP(), []int{3}
}

func (x *NodeBuf) GetPrevHash() *common.HashBuf {
	if x != nil {
		return x.PrevHash
	}
	return nil
}

func (x *NodeBuf) GetDeadline() *common.TimeTicksBuf {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *NodeBuf) GetDisputableNode() *valprotocol.DisputableNodeBuf {
	if x != nil {
		return x.DisputableNode
	}
	return nil
}

func (x *NodeBuf) GetLinkType() uint32 {
	if x != nil {
		return x.LinkType
	}
	return 0
}

func (x *NodeBuf) GetVmProtoData() *valprotocol.VMProtoDataBuf {
	if x != nil {
		return x.VmProtoData
	}
	return nil
}

func (x *NodeBuf) GetMachineHash() *common.HashBuf {
	if x != nil {
		return x.MachineHash
	}
	return nil
}

func (x *NodeBuf) GetAssertion() *ExecutionAssertionBuf {
	if x != nil {
		return x.Assertion
	}
	return nil
}

func (x *NodeBuf) GetDepth() uint64 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *NodeBuf) GetNodeDataHash() *common.HashBuf {
	if x != nil {
		return x.NodeDataHash
	}
	return nil
}

func (x *NodeBuf) GetInnerHash() *common.HashBuf {
	if x != nil {
		return x.InnerHash
	}
	return nil
}

func (x *NodeBuf) GetHash() *common.HashBuf {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *NodeBuf) GetAssertionTxHash() *common.HashBuf {
	if x != nil {
		return x.AssertionTxHash
	}
	return nil
}

var File_structures_proto protoreflect.FileDescriptor

var file_structures_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x1a, 0x13,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x76, 0x61, 0x6c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x76, 0x61, 0x6c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xd4, 0x01, 0x0a, 0x15, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x66, 0x12, 0x2d, 0x0a, 0x09,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x42, 0x75, 0x66,
	0x52, 0x09, 0x61, 0x66, 0x74, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x69, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x49, 0x6e, 0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x64, 0x69, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x49, 0x6e, 0x73, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x47, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x47, 0x61, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x42, 0x75, 0x66, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x61, 0x73, 0x68,
	0x42, 0x75, 0x66, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x53, 0x0a, 0x0c, 0x49, 0x6e, 0x62,
	0x6f, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x75, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x61, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x76, 0x61, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x61,
	0x73, 0x68, 0x42, 0x75, 0x66, 0x52, 0x07, 0x76, 0x61, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x22, 0x9e,
	0x01, 0x0a, 0x08, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x42, 0x75, 0x66, 0x12, 0x31, 0x0a, 0x08, 0x74,
	0x6f, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x42, 0x75, 0x66, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x78,
	0x49, 0x74, 0x65, 0x6d, 0x42, 0x75, 0x66, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2f,
	0x0a, 0x0a, 0x68, 0x61, 0x73, 0x68, 0x4f, 0x66, 0x52, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x61, 0x73, 0x68,
	0x42, 0x75, 0x66, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x68, 0x4f, 0x66, 0x52, 0x65, 0x73, 0x74, 0x22,
	0xd9, 0x04, 0x0a, 0x07, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x75, 0x66, 0x12, 0x2b, 0x0a, 0x08, 0x70,
	0x72, 0x65, 0x76, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x42, 0x75, 0x66, 0x52, 0x08,
	0x70, 0x72, 0x65, 0x76, 0x48, 0x61, 0x73, 0x68, 0x12, 0x30, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x42, 0x75, 0x66,
	0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x64, 0x69,
	0x73, 0x70, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x76, 0x61, 0x6c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x42,
	0x75, 0x66, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d,
	0x0a, 0x0b, 0x76, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x61, 0x6c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x56, 0x4d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x42, 0x75, 0x66,
	0x52, 0x0b, 0x76, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a,
	0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x61, 0x73, 0x68,
	0x42, 0x75, 0x66, 0x52, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x3f, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x75, 0x66, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x12, 0x33, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x42, 0x75, 0x66, 0x52, 0x0c,
	0x6e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2d, 0x0a, 0x09,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x42, 0x75, 0x66,
	0x52, 0x09, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x42, 0x75, 0x66, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x39, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x78, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x42, 0x75, 0x66, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x65,
	0x72, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x42, 0x44, 0x5a, 0x42, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x66, 0x66, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x61, 0x72, 0x62, 0x69, 0x74, 0x72, 0x75, 0x6d, 0x2f,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x61, 0x72, 0x62, 0x2d, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_structures_proto_rawDescOnce sync.Once
	file_structures_proto_rawDescData = file_structures_proto_rawDesc
)

func file_structures_proto_rawDescGZIP() []byte {
	file_structures_proto_rawDescOnce.Do(func() {
		file_structures_proto_rawDescData = protoimpl.X.CompressGZIP(file_structures_proto_rawDescData)
	})
	return file_structures_proto_rawDescData
}

var file_structures_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_structures_proto_goTypes = []interface{}{
	(*ExecutionAssertionBuf)(nil),         // 0: structures.ExecutionAssertionBuf
	(*InboxItemBuf)(nil),                  // 1: structures.InboxItemBuf
	(*InboxBuf)(nil),                      // 2: structures.InboxBuf
	(*NodeBuf)(nil),                       // 3: structures.NodeBuf
	(*common.HashBuf)(nil),                // 4: common.HashBuf
	(*common.BigIntegerBuf)(nil),          // 5: common.BigIntegerBuf
	(*common.TimeTicksBuf)(nil),           // 6: common.TimeTicksBuf
	(*valprotocol.DisputableNodeBuf)(nil), // 7: valprotocol.DisputableNodeBuf
	(*valprotocol.VMProtoDataBuf)(nil),    // 8: valprotocol.VMProtoDataBuf
}
var file_structures_proto_depIdxs = []int32{
	4,  // 0: structures.ExecutionAssertionBuf.afterHash:type_name -> common.HashBuf
	4,  // 1: structures.ExecutionAssertionBuf.messages:type_name -> common.HashBuf
	4,  // 2: structures.ExecutionAssertionBuf.logs:type_name -> common.HashBuf
	4,  // 3: structures.InboxItemBuf.valHash:type_name -> common.HashBuf
	5,  // 4: structures.InboxBuf.topCount:type_name -> common.BigIntegerBuf
	1,  // 5: structures.InboxBuf.items:type_name -> structures.InboxItemBuf
	4,  // 6: structures.InboxBuf.hashOfRest:type_name -> common.HashBuf
	4,  // 7: structures.NodeBuf.prevHash:type_name -> common.HashBuf
	6,  // 8: structures.NodeBuf.deadline:type_name -> common.TimeTicksBuf
	7,  // 9: structures.NodeBuf.disputableNode:type_name -> valprotocol.DisputableNodeBuf
	8,  // 10: structures.NodeBuf.vmProtoData:type_name -> valprotocol.VMProtoDataBuf
	4,  // 11: structures.NodeBuf.machineHash:type_name -> common.HashBuf
	0,  // 12: structures.NodeBuf.assertion:type_name -> structures.ExecutionAssertionBuf
	4,  // 13: structures.NodeBuf.nodeDataHash:type_name -> common.HashBuf
	4,  // 14: structures.NodeBuf.innerHash:type_name -> common.HashBuf
	4,  // 15: structures.NodeBuf.hash:type_name -> common.HashBuf
	4,  // 16: structures.NodeBuf.assertionTxHash:type_name -> common.HashBuf
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_structures_proto_init() }
func file_structures_proto_init() {
	if File_structures_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_structures_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionAssertionBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structures_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboxItemBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structures_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboxBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structures_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_structures_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_structures_proto_goTypes,
		DependencyIndexes: file_structures_proto_depIdxs,
		MessageInfos:      file_structures_proto_msgTypes,
	}.Build()
	File_structures_proto = out.File
	file_structures_proto_rawDesc = nil
	file_structures_proto_goTypes = nil
	file_structures_proto_depIdxs = nil
}
