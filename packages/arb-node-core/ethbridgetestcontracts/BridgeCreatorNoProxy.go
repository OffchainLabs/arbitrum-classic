// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// BridgeCreatorNoProxyABI is the input ABI used to generate the binding from.
const BridgeCreatorNoProxyABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rollup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sequencer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sequencerDelayBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sequencerDelaySeconds\",\"type\":\"uint256\"}],\"name\":\"createBridge\",\"outputs\":[{\"internalType\":\"contractBridge\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contractSequencerInbox\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contractInbox\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contractRollupEventBridge\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contractOutbox\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// BridgeCreatorNoProxyBin is the compiled bytecode used for deploying new contracts.
var BridgeCreatorNoProxyBin = "0x608060405234801561001057600080fd5b5060006100246001600160e01b0361007316565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610077565b3390565b616016806100866000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063058553e914610051578063715018a6146100c95780638da5cb5b146100d3578063f2fde38b146100f7575b600080fd5b61008d6004803603608081101561006757600080fd5b506001600160a01b0381358116916020810135909116906040810135906060013561011d565b604080516001600160a01b0396871681529486166020860152928516848401529084166060840152909216608082015290519081900360a00190f35b6100d1610590565b005b6100db61064e565b604080516001600160a01b039092168252519081900360200190f35b6100d16004803603602081101561010d57600080fd5b50356001600160a01b031661065d565b600080600080600061012d610775565b604051610139906107a3565b604051809103906000f080158015610155573d6000803e3d6000fd5b506001600160a01b0316815260405161016d906107b0565b604051809103906000f080158015610189573d6000803e3d6000fd5b506001600160a01b031660208201526040516101a4906107bd565b604051809103906000f0801580156101c0573d6000803e3d6000fd5b506001600160a01b0316604080830191909152516101dd906107ca565b604051809103906000f0801580156101f9573d6000803e3d6000fd5b506001600160a01b03166060820152604051610214906107d7565b604051809103906000f080158015610230573d6000803e3d6000fd5b5081608001906001600160a01b031690816001600160a01b03168152505080600001516001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561028d57600080fd5b505af11580156102a1573d6000803e3d6000fd5b50505050602081015181516040805163eb990c5960e01b81526001600160a01b0392831660048201528c83166024820152604481018c9052606481018b90529051919092169163eb990c5991608480830192600092919082900301818387803b15801561030d57600080fd5b505af1158015610321573d6000803e3d6000fd5b5050505080604001516001600160a01b031663c4d66de882600001516040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b15801561038557600080fd5b505af1158015610399573d6000803e3d6000fd5b50505050606081015181516040805163485cc95560e01b81526001600160a01b0392831660048201528d831660248201529051919092169163485cc95591604480830192600092919082900301818387803b1580156103f757600080fd5b505af115801561040b573d6000803e3d6000fd5b50505050608081015181516040805163485cc95560e01b81526001600160a01b038e8116600483015292831660248201529051919092169163485cc95591604480830192600092919082900301818387803b15801561046957600080fd5b505af115801561047d573d6000803e3d6000fd5b50508251604080850151815163722dbe7360e11b81526001600160a01b0391821660048201526001602482015291519216935063e45b7ce6925060448082019260009290919082900301818387803b1580156104d857600080fd5b505af11580156104ec573d6000803e3d6000fd5b5050505080600001516001600160a01b031663f2fde38b8b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b15801561054c57600080fd5b505af1158015610560573d6000803e3d6000fd5b50508251602084015160408501516060860151608090960151929f919e509c50939a509850919650505050505050565b610598610771565b6001600160a01b03166105a961064e565b6001600160a01b031614610604576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b610665610771565b6001600160a01b031661067661064e565b6001600160a01b0316146106d1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166107165760405162461bcd60e51b8152600401808060200182810382526026815260200180615fbb6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b6111f9806107e583390190565b611595806119de83390190565b610d0580612f7383390190565b610aba80613c7883390190565b611889806147328339019056fe608060405234801561001057600080fd5b506111d9806100206000396000f3fe6080604052600436106100c85760003560e01c8063945e11471161007a578063945e1147146101f75780639e5d4c4914610221578063ab5d894314610336578063c29372de1461034b578063cee3d7281461037e578063d9dd67ab146103b9578063e45b7ce6146103e3578063f2fde38b1461041e576100c8565b806302bbfad1146100cd5780633dbcc8d114610114578063413b35bd14610129578063715018a6146101705780637ee94329146101875780638129fc1c146101cd5780638da5cb5b146101e2575b600080fd5b610102600480360360608110156100e357600080fd5b5060ff813516906001600160a01b036020820135169060400135610451565b60408051918252519081900360200190f35b34801561012057600080fd5b50610102610567565b34801561013557600080fd5b5061015c6004803603602081101561014c57600080fd5b50356001600160a01b031661056d565b604080519115158252519081900360200190f35b34801561017c57600080fd5b5061018561058e565b005b34801561019357600080fd5b506101b1600480360360208110156101aa57600080fd5b5035610628565b604080516001600160a01b039092168252519081900360200190f35b3480156101d957600080fd5b5061018561064f565b3480156101ee57600080fd5b506101b16106f9565b34801561020357600080fd5b506101b16004803603602081101561021a57600080fd5b5035610708565b34801561022d57600080fd5b506102b36004803603606081101561024457600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561027457600080fd5b82018360208201111561028657600080fd5b803590602001918460018302840111640100000000831117156102a857600080fd5b509092509050610715565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102fa5781810151838201526020016102e2565b50505050905090810190601f1680156103275780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561034257600080fd5b506101b1610879565b34801561035757600080fd5b5061015c6004803603602081101561036e57600080fd5b50356001600160a01b0316610888565b34801561038a57600080fd5b50610185600480360360408110156103a157600080fd5b506001600160a01b03813516906020013515156108a9565b3480156103c557600080fd5b50610102600480360360208110156103dc57600080fd5b5035610ae5565b3480156103ef57600080fd5b506101856004803603604081101561040657600080fd5b506001600160a01b0381351690602001351515610b03565b34801561042a57600080fd5b506101856004803603602081101561044157600080fd5b50356001600160a01b0316610d3d565b3360009081526065602052604081206001015460ff166104a9576040805162461bcd60e51b815260206004820152600e60248201526d09c9ea8be8ca49e9abe929c849eb60931b604482015290519081900360640190fd5b606a5460006104bd86864342863a8a610e2e565b9050600082156104e557606a60018403815481106104d757fe5b906000526020600020015490505b606a6104f18284610ea4565b8154600181018355600092835260209283902001556040805133815260ff8a16928101929092526001600160a01b038816828201526060820187905251829185917f23be8e12e420b5da9fb98d8102572f640fb3c11a0085060472dfc0ed194b3cf79181900360800190a3509095945050505050565b606a5490565b6001600160a01b031660009081526066602052604090206001015460ff1690565b610596610ed0565b6001600160a01b03166105a76106f9565b6001600160a01b0316146105f0576040805162461bcd60e51b81526020600482018190526024820152600080516020611164833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b031690600080516020611184833981519152908390a3603380546001600160a01b0319169055565b6067818154811061063557fe5b6000918252602090912001546001600160a01b0316905081565b600054610100900460ff16806106685750610668610ed4565b80610676575060005460ff16155b6106b15760405162461bcd60e51b815260040180806020018281038252602e815260200180611136602e913960400191505060405180910390fd5b600054610100900460ff161580156106dc576000805460ff1961ff0019909116610100171660011790555b6106e4610ee5565b80156106f6576000805461ff00191690555b50565b6033546001600160a01b031690565b6068818154811061063557fe5b3360009081526066602052604081206001015460609060ff16610771576040805162461bcd60e51b815260206004820152600f60248201526e09c9ea8be8ca49e9abe9eaaa8849eb608b1b604482015290519081900360640190fd5b82156107cc57610789866001600160a01b0316610f82565b6107cc576040805162461bcd60e51b815260206004820152600f60248201526e1393d7d0d3d11157d05517d11154d5608a1b604482015290519081900360640190fd5b606980546001600160a01b0319811633179091556040516001600160a01b0391821691881690879087908790808383808284376040519201945060009350909150508083038185875af1925050503d8060008114610846576040519150601f19603f3d011682016040523d82523d6000602084013e61084b565b606091505b50606980546001600160a01b0319166001600160a01b03949094169390931790925597909650945050505050565b6069546001600160a01b031681565b6001600160a01b031660009081526065602052604090206001015460ff1690565b6108b1610ed0565b6001600160a01b03166108c26106f9565b6001600160a01b03161461090b576040805162461bcd60e51b81526020600482018190526024820152600080516020611164833981519152604482015290519081900360640190fd5b6001600160a01b0382166000908152606660205260409020600181015460ff168080156109355750825b80610947575080158015610947575082155b15610953575050610ae1565b82156109e257604080518082018252606880548252600160208084018281526001600160a01b038a16600081815260669093529582209451855551938201805460ff1916941515949094179093558154908101825591527fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c220977530180546001600160a01b0319169091179055610ade565b6068805460001981019081106109f457fe5b6000918252602090912001548254606880546001600160a01b03909316929091908110610a1d57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508160000154606660006068856000015481548110610a6557fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020556068805480610a9557fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03861682526066905260408120908155600101805460ff191690555b50505b5050565b606a8181548110610af257fe5b600091825260209091200154905081565b610b0b610ed0565b6001600160a01b0316610b1c6106f9565b6001600160a01b031614610b65576040805162461bcd60e51b81526020600482018190526024820152600080516020611164833981519152604482015290519081900360640190fd5b6001600160a01b0382166000908152606560205260409020600181015460ff16808015610b8f5750825b80610ba1575080158015610ba1575082155b15610bad575050610ae1565b8215610c3c57604080518082018252606780548252600160208084018281526001600160a01b038a16600081815260659093529582209451855551938201805460ff1916941515949094179093558154908101825591527f9787eeb91fe3101235e4a76063c7023ecb40f923f97916639c598592fa30d6ae0180546001600160a01b0319169091179055610ade565b606780546000198101908110610c4e57fe5b6000918252602090912001548254606780546001600160a01b03909316929091908110610c7757fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508160000154606560006067856000015481548110610cbf57fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020556067805480610cef57fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03861682526065905260408120908155600101805460ff1916905550505050565b610d45610ed0565b6001600160a01b0316610d566106f9565b6001600160a01b031614610d9f576040805162461bcd60e51b81526020600482018190526024820152600080516020611164833981519152604482015290519081900360640190fd5b6001600160a01b038116610de45760405162461bcd60e51b81526004018080602001828103825260268152602001806111106026913960400191505060405180910390fd5b6033546040516001600160a01b0380841692169060008051602061118483398151915290600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160f89890981b6001600160f81b0319166020808a019190915260609790971b6bffffffffffffffffffffffff19166021890152603588019590955260558701939093526075860191909152609585015260b5808501919091528151808503909101815260d59093019052815191012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b3390565b6000610edf30610f82565b15905090565b600054610100900460ff1680610efe5750610efe610ed4565b80610f0c575060005460ff16155b610f475760405162461bcd60e51b815260040180806020018281038252602e815260200180611136602e913960400191505060405180910390fd5b600054610100900460ff16158015610f72576000805460ff1961ff0019909116610100171660011790555b610f7a610f88565b6106e4611028565b3b151590565b600054610100900460ff1680610fa15750610fa1610ed4565b80610faf575060005460ff16155b610fea5760405162461bcd60e51b815260040180806020018281038252602e815260200180611136602e913960400191505060405180910390fd5b600054610100900460ff161580156106e4576000805460ff1961ff00199091166101001716600117905580156106f6576000805461ff001916905550565b600054610100900460ff16806110415750611041610ed4565b8061104f575060005460ff16155b61108a5760405162461bcd60e51b815260040180806020018281038252602e815260200180611136602e913960400191505060405180910390fd5b600054610100900460ff161580156110b5576000805460ff1961ff0019909116610100171660011790555b60006110bf610ed0565b603380546001600160a01b0319166001600160a01b03831690811790915560405191925090600090600080516020611184833981519152908290a35080156106f6576000805461ff00191690555056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122059aec6ac14d798b64e8f81aea50fccb3139377daff5e2a87048abe0534baa62864736f6c634300060b0033608060405234801561001057600080fd5b506000805460ff191660011790556115688061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638af00545116100715780638af00545146102745780639afc500d146102c1578063b71939b114610391578063d9dd67ab14610399578063e367a2c1146103b6578063eb990c59146103be576100b4565b806306cc91b2146100b95780630a17a46414610140578063342025fa146102125780633dbcc8d11461022c5780635c1bba38146102345780636f791d2914610258575b600080fd5b610127600480360360408110156100cf57600080fd5b810190602081018135600160201b8111156100e957600080fd5b8201836020820111156100fb57600080fd5b803590602001918460018302840111600160201b8311171561011c57600080fd5b9193509150356103fa565b6040805192835260208301919091528051918290030190f35b610210600480360360c081101561015657600080fd5b810190602081018135600160201b81111561017057600080fd5b82018360208201111561018257600080fd5b803590602001918460018302840111600160201b831117156101a357600080fd5b919390929091602081019035600160201b8111156101c057600080fd5b8201836020820111156101d257600080fd5b803590602001918460208302840111600160201b831117156101f357600080fd5b91935091508035906020810135906040810135906060013561054c565b005b61021a610646565b60408051918252519081900360200190f35b61021a61064c565b61023c610652565b604080516001600160a01b039092168252519081900360200190f35b610260610661565b604080519115158252519081900360200190f35b610210600480360361010081101561028b57600080fd5b5080359060ff60208201351690604081019060808101359060a0810135906001600160a01b0360c0820135169060e0013561066a565b610210600480360360c08110156102d757600080fd5b810190602081018135600160201b8111156102f157600080fd5b82018360208201111561030357600080fd5b803590602001918460018302840111600160201b8311171561032457600080fd5b919390929091602081019035600160201b81111561034157600080fd5b82018360208201111561035357600080fd5b803590602001918460208302840111600160201b8311171561037457600080fd5b9193509150803590602081013590604081013590606001356109d9565b61023c610a99565b61021a600480360360208110156103af57600080fd5b5035610aa8565b61021a610ac6565b610210600480360360808110156103d457600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135610acc565b6000808261040d57506000905080610544565b60008061044f87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250610b54915050565b90925090506000811561048a5761048188888560018087038154811061047157fe5b9060005260206000200154610bc8565b90935060010190505b60006001838154811061049957fe5b9060005260206000200154905060006104b48a8a8785610bc8565b90955090508288116104fb576040805162461bcd60e51b815260206004820152600b60248201526a10905510d217d4d510549560aa1b604482015290519081900360640190fd5b8088111561053c576040805162461bcd60e51b815260206004820152600960248201526810905510d217d1539160ba1b604482015290519081900360640190fd5b955093505050505b935093915050565b6002546000806105628b8b8b8b8b8b8b8b610d58565b9150915081837f43ca2bb3f5bb808f726cc6c9ebb2c1c26f8bb96a92e4ada823f15ff47138e063600254878f8f8f8f8f8f8f8c6001808054905003604051808c81526020018b8152602001806020018060200188815260200187815260200186815260200185815260200184815260200183810383528c8c82818152602001925080828437600083820152601f01601f191690910184810383528a8152602090810191508b908b0280828437600083820152604051601f909101601f19169092018290039f50909d5050505050505050505050505050a35050505050505050505050565b60075481565b60025481565b6005546001600160a01b031681565b60005460ff1690565b60035487116106b4576040805162461bcd60e51b815260206004820152601160248201527044454c415945445f4241434b574152445360781b604482015290519081900360640190fd5b60006106ca8784883560208a01358989886111d5565b6006549091504387359091011061071b576040805162461bcd60e51b815260206004820152601060248201526f4d41585f44454c41595f424c4f434b5360801b604482015290519081900360640190fd5b6007544260208801359091011061076a576040805162461bcd60e51b815260206004820152600e60248201526d4d41585f44454c41595f54494d4560901b604482015290519081900360640190fd5b600060018911156107f457600480546040805163d9dd67ab60e01b81526001198d0193810193909352516001600160a01b039091169163d9dd67ab916024808301926020929190829003018186803b1580156107c557600080fd5b505afa1580156107d9573d6000803e3d6000fd5b505050506040513d60208110156107ef57600080fd5b505190505b6107fe818361124b565b600480546040805163d9dd67ab60e01b81526000198e0193810193909352516001600160a01b039091169163d9dd67ab916024808301926020929190829003018186803b15801561084e57600080fd5b505afa158015610862573d6000803e3d6000fd5b505050506040513d602081101561087857600080fd5b5051146108c2576040805162461bcd60e51b81526020600482015260136024820152722222a620aca2a22fa0a1a1aaa6aaa620aa27a960691b604482015290519081900360640190fd5b5050600254600154600090156108f2576001805460001981019081106108e457fe5b906000526020600020015490505b600080600061090484868e4342611277565b92509250925060018290806001815401808255809150506001900390600052602060002001600090919091909150558060028190555083857f85b6a949bf20bfd6bc6e20f98fb490c7944ab61dcfa5a30b5dae543412c9a8a0838f60405180604001604052808881526020018981525060018080549050036040518085815260200184815260200183600260200280838360005b838110156109b0578181015183820152602001610998565b5050505090500182815260200194505050505060405180910390a3505050505050505050505050565b333214610a1b576040805162461bcd60e51b815260206004820152600b60248201526a6f726967696e206f6e6c7960a81b604482015290519081900360640190fd5b600254600080610a318b8b8b8b8b8b8b8b610d58565b6002546001546040805192835260208301899052828101849052600019909101606083015251929450909250839185917f90d3659be0edf0014931e9f8a1c145ec8dbc792776c08a028a148a67700a5812919081900360800190a35050505050505050505050565b6004546001600160a01b031681565b60018181548110610ab557fe5b600091825260209091200154905081565b60065481565b6004546001600160a01b031615610b19576040805162461bcd60e51b815260206004820152600c60248201526b1053149150511657d253925560a21b604482015290519081900360640190fd5b600480546001600160a01b039586166001600160a01b0319918216179091556005805494909516931692909217909255600691909155600755565b60008082845110158015610b6c575060208385510310155b610ba9576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b60208301610bbd858563ffffffff6114b116565b915091509250929050565b600080600080600080610c128a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508c9250610b54915050565b8094508199505050610c5b8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508c9250610b54915050565b8093508199505050610ca48a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508c9250610b54915050565b809250819950505082828260405160200180807129b2b8bab2b731b2b91036b2b9b9b0b3b29d60711b8152506012018481526020018381526020018281526020019350505050604051602081830303815290604052805190602001209250816001019350868314610d48576040805162461bcd60e51b815260206004820152600960248201526842415443485f41434360b81b604482015290519081900360640190fd5b5095989197509095505050505050565b60055460009081906001600160a01b03163314610dad576040805162461bcd60e51b815260206004820152600e60248201526d27a7262cafa9a2a8aaa2a721a2a960911b604482015290519081900360640190fd5b4360065487011015610df6576040805162461bcd60e51b815260206004820152600d60248201526c109313d0d2d7d513d3d7d3d311609a1b604482015290519081900360640190fd5b43861115610e3b576040805162461bcd60e51b815260206004820152600d60248201526c424c4f434b5f544f4f5f4e455760981b604482015290519081900360640190fd5b4260075486011015610e83576040805162461bcd60e51b815260206004820152600c60248201526b1512535157d513d3d7d3d31160a21b604482015290519081900360640190fd5b42851115610ec7576040805162461bcd60e51b815260206004820152600c60248201526b54494d455f544f4f5f4e455760a01b604482015290519081900360640190fd5b600354841015610f12576040805162461bcd60e51b815260206004820152601160248201527044454c415945445f4241434b574152445360781b604482015290519081900360640190fd5b6001841015610f5c576040805162461bcd60e51b8152602060048201526011602482015270135554d517d111531056515117d2539255607a1b604482015290519081900360640190fd5b6001600354101580610f6c575086155b610fb7576040805162461bcd60e51b8152602060048201526017602482015276135554d517d111531056515117d253925517d4d5105495604a1b604482015290519081900360640190fd5b60015415610fdf57600180546000198101908110610fd157fe5b906000526020600020015491505b600254826000805b8a8110156110f35760008e838f8f8f8681811061100057fe5b905060200201358601926110169392919061150a565b604051808383808284378083019250505092505050604051809103902090506000600390508d8d8481811061104757fe5b905060200201356000141561105a575060065b600061106c82338f8f8b6000896111d5565b905085878260405160200180807129b2b8bab2b731b2b91036b2b9b9b0b3b29d60711b81525060120184815260200183815260200182815260200193505050506040516020818303038152906040528051906020012095508e8e858181106110d057fe5b905060200201358501945086806001019750505050508080600101915050610fe7565b506111018284898c8c611277565b60025492965094509250831161114c576040805162461bcd60e51b815260206004820152600b60248201526a08a9aa0a8b2be8482a886960ab1b604482015290519081900360640190fd5b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60182905560028390558582146111c5576040805162461bcd60e51b815260206004820152600960248201526841465445525f41434360b81b604482015290519081900360640190fd5b5050509850989650505050505050565b6040805160f89890981b6001600160f81b0319166020808a019190915260609790971b6bffffffffffffffffffffffff19166021890152603588019590955260558701939093526075860191909152609585015260b5808501919091528151808503909101815260d59093019052815191012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6000806000806003548711156114a7576004805460408051633dbcc8d160e01b815290516001600160a01b0390921692633dbcc8d1928282019260209290829003018186803b1580156112c957600080fd5b505afa1580156112dd573d6000803e3d6000fd5b505050506040513d60208110156112f357600080fd5b505187111561133b576040805162461bcd60e51b815260206004820152600f60248201526e2222a620aca2a22faa27a7afa320a960891b604482015290519081900360640190fd5b600480546040805163d9dd67ab60e01b81526000198b0193810193909352516001600160a01b039091169163d9dd67ab916024808301926020929190829003018186803b15801561138b57600080fd5b505afa15801561139f573d6000803e3d6000fd5b505050506040513d60208110156113b557600080fd5b505160035460408051702232b630bcb2b21036b2b9b9b0b3b2b99d60791b602082810191909152603182019d909d52605181018c905260718101839052609181018b905260b18082018590528251808303909101815260d190910190915280519b019a909a2060608051608020919b8a03909a01999192506000906114469060069083908b908b908f9084906111d5565b604080517129b2b8bab2b731b2b91036b2b9b9b0b3b29d60711b602080830191909152603282019e909e52605281018d905260728082019390935281518082039093018352609201905280519b019a909a2060038990559950506001909701965b9895505050505050565b60008160200183511015611501576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b60008085851115611519578182fd5b83861115611525578182fd5b505082019391909203915056fea2646970667358221220cc5aad84bc4437bcd52c3b0d38f127f0d5af53676729db6e8e12829b59d6b06664736f6c634300060b0033608060405234801561001057600080fd5b506000805460ff19166001179055610cd88061002d6000396000f3fe6080604052600436106100a75760003560e01c80638a631aa6116100645780638a631aa6146103c7578063ad9d4ba314610463578063b75436bb14610489578063b8c6a38814610504578063c4d66de81461053c578063e78cea9214610571576100a7565b80631fe927cf146100ac5780635075788b146101395780635e916758146101dc578063679b6ded1461026657806367ef3ab81461030f5780636f791d291461039e575b600080fd5b3480156100b857600080fd5b50610127600480360360208110156100cf57600080fd5b810190602081018135600160201b8111156100e957600080fd5b8201836020820111156100fb57600080fd5b803590602001918460018302840111600160201b8311171561011c57600080fd5b5090925090506105a2565b60408051918252519081900360200190f35b34801561014557600080fd5b50610127600480360360c081101561015c57600080fd5b8135916020810135916040820135916001600160a01b03606082013516916080820135919081019060c0810160a0820135600160201b81111561019e57600080fd5b8201836020820111156101b057600080fd5b803590602001918460018302840111600160201b831117156101d157600080fd5b509092509050610645565b610127600480360360808110156101f257600080fd5b8135916020810135916001600160a01b036040830135169190810190608081016060820135600160201b81111561022857600080fd5b82018360208201111561023a57600080fd5b803590602001918460018302840111600160201b8311171561025b57600080fd5b5090925090506106d0565b610127600480360361010081101561027d57600080fd5b6001600160a01b038235811692602081013592604082013592606083013581169260808101359091169160a08201359160c081013591810190610100810160e0820135600160201b8111156102d157600080fd5b8201836020820111156102e357600080fd5b803590602001918460018302840111600160201b8311171561030457600080fd5b509092509050610751565b610127600480360360a081101561032557600080fd5b8135916020810135916040820135916001600160a01b036060820135169181019060a081016080820135600160201b81111561036057600080fd5b82018360208201111561037257600080fd5b803590602001918460018302840111600160201b8311171561039357600080fd5b50909250905061080d565b3480156103aa57600080fd5b506103b3610897565b604080519115158252519081900360200190f35b3480156103d357600080fd5b50610127600480360360a08110156103ea57600080fd5b8135916020810135916001600160a01b036040830135169160608101359181019060a081016080820135600160201b81111561042557600080fd5b82018360208201111561043757600080fd5b803590602001918460018302840111600160201b8311171561045857600080fd5b5090925090506108a0565b6101276004803603602081101561047957600080fd5b50356001600160a01b0316610917565b34801561049557600080fd5b50610127600480360360208110156104ac57600080fd5b810190602081018135600160201b8111156104c657600080fd5b8201836020820111156104d857600080fd5b803590602001918460018302840111600160201b831117156104f957600080fd5b509092509050610974565b6101276004803603608081101561051a57600080fd5b506001600160a01b038135169060208101359060408101359060600135610a09565b34801561054857600080fd5b5061056f6004803603602081101561055f57600080fd5b50356001600160a01b0316610ac0565b005b34801561057d57600080fd5b50610586610b3a565b604080516001600160a01b039092168252519081900360200190f35b60003332146105e6576040805162461bcd60e51b815260206004820152600b60248201526a6f726967696e206f6e6c7960a81b604482015290519081900360640190fd5b600061061060033386866040518083838082843760405192018290039091209350610b4e92505050565b60405190915081907fab532385be8f1005a4b6ba8fa20a2245facb346134ac739fe9a5198dc1580b9c90600090a29392505050565b60006106c460033360008b8b8b8b60601b60601c6001600160a01b03168b8b8b604051602001808960ff1660ff1660f81b81526001018881526020018781526020018681526020018581526020018481526020018383808284378083019250505098505050505050505050604051602081830303815290604052610be9565b98975050505050505050565b6000610747600733600189898960601b60601c6001600160a01b0316348a8a604051602001808860ff1660ff1660f81b815260010187815260200186815260200185815260200184815260200183838082843780830192505050975050505050505050604051602081830303815290604052610be9565b9695505050505050565b60006107ff6009338c60601b60601c6001600160a01b03168c348d8d60601b60601c6001600160a01b03168d60601b60601c6001600160a01b03168d8d8d8d90508e8e604051602001808c81526020018b81526020018a8152602001898152602001888152602001878152602001868152602001858152602001848152602001838380828437808301925050509b505050505050505050505050604051602081830303815290604052610be9565b9a9950505050505050505050565b600061088c60073360008a8a8a8a60601b60601c6001600160a01b0316348b8b604051602001808960ff1660ff1660f81b81526001018881526020018781526020018681526020018581526020018481526020018383808284378083019250505098505050505050505050604051602081830303815290604052610be9565b979650505050505050565b60005460ff1690565b600061088c60033360018a8a8a60601b60601c6001600160a01b03168a8a8a604051602001808860ff1660ff1660f81b815260010187815260200186815260200185815260200184815260200183838082843780830192505050975050505050505050604051602081830303815290604052610be9565b60408051600160f81b6020820152600060218201819052604182018190526001600160a01b0384166061830152346081808401919091528351808403909101815260a190920190925261096e906007908490610be9565b92915050565b60008061099f60033386866040518083838082843760405192018290039091209350610b4e92505050565b9050807fff64905f73a67fb594e0f940a8075a860db489ad991e032f48c81123eb52d60b858560405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a29392505050565b6040805163679b6ded60e01b81526001600160a01b0386166004820152346024820152604481018590523360648201819052608482015260a4810184905260c4810183905261010060e4820152600061010482018190529151309163679b6ded9161014480830192602092919082900301818787803b158015610a8b57600080fd5b505af1158015610a9f573d6000803e3d6000fd5b505050506040513d6020811015610ab557600080fd5b505195945050505050565b60005461010090046001600160a01b031615610b12576040805162461bcd60e51b815260206004820152600c60248201526b1053149150511657d253925560a21b604482015290519081900360640190fd5b600080546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60005461010090046001600160a01b031681565b60008054604080516302bbfad160e01b815260ff871660048201526001600160a01b038681166024830152604482018690529151610100909304909116916302bbfad1913491606480830192602092919082900301818588803b158015610bb457600080fd5b505af1158015610bc8573d6000803e3d6000fd5b50505050506040513d6020811015610bdf57600080fd5b5051949350505050565b600080610bfe85858580519060200120610b4e565b9050807fff64905f73a67fb594e0f940a8075a860db489ad991e032f48c81123eb52d60b846040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c60578181015183820152602001610c48565b50505050905090810190601f168015610c8d5780820380516001836020036101000a031916815260200191505b509250505060405180910390a294935050505056fea26469706673582212208a396139a48fb7a4e24b4da8b2e1abec9b87dc508ac05d08696e65f0e3c85e7064736f6c634300060b0033608060405234801561001057600080fd5b506000805460ff19166001179055610a8d8061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c806316b9109b1461007d57806330a826b41461009c578063485cc955146100b957806364126c7c146100e75780636f791d29146101135780638b8ca1991461012f578063b0f2af2914610167578063f03c04a514610208575b600080fd5b61009a6004803603602081101561009357600080fd5b5035610234565b005b61009a600480360360208110156100b257600080fd5b50356102b5565b61009a600480360360408110156100cf57600080fd5b506001600160a01b0381358116916020013516610333565b61009a600480360360408110156100fd57600080fd5b50803590602001356001600160a01b03166103b8565b61011b6105df565b604080519115158252519081900360200190f35b61009a6004803603608081101561014557600080fd5b50803590602081013590604081013590606001356001600160a01b03166105e8565b61009a600480360360e081101561017d57600080fd5b8135916020810135916040820135916060810135916001600160a01b03608083013581169260a08101359091169181019060e0810160c08201356401000000008111156101c957600080fd5b8201836020820111156101db57600080fd5b803590602001918460018302840111640100000000831117156101fd57600080fd5b509092509050610689565b61009a6004803603604081101561021e57600080fd5b506001600160a01b03813516906020013561088d565b6001546001600160a01b03163314610281576040805162461bcd60e51b815260206004820152600b60248201526a04f4e4c595f524f4c4c55560ac1b604482015290519081900360640190fd5b60408051600160f81b602082015260218082018490528251808303909101815260419091019091526102b290610927565b50565b6001546001600160a01b03163314610302576040805162461bcd60e51b815260206004820152600b60248201526a04f4e4c595f524f4c4c55560ac1b604482015290519081900360640190fd5b60408051600160f91b602082015260218082018490528251808303909101815260419091019091526102b290610927565b6001546001600160a01b031615610380576040805162461bcd60e51b815260206004820152600c60248201526b1053149150511657d253925560a21b604482015290519081900360640190fd5b60008054610100600160a81b0319166101006001600160a01b0394851602179055600180546001600160a01b03191691909216179055565b6001546001600160a01b03163314610405576040805162461bcd60e51b815260206004820152600b60248201526a04f4e4c595f524f4c4c55560ac1b604482015290519081900360640190fd5b60015460408051634f0f4aa960e01b81526004810185905290516001600160a01b03909216916000918391634f0f4aa991602480820192602092909190829003018186803b15801561045657600080fd5b505afa15801561046a573d6000803e3d6000fd5b505050506040513d602081101561048057600080fd5b5051604080516348b4573960e11b81526001600160a01b038681166004830152915192935090831691639168ae7291602480820192602092909190829003018186803b1580156104cf57600080fd5b505afa1580156104e3573d6000803e3d6000fd5b505050506040513d60208110156104f957600080fd5b5051610539576040805162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b604482015290519081900360640190fd5b816001600160a01b0316632b2af0ab856040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561057d57600080fd5b505afa158015610591573d6000803e3d6000fd5b505060408051600160fa1b6020820152602181018890526001600160a01b0387166041808301919091528251808303909101815260619091019091526105d992509050610927565b50505050565b60005460ff1690565b6001546001600160a01b03163314610635576040805162461bcd60e51b815260206004820152600b60248201526a04f4e4c595f524f4c4c55560ac1b604482015290519081900360640190fd5b60408051600060208201526021810186905260418101859052436061820152608181018490526001600160a01b03831660a1808301919091528251808303909101815260c19091019091526105d990610927565b6001546001600160a01b031633146106d6576040805162461bcd60e51b815260206004820152600b60248201526a04f4e4c595f524f4c4c55560ac1b604482015290519081900360640190fd5b6060888888888860601b60601c6001600160a01b03168860601b60601c6001600160a01b03168888604051602001808981526020018881526020018781526020018681526020018581526020018481526020018383808284376040805191909301818103601f190182528084526000805483516020808601919091206302bbfad160e01b855260048086015233602486015260448501529551939f50909d5061010090046001600160a01b03169b506302bbfad19a5060648082019a509398509096508690039091019350849250899150889050803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b505050506040513d60208110156107e257600080fd5b5051604080516020808252855182820152855193945084937fff64905f73a67fb594e0f940a8075a860db489ad991e032f48c81123eb52d60b938793928392918301919085019080838360005b8381101561084757818101518382015260200161082f565b50505050905090810190601f1680156108745780820380516001836020036101000a031916815260200191505b509250505060405180910390a250505050505050505050565b6001546001600160a01b031633146108da576040805162461bcd60e51b815260206004820152600b60248201526a04f4e4c595f524f4c4c55560ac1b604482015290519081900360640190fd5b60408051600360f81b60208201526001600160a01b0384166021820152604181018390524360618083019190915282518083039091018152608190910190915261092390610927565b5050565b600080548251602080850191909120604080516302bbfad160e01b8152600860048201523360248201526044810192909252516101009093046001600160a01b0316936302bbfad193606480840194939192918390030190829087803b15801561099057600080fd5b505af11580156109a4573d6000803e3d6000fd5b505050506040513d60208110156109ba57600080fd5b505160408051602080825284518282015284517fff64905f73a67fb594e0f940a8075a860db489ad991e032f48c81123eb52d60b938693928392918301919085019080838360005b83811015610a1a578181015183820152602001610a02565b50505050905090810190601f168015610a475780820380516001836020036101000a031916815260200191505b509250505060405180910390a25056fea2646970667358221220465270ccf903279fbb9bfaa08ee0b1ce31a8ab0990b7fb7e14b3393f0132301064736f6c634300060b0033608060405234801561001057600080fd5b506000805460ff1916600117905561185c8061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80636f791d29116100715780636f791d29146102a757806380648b02146102c35780638515bc6a146102cb5780639c5cfe0b146102d35780639f0c04bf146103cf578063b0f305371461046e576100b3565b80627436d3146100b857806305d3efe6146101705780630c726847146101785780634654779014610238578063485cc955146102405780636d5161ec1461026e575b600080fd5b61015e600480360360608110156100ce57600080fd5b810190602081018135600160201b8111156100e857600080fd5b8201836020820111156100fa57600080fd5b803590602001918460208302840111600160201b8311171561011b57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505082359350505060200135610476565b60408051918252519081900360200190f35b61015e6104b1565b6102366004803603604081101561018e57600080fd5b810190602081018135600160201b8111156101a857600080fd5b8201836020820111156101ba57600080fd5b803590602001918460018302840111600160201b831117156101db57600080fd5b919390929091602081019035600160201b8111156101f857600080fd5b82018360208201111561020a57600080fd5b803590602001918460208302840111600160201b8311171561022b57600080fd5b5090925090506104b7565b005b61015e6105a3565b6102366004803603604081101561025657600080fd5b506001600160a01b03813581169160200135166105b2565b61028b6004803603602081101561028457600080fd5b5035610690565b604080516001600160a01b039092168252519081900360200190f35b6102af6106b7565b604080519115158252519081900360200190f35b61028b6106c0565b61015e6106cf565b61023660048036036101408110156102ea57600080fd5b81359190810190604081016020820135600160201b81111561030b57600080fd5b82018360208201111561031d57600080fd5b803590602001918460208302840111600160201b8311171561033e57600080fd5b919390928235926001600160a01b03602082013581169360408301359091169260608301359260808101359260a08201359260c08301359261010081019060e00135600160201b81111561039157600080fd5b8201836020820111156103a357600080fd5b803590602001918460018302840111600160201b831117156103c457600080fd5b5090925090506106e5565b61015e600480360360e08110156103e557600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359160808201359160a08101359181019060e0810160c0820135600160201b81111561043057600080fd5b82018360208201111561044257600080fd5b803590602001918460018302840111600160201b8311171561046357600080fd5b5090925090506108a8565b61015e610948565b60006104a98484846040516020018082815260200191505060405160208183030381529060405280519060200120610957565b949350505050565b60035490565b60005461010090046001600160a01b03163314610509576040805162461bcd60e51b815260206004820152600b60248201526a04f4e4c595f524f4c4c55560ac1b604482015290519081900360640190fd5b806000805b8281101561059a5761057887838888888681811061052857fe5b9050602002013586019261053e93929190611329565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a2592505050565b84848281811061058457fe5b602002919091013592909201915060010161050e565b50505050505050565b6005546001600160801b031690565b60005461010090046001600160a01b031615610604576040805162461bcd60e51b815260206004820152600c60248201526b1053149150511657d253925560a21b604482015290519081900360640190fd5b60008054610100600160a81b0319166101006001600160a01b038581169190910291909117909155600180546001600160a01b03191691831691909117905560405161064f9061131c565b604051809103906000f08015801561066b573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b03929092169190911790555050565b6003818154811061069d57fe5b6000918252602090912001546001600160a01b0316905081565b60005460ff1690565b6004546001600160a01b031690565b600554600160801b90046001600160801b031690565b60006106f789898989898989896108a8565b905061073a8d8d8d808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508f9250869150610be89050565b8c896001600160a01b0316896001600160a01b03167f20af7f3bbfe38132b8900ae295cd9c8d1914be7052d061a511f3f728dab189648d6040518082815260200191505060405180910390a46004805460058054600680546001600160a01b038f81166001600160a01b03198716179096556001600160801b038c8116600160801b9081028f83166001600160801b0319808816919091178416919091179096558c821695831695909517909255604080516020601f8b018190048102820181019092528981529690951695828416959490930482169391169161083c918e918b918b908b9081908401838280828437600092019190915250610e4192505050565b600480546001600160a01b03959095166001600160a01b031990951694909417909355600580546001600160801b03928316600160801b029383166001600160801b03199182161783169390931790556006805491909316911617905550505050505050505050505050565b600060038960601b60601c6001600160a01b03168960601b60601c6001600160a01b0316898989898989604051602001808a60ff1660ff1660f81b815260010189815260200188815260200187815260200186815260200185815260200184815260200183838082843780830192505050995050505050505050505060405160208183030381529060405280519060200120905098975050505050505050565b6006546001600160801b031690565b825160009061010081111561096b57600080fd5b8260005b82811015610a1b57600286066109c85786818151811061098b57fe5b6020026020010151826040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209150610a0d565b818782815181106109d557fe5b602002602001015160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012091505b60028604955060010161096f565b5095945050505050565b805160009082908290610a3457fe5b01602001516001600160f81b0319161415610be5578051606114610a8c576040805162461bcd60e51b815260206004820152600a6024820152690848288be988a9c8ea8960b31b604482015290519081900360640190fd5b6000610a9f82600163ffffffff61105e16565b90506000610ab483602163ffffffff61105e16565b90506000610ac984604163ffffffff61105e16565b600254909150600090610ae4906001600160a01b03166110b7565b9050806001600160a01b0316635b36c66b83856040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b158015610b3457600080fd5b505af1158015610b48573d6000803e3d6000fd5b5050600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b810180546001600160a01b0386166001600160a01b0319909116179055604080518281526020810187905280820188905290519193508792507fe5ccc8d7080a4904b2f4e42d91e8f06b13fe6cb2181ad1fe14644e856b44c131919081900360600190a250505050505b50565b61010083511115610c31576040805162461bcd60e51b815260206004820152600e60248201526d50524f4f465f544f4f5f4c4f4e4760901b604482015290519081900360640190fd5b825160020a8210610c7c576040805162461bcd60e51b815260206004820152601060248201526f1410551217d393d517d352539253505360821b604482015290519081900360640190fd5b6000610c89848484610476565b9050600060038681548110610c9a57fe5b6000918252602090912001546001600160a01b0316905080610cef576040805162461bcd60e51b815260206004820152600960248201526809c9ebe9eaaa8849eb60bb1b604482015290519081900360640190fd5b600084865160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506000826001600160a01b03166357d61c0b85846040518363ffffffff1660e01b81526004018083815260200182815260200192505050602060405180830381600087803b158015610d7357600080fd5b505af1158015610d87573d6000803e3d6000fd5b505050506040513d6020811015610d9d57600080fd5b5051905080610e3757826001600160a01b03166383197ef06040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610de157600080fd5b505af1158015610df5573d6000803e3d6000fd5b50505050600060038981548110610e0857fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b5050505050505050565b600154604051639e5d4c4960e01b81526001600160a01b03858116600483019081526024830186905260606044840181815286516064860152865160009692959490921693639e5d4c49938a938a938a93909160849091019060208501908083838e5b83811015610ebc578181015183820152602001610ea4565b50505050905090810190601f168015610ee95780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040908152811015610f4757600080fd5b815160208301805160405192949293830192919084600160201b821115610f6d57600080fd5b908301906020820185811115610f8257600080fd5b8251600160201b811182820188101715610f9b57600080fd5b82525081516020918201929091019080838360005b83811015610fc8578181015183820152602001610fb0565b50505050905090810190601f168015610ff55780820380516001836020036101000a031916815260200191505b506040525050509150915081611057578051156110155780518082602001fd5b6040805162461bcd60e51b81526020600482015260126024820152711094925111d157d0d0531317d1905253115160721b604482015290519081900360640190fd5b5050505050565b600081602001835110156110ae576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b6000816110cc816001600160a01b0316611275565b604051806040016040528060188152602001772727afa1a7a72a2920a1aa2fa1a627a722afa6a0a9aa22a960411b815250906111865760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561114b578181015183820152602001611133565b50505050905090810190601f1680156111785780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50806001600160a01b0316636f791d296040518163ffffffff1660e01b815260040160206040518083038186803b1580156111c057600080fd5b505afa1580156111d4573d6000803e3d6000fd5b505050506040513d60208110156111ea57600080fd5b505160408051808201909152600c81526b21a627a722afa6a0a9aa22a960a11b60208201529061125b5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561114b578181015183820152602001611133565b5061126e836001600160a01b031661127f565b9392505050565b803b15155b919050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b03811661127a576040805162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015290519081900360640190fd5b6104d58061135283390190565b60008085851115611338578182fd5b83861115611344578182fd5b505082019391909203915056fe608060405234801561001057600080fd5b506000805460ff191660011790556104a88061002d6000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80635780e4e71461007257806357d61c0b1461008c5780635b36c66b146100af5780636f791d29146100d457806383197ef0146100f05780639db9af81146100f8578063ebf0c71714610115575b600080fd5b61007a61011d565b60408051918252519081900360200190f35b61007a600480360360408110156100a257600080fd5b5080359060200135610123565b6100d2600480360360408110156100c557600080fd5b508035906020013561023b565b005b6100dc610330565b604080519115158252519081900360200190f35b6100d2610339565b6100dc6004803603602081101561010e57600080fd5b503561039a565b61007a6103af565b60025481565b6000805461010090046001600160a01b0316331461017a576040805162461bcd60e51b815260206004820152600f60248201526e09c9ea8be8ca49e9abe9eaaa8849eb608b1b604482015290519081900360640190fd5b60008281526003602052604090205460ff16156101ce576040805162461bcd60e51b815260206004820152600d60248201526c1053149150511657d4d4115395609a1b604482015290519081900360640190fd5b600154831461020f576040805162461bcd60e51b815260206004820152600860248201526710905117d493d3d560c21b604482015290519081900360640190fd5b506000818152600360205260409020805460ff1916600117905560028054600019019081905592915050565b60005461010090046001600160a01b03161561028d576040805162461bcd60e51b815260206004820152600c60248201526b1053149150511657d253925560a21b604482015290519081900360640190fd5b600154156102d1576040805162461bcd60e51b815260206004820152600c60248201526b1053149150511657d253925560a21b604482015290519081900360640190fd5b8161030e576040805162461bcd60e51b815260206004820152600860248201526710905117d493d3d560c21b604482015290519081900360640190fd5b60008054610100600160a81b0319163361010002179055600191909155600255565b60005460ff1690565b60005461010090046001600160a01b0316331461038f576040805162461bcd60e51b815260206004820152600f60248201526e09c9ea8be8ca49e9abe9eaaa8849eb608b1b604482015290519081900360640190fd5b610398336103b5565b565b60036020526000908152604090205460ff1681565b60015481565b6000546040805180820190915260098152684e4f545f434c4f4e4560b81b60208201529060ff16156104655760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561042a578181015183820152602001610412565b50505050905090810190601f1680156104575780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50806001600160a01b0316fffea264697066735822122060ded5f2eed3062d72d682d9c9161508dc45514a0b9865f849c11a588daae5e864736f6c634300060b0033a26469706673582212200921312a9bc456c5183c928b47d2dc2bac8520c4433ff775d46777baa6369dc964736f6c634300060b00334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122075b97b09bcb26ed053a458803284695abec342d9547813a818ed8c6798713ac264736f6c634300060b0033"

// DeployBridgeCreatorNoProxy deploys a new Ethereum contract, binding an instance of BridgeCreatorNoProxy to it.
func DeployBridgeCreatorNoProxy(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *BridgeCreatorNoProxy, error) {
	parsed, err := abi.JSON(strings.NewReader(BridgeCreatorNoProxyABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BridgeCreatorNoProxyBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BridgeCreatorNoProxy{BridgeCreatorNoProxyCaller: BridgeCreatorNoProxyCaller{contract: contract}, BridgeCreatorNoProxyTransactor: BridgeCreatorNoProxyTransactor{contract: contract}, BridgeCreatorNoProxyFilterer: BridgeCreatorNoProxyFilterer{contract: contract}}, nil
}

// BridgeCreatorNoProxy is an auto generated Go binding around an Ethereum contract.
type BridgeCreatorNoProxy struct {
	BridgeCreatorNoProxyCaller     // Read-only binding to the contract
	BridgeCreatorNoProxyTransactor // Write-only binding to the contract
	BridgeCreatorNoProxyFilterer   // Log filterer for contract events
}

// BridgeCreatorNoProxyCaller is an auto generated read-only Go binding around an Ethereum contract.
type BridgeCreatorNoProxyCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BridgeCreatorNoProxyTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BridgeCreatorNoProxyTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BridgeCreatorNoProxyFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BridgeCreatorNoProxyFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BridgeCreatorNoProxySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BridgeCreatorNoProxySession struct {
	Contract     *BridgeCreatorNoProxy // Generic contract binding to set the session for
	CallOpts     bind.CallOpts         // Call options to use throughout this session
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// BridgeCreatorNoProxyCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BridgeCreatorNoProxyCallerSession struct {
	Contract *BridgeCreatorNoProxyCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts               // Call options to use throughout this session
}

// BridgeCreatorNoProxyTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BridgeCreatorNoProxyTransactorSession struct {
	Contract     *BridgeCreatorNoProxyTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts               // Transaction auth options to use throughout this session
}

// BridgeCreatorNoProxyRaw is an auto generated low-level Go binding around an Ethereum contract.
type BridgeCreatorNoProxyRaw struct {
	Contract *BridgeCreatorNoProxy // Generic contract binding to access the raw methods on
}

// BridgeCreatorNoProxyCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BridgeCreatorNoProxyCallerRaw struct {
	Contract *BridgeCreatorNoProxyCaller // Generic read-only contract binding to access the raw methods on
}

// BridgeCreatorNoProxyTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BridgeCreatorNoProxyTransactorRaw struct {
	Contract *BridgeCreatorNoProxyTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBridgeCreatorNoProxy creates a new instance of BridgeCreatorNoProxy, bound to a specific deployed contract.
func NewBridgeCreatorNoProxy(address common.Address, backend bind.ContractBackend) (*BridgeCreatorNoProxy, error) {
	contract, err := bindBridgeCreatorNoProxy(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BridgeCreatorNoProxy{BridgeCreatorNoProxyCaller: BridgeCreatorNoProxyCaller{contract: contract}, BridgeCreatorNoProxyTransactor: BridgeCreatorNoProxyTransactor{contract: contract}, BridgeCreatorNoProxyFilterer: BridgeCreatorNoProxyFilterer{contract: contract}}, nil
}

// NewBridgeCreatorNoProxyCaller creates a new read-only instance of BridgeCreatorNoProxy, bound to a specific deployed contract.
func NewBridgeCreatorNoProxyCaller(address common.Address, caller bind.ContractCaller) (*BridgeCreatorNoProxyCaller, error) {
	contract, err := bindBridgeCreatorNoProxy(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BridgeCreatorNoProxyCaller{contract: contract}, nil
}

// NewBridgeCreatorNoProxyTransactor creates a new write-only instance of BridgeCreatorNoProxy, bound to a specific deployed contract.
func NewBridgeCreatorNoProxyTransactor(address common.Address, transactor bind.ContractTransactor) (*BridgeCreatorNoProxyTransactor, error) {
	contract, err := bindBridgeCreatorNoProxy(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BridgeCreatorNoProxyTransactor{contract: contract}, nil
}

// NewBridgeCreatorNoProxyFilterer creates a new log filterer instance of BridgeCreatorNoProxy, bound to a specific deployed contract.
func NewBridgeCreatorNoProxyFilterer(address common.Address, filterer bind.ContractFilterer) (*BridgeCreatorNoProxyFilterer, error) {
	contract, err := bindBridgeCreatorNoProxy(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BridgeCreatorNoProxyFilterer{contract: contract}, nil
}

// bindBridgeCreatorNoProxy binds a generic wrapper to an already deployed contract.
func bindBridgeCreatorNoProxy(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BridgeCreatorNoProxyABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _BridgeCreatorNoProxy.Contract.BridgeCreatorNoProxyCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BridgeCreatorNoProxy.Contract.BridgeCreatorNoProxyTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BridgeCreatorNoProxy.Contract.BridgeCreatorNoProxyTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _BridgeCreatorNoProxy.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BridgeCreatorNoProxy.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BridgeCreatorNoProxy.Contract.contract.Transact(opts, method, params...)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _BridgeCreatorNoProxy.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxySession) Owner() (common.Address, error) {
	return _BridgeCreatorNoProxy.Contract.Owner(&_BridgeCreatorNoProxy.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyCallerSession) Owner() (common.Address, error) {
	return _BridgeCreatorNoProxy.Contract.Owner(&_BridgeCreatorNoProxy.CallOpts)
}

// CreateBridge is a paid mutator transaction binding the contract method 0x058553e9.
//
// Solidity: function createBridge(address rollup, address sequencer, uint256 sequencerDelayBlocks, uint256 sequencerDelaySeconds) returns(address, address, address, address, address)
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyTransactor) CreateBridge(opts *bind.TransactOpts, rollup common.Address, sequencer common.Address, sequencerDelayBlocks *big.Int, sequencerDelaySeconds *big.Int) (*types.Transaction, error) {
	return _BridgeCreatorNoProxy.contract.Transact(opts, "createBridge", rollup, sequencer, sequencerDelayBlocks, sequencerDelaySeconds)
}

// CreateBridge is a paid mutator transaction binding the contract method 0x058553e9.
//
// Solidity: function createBridge(address rollup, address sequencer, uint256 sequencerDelayBlocks, uint256 sequencerDelaySeconds) returns(address, address, address, address, address)
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxySession) CreateBridge(rollup common.Address, sequencer common.Address, sequencerDelayBlocks *big.Int, sequencerDelaySeconds *big.Int) (*types.Transaction, error) {
	return _BridgeCreatorNoProxy.Contract.CreateBridge(&_BridgeCreatorNoProxy.TransactOpts, rollup, sequencer, sequencerDelayBlocks, sequencerDelaySeconds)
}

// CreateBridge is a paid mutator transaction binding the contract method 0x058553e9.
//
// Solidity: function createBridge(address rollup, address sequencer, uint256 sequencerDelayBlocks, uint256 sequencerDelaySeconds) returns(address, address, address, address, address)
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyTransactorSession) CreateBridge(rollup common.Address, sequencer common.Address, sequencerDelayBlocks *big.Int, sequencerDelaySeconds *big.Int) (*types.Transaction, error) {
	return _BridgeCreatorNoProxy.Contract.CreateBridge(&_BridgeCreatorNoProxy.TransactOpts, rollup, sequencer, sequencerDelayBlocks, sequencerDelaySeconds)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BridgeCreatorNoProxy.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxySession) RenounceOwnership() (*types.Transaction, error) {
	return _BridgeCreatorNoProxy.Contract.RenounceOwnership(&_BridgeCreatorNoProxy.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _BridgeCreatorNoProxy.Contract.RenounceOwnership(&_BridgeCreatorNoProxy.TransactOpts)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _BridgeCreatorNoProxy.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxySession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BridgeCreatorNoProxy.Contract.TransferOwnership(&_BridgeCreatorNoProxy.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BridgeCreatorNoProxy.Contract.TransferOwnership(&_BridgeCreatorNoProxy.TransactOpts, newOwner)
}

// BridgeCreatorNoProxyOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the BridgeCreatorNoProxy contract.
type BridgeCreatorNoProxyOwnershipTransferredIterator struct {
	Event *BridgeCreatorNoProxyOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BridgeCreatorNoProxyOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BridgeCreatorNoProxyOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BridgeCreatorNoProxyOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BridgeCreatorNoProxyOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BridgeCreatorNoProxyOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BridgeCreatorNoProxyOwnershipTransferred represents a OwnershipTransferred event raised by the BridgeCreatorNoProxy contract.
type BridgeCreatorNoProxyOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*BridgeCreatorNoProxyOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _BridgeCreatorNoProxy.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &BridgeCreatorNoProxyOwnershipTransferredIterator{contract: _BridgeCreatorNoProxy.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *BridgeCreatorNoProxyOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _BridgeCreatorNoProxy.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BridgeCreatorNoProxyOwnershipTransferred)
				if err := _BridgeCreatorNoProxy.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_BridgeCreatorNoProxy *BridgeCreatorNoProxyFilterer) ParseOwnershipTransferred(log types.Log) (*BridgeCreatorNoProxyOwnershipTransferred, error) {
	event := new(BridgeCreatorNoProxyOwnershipTransferred)
	if err := _BridgeCreatorNoProxy.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
