// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OneStepProof2ABI is the input ABI used to generate the binding from.
const OneStepProof2ABI = "[{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[7]\",\"name\":\"fields\",\"type\":\"bytes32[7]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStepDebug\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"startMachine\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"afterMachine\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"parseProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// OneStepProof2FuncSigs maps the 4-byte function signature to its string representation.
var OneStepProof2FuncSigs = map[string]string{
	"9d16dd04": "executeStep(address,uint256,bytes32[2],bytes,bytes)",
	"2ccebb7a": "executeStepDebug(address,uint256,bytes32[2],bytes,bytes)",
	"793deea3": "parseProof(bytes)",
}

// OneStepProof2Bin is the compiled bytecode used for deploying new contracts.
var OneStepProof2Bin = "0x608060405234801561001057600080fd5b50615302806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632ccebb7a14610046578063793deea3146101fd5780639d16dd04146103c4575b600080fd5b61011f600480360360c081101561005c57600080fd5b6001600160a01b038235169160208101359160408201919081019060a081016080820135600160201b81111561009157600080fd5b8201836020820111156100a357600080fd5b803590602001918460018302840111600160201b831117156100c457600080fd5b919390929091602081019035600160201b8111156100e157600080fd5b8201836020820111156100f357600080fd5b803590602001918460018302840111600160201b8311171561011457600080fd5b5090925090506104ef565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610160578181015183820152602001610148565b50505050905090810190601f16801561018d5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101c05781810151838201526020016101a8565b50505050905090810190601f1680156101ed5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6102a16004803603602081101561021357600080fd5b810190602081018135600160201b81111561022d57600080fd5b82018360208201111561023f57600080fd5b803590602001918460018302840111600160201b8311171561026057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105b4945050505050565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b838110156102ed5781810151838201526020016102d5565b50505050905001858103845288818151815260200191508051906020019060200280838360005b8381101561032c578181015183820152602001610314565b50505050905001858103835287818151815260200191508051906020019060200280838360005b8381101561036b578181015183820152602001610353565b50505050905001858103825286818151815260200191508051906020019060200280838360005b838110156103aa578181015183820152602001610392565b505050509050019850505050505050505060405180910390f35b61049d600480360360c08110156103da57600080fd5b6001600160a01b038235169160208101359160408201919081019060a081016080820135600160201b81111561040f57600080fd5b82018360208201111561042157600080fd5b803590602001918460018302840111600160201b8311171561044257600080fd5b919390929091602081019035600160201b81111561045f57600080fd5b82018360208201111561047157600080fd5b803590602001918460018302840111600160201b8311171561049257600080fd5b5090925090506105f0565b60405180846001600160401b0316815260200183815260200182600760200280838360005b838110156104da5781810151838201526020016104c2565b50505050905001935050505060405180910390f35b6060806104fa615068565b61057e898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600081840152601f19601f820116905080830192505050505050508e6106af565b905061058981610b63565b6105968160200151610f71565b92506105a58160400151610f71565b91505097509795505050505050565b6060806060806105c2615115565b6105cb866112e5565b80516020820151604083015160609093015191975095509093509150505b9193509193565b6000806105fb61513d565b610603615068565b6106878a8a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b9081908401838280828437600081840152601f19601f820116905080830192505050505050508f6106af565b905061069281610b63565b61069b816113db565b935093509350509750975097945050505050565b6106b7615068565b6000846000815181106106c657fe5b602001015160f81c60f81b60f81c90506000856001815181106106e557fe5b602001015160f81c60f81b60f81c905060008660028151811061070457fe5b016020015160f81c9050600360606004840160ff166001600160401b038111801561072e57600080fd5b5060405190808252806020026020018201604052801561076857816020015b61075561515b565b81526020019060019003908161074d5790505b50905060608360040160ff166001600160401b038111801561078957600080fd5b506040519080825280602002602001820160405280156107c357816020015b6107b061515b565b8152602001906001900390816107a85790505b50905060005b8560ff168110156107ff576107de8b85611462565b8483815181106107ea57fe5b602090810291909101015293506001016107c9565b5060005b8460ff16811015610839576108188b85611462565b83838151811061082457fe5b60209081029190910101529350600101610803565b506108426151a4565b61084c8b85611643565b809250819550505060008b858151811061086257fe5b01602001516001959095019460f81c905061087b615068565b6001600160a01b038b16815260208101839052610897836116f4565b6040820152606081018f90528d6000602002013560808201528d60016020908102919091013560a0830152600060c0830181905260408051808201825260ff8c811682528185018a905260e086019190915281518083019092528a8116825292810187905261010084015283821660018114610120850152918b1661014084015261016083018f90526101a083018e90526102208301526101808201879052158061094557508160ff166001145b6040518060400160405280600b81526020016a04241445f494d4d5f5459560ac1b815250906109f25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109b757818101518382015260200161099f565b50505050905090810190601f1680156109e45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506109fb61515b565b60ff8316610a1c57610a158a836020015160000151611768565b9050610abc565b6000865111604051806040016040528060068152602001654e4f5f494d4d60d01b81525090610a8c5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50610ab98a8360200151600001518860018d0360ff1681518110610aac57fe5b60200260200101516117cc565b90505b610ac581611852565b60208301515260005b838a0360ff16811015610b0d57610b05878281518110610aea57fe5b602002602001015184602001516119e590919063ffffffff16565b600101610ace565b5060005b8860ff16811015610b4e57610b46868281518110610b2b57fe5b602002602001015184602001516119ff90919063ffffffff16565b600101610b11565b50909f9e505050505050505050505050505050565b600080600061520f610b7c85610140015160ff16611a19565b93509350935093506000841180610b965750846101200151155b8015610ba7575060e0850151518410155b80610bce57508461012001518015610bbd575083155b8015610bce575060e0850151516001145b6040518060400160405280600a815260200169535441434b5f4d414e5960b01b81525090610c3d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50610100850151516040805180820190915260088152674155585f4d414e5960c01b602082015290841015610cb35760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b5060e085015151841115610d7057610cd1610ccc611b87565b611852565b610ce2866040015160200151611852565b146040518060400160405280600d81526020016c535441434b5f4d495353494e4760981b81525090610d555760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50610d61856005611bce565b50610d6b85611c43565b610e30565b61010085015151831115610e0b57610d89610ccc611b87565b610d9a866040015160400151611852565b146040518060400160405280600b81526020016a4155585f4d495353494e4760a81b81525090610d555760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b610e158583611bce565b15610e2357610d6b85611c43565b610e30858263ffffffff16565b84610220015115610ed25760408051600160f81b602080830191909152600060218301819052602280840191909152835180840390910181526042909201835281519101209086015160c001511415610e9557610e908560400151611c4e565b610ed2565b6000610220860152604085015160c081015190526101208501518015610eb9575083155b610ec75760e0850151600090525b610100850151600090525b60005b60e086015151811015610f1c57610f148660e00151602001518281518110610ef957fe5b602002602001015187604001516119e590919063ffffffff16565b600101610ed5565b5060005b61010086015151811015610f6957610f61866101000151602001518281518110610f4657fe5b602002602001015187604001516119ff90919063ffffffff16565b600101610f20565b505050505050565b6060610f808260000151611c59565b610f95610f908460200151611852565b611c59565b610fa5610f908560400151611852565b610fb5610f908660600151611852565b610fc5610f908760800151611852565b610fd28760a00151611d28565b610fdf8860c00151611c59565b610fef610f908a60e00151611852565b60405160200180806709ac2c6d0d2dcca560c31b81525060080189805190602001908083835b602083106110345780518252601f199092019160209182019101611015565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528a516003909101928b0191508083835b6020831061108b5780518252601f19909201916020918201910161106c565b51815160209384036101000a60001901801990921691161790526216100560e91b9190930190815289516003909101928a0191508083835b602083106110e25780518252601f1990920191602091820191016110c3565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528851600390910192890191508083835b602083106111395780518252601f19909201916020918201910161111a565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528751600390910192880191508083835b602083106111905780518252601f199092019160209182019101611171565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528651600390910192870191508083835b602083106111e75780518252601f1990920191602091820191016111c8565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528551600390910192860191508083835b6020831061123e5780518252601f19909201916020918201910161121f565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528451600390910192850191508083835b602083106112955780518252601f199092019160209182019101611276565b6001836020036101000a0380198251168184511680821785525050505050509050018061148560f11b8152506002019850505050505050505060405160208183030381529060405290505b919050565b6112ed615115565b606061132c838460008151811061130057fe5b602001015160f81c60f81b8560018151811061131857fe5b01602001516001600160f81b031916611e02565b90506060611359848560018151811061134157fe5b602001015160f81c60f81b8660028151811061131857fe5b90506060611386858660028151811061136e57fe5b602001015160f81c60f81b8760038151811061131857fe5b905060606113b3868760038151811061139b57fe5b602001015160f81c60f81b8860048151811061131857fe5b6040805160808101825295865260208601949094529284019190915250606082015292915050565b6000806113e661513d565b8360c0015184606001516040518060e001604052806114088860200151611e9f565b815260200161141a8860400151611e9f565b8152602001876080015181526020018760a001518152602001876101c001518152602001876101e00151815260200187610200015160001b8152509250925092509193909250565b600061146c61515b565b835183106114b2576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b6000806114bf8686611f79565b915091506114cb611fa0565b60ff168160ff1614156114ff5760006114e48784611fa5565b9093509050826114f382612013565b9450945050505061163c565b6115076120e0565b60ff168160ff1614156115295761151e86836120e5565b93509350505061163c565b611531612187565b60ff168160ff1614156115485761151e868361218c565b611550612207565b60ff168160ff1614156115785760006115698784611fa5565b9093509050826114f38261220c565b611580612303565b60ff168160ff1614156115975761151e8683612308565b61159f61239d565b60ff168160ff16101580156115c057506115b76123a2565b60ff168160ff16105b156115fc5760006115cf61239d565b8203905060606115e08289866123a7565b9094509050836115ef8261244f565b955095505050505061163c565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b9250929050565b600061164d6151a4565b6116556151a4565b600061010082018190528061166a8787611fa5565b90965091506116798787612308565b6020850152955061168a8787612308565b6040850152955061169b8787611462565b606085015295506116ac8787611462565b608085015295506116bd8787611fa5565b60a085015295506116ce8787611fa5565b90965090506116dd8787611462565b60e085015291835260c08301529590945092505050565b6116fc6151a4565b60405180610120016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361010001518152509050919050565b61177061515b565b6040805160608101825260ff8516815260208082018590528251600080825291810184526117c3938301916117bb565b6117a861515b565b8152602001906001900390816117a05790505b50905261259f565b90505b92915050565b6117d461515b565b604080516001808252818301909252606091816020015b6117f361515b565b8152602001906001900390816117eb579050509050828160008151811061181657fe5b602002602001018190525061184760405180606001604052808760ff1681526020018681526020018381525061259f565b9150505b9392505050565b600061185c611fa0565b60ff168260a0015160ff16141561187f5781516118789061263c565b90506112e0565b6118876120e0565b60ff168260a0015160ff1614156118a5576118788260200151612660565b6118ad612303565b60ff168260a0015160ff1614156118cf57815160c08301516118789190612755565b6118d761239d565b60ff168260a0015160ff161415611910576118f061515b565b6118fd83604001516127a3565b905061190881611852565b9150506112e0565b611918612918565b60ff168260a0015160ff161415611931575080516112e0565b611939612207565b60ff168260a0015160ff16141561197e575060608082015160408051607b602080830191909152818301939093528151808203830181529301905281519101206112e0565b611986612187565b60ff168260a0015160ff1614156119a457611878826080015161291d565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b6119f382602001518261298a565b82602001819052505050565b611a0d82604001518261298a565b82604001819052505050565b6000808061520f60a1851415611a3e57506002925060009150600a9050612a086105e9565b60a2851415611a5c57506002925060009150600a9050612abc6105e9565b60a3851415611a7a57506002925060009150600a9050612b4e6105e9565b60a4851415611a985750600392506000915060649050612be06105e9565b60a5851415611ab65750600392506000915060649050612ccd6105e9565b60a6851415611ad45750600392506000915060649050612d9e6105e9565b60f1851415611af25750600292506000915060649050612e5d6105e9565b60a7851415611b1257506002925060009150620f424090506130f06105e9565b60a8851415611b3257506003925060009150620f424090506133b56105e9565b6070851415611b5057506002925060009150606490506137816105e9565b60405162461bcd60e51b815260040180806020018281038252602c8152602001806152a1602c913960400191505060405180910390fd5b611b8f61515b565b60408051600080825260208201909252611bc991611bc3565b611bb061515b565b815260200190600190039081611ba85790505b5061244f565b905090565b6000816001600160401b0316836040015160a001511015611c13575060c0820180516005016001600160401b03169052604082015160001960a09091015260016117c6565b5060c0820180516001600160401b039083018116909152604083015160a0018051918316909103905260006117c6565b600161022090910152565b600161010090910152565b60408051818152606081810183529182919060208201818036833701905050905060005b6020811015611d21576000848260208110611c9457fe5b1a60f881811b9250601080830480831b9360ff9091169091029003901b611cba8261391b565b858560020281518110611cc957fe5b60200101906001600160f81b031916908160001a905350611ce98161391b565b858560020260010181518110611cfb57fe5b60200101906001600160f81b031916908160001a9053505060019092019150611c7d9050565b5092915050565b60608180611d4f5750506040805180820190915260018152600360fc1b60208201526112e0565b8060005b8115611d6757600101600a82049150611d53565b6060816001600160401b0381118015611d7f57600080fd5b506040519080825280601f01601f191660200182016040528015611daa576020820181803683370190505b50905060001982015b8415611df857600a850660300160f81b82828060019003935081518110611dd657fe5b60200101906001600160f81b031916908160001a905350600a85049450611db3565b5095945050505050565b606060f883811c9083901c81900360ff169082826001600160401b0381118015611e2b57600080fd5b50604051908082528060200260200182016040528015611e55578160200160208202803683370190505b50905060005b83811015611e9457611e728882850160200261394c565b60001b828281518110611e8157fe5b6020908102919091010152600101611e5b565b509695505050505050565b600060028261010001511415611eb7575060006112e0565b60018261010001511415611ecd575060016112e0565b81516020830151611edd90611852565b611eea8460400151611852565b611ef78560600151611852565b611f048660800151611852565b8660a001518760c00151611f1b8960e00151611852565b60405160200180898152602001888152602001878152602001868152602001858152602001848152602001838152602001828152602001985050505050505050506040516020818303038152906040528051906020012090506112e0565b60008082600101848481518110611f8c57fe5b016020015190925060f81c90509250929050565b600090565b60008082845110158015611fbd575060208385510310155b611ffa576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b60208301612008858561398c565b915091509250929050565b61201b61515b565b6040805160e0810182528381528151606081018352600080825260208083018290528451828152808201865293949085019390830191612071565b61205e61515b565b8152602001906001900390816120565790505b509052815260200160006040519080825280602002602001820160405280156120b457816020015b6120a161515b565b8152602001906001900390816120995790505b508152600060208201526040016120c96139e5565b815260006020820152600160409091015292915050565b600190565b60006120ef61515b565b826000806120fb61515b565b60006121078986611f79565b90955093506121168986611f79565b9095509250600160ff85161415612137576121318986611462565b90955091505b6121418986613a1c565b9095509050600160ff8516141561216c578461215e8483856117cc565b96509650505050505061163c565b846121778483611768565b9650965050505050509250929050565b600e90565b600061219661515b565b826000808080806121a78a87613a1c565b90965094506121b68a87613a1c565b90965093506121c58a87611fa5565b90965092506121d48a87613a1c565b90965091506121e38a87611fa5565b9096509050856121f68686868686613a2d565b975097505050505050509250929050565b600c90565b61221461515b565b6040518060e00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b038111801561225b57600080fd5b5060405190808252806020026020018201604052801561229557816020015b61228261515b565b81526020019060019003908161227a5790505b509052815260200160006040519080825280602002602001820160405280156122d857816020015b6122c561515b565b8152602001906001900390816122bd5790505b5081526020018381526020016122ec6139e5565b8152600c6020820152600160409091015292915050565b600290565b600061231261515b565b82845110158015612327575060408385510310155b612364576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b6000806123718686613a1c565b90945091506123808685611fa5565b9094509050836123908383613b51565b9350935050509250929050565b600390565b600f90565b60006060828160ff87166001600160401b03811180156123c657600080fd5b5060405190808252806020026020018201604052801561240057816020015b6123ed61515b565b8152602001906001900390816123e55790505b50905060005b8760ff168160ff1610156124425761241e8784611462565b838360ff168151811061242d57fe5b60209081029190910101529250600101612406565b5090969095509350505050565b61245761515b565b6124618251613c1d565b6124b2576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b83518110156124e9578381815181106124cc57fe5b602002602001015160c001518201915080806001019150506124b7565b506040518060e00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b038111801561253157600080fd5b5060405190808252806020026020018201604052801561256b57816020015b61255861515b565b8152602001906001900390816125505790505b509052815260208101859052600060408201526060016125896139e5565b8152600360208201526040019190915292915050565b6125a761515b565b6040518060e001604052806000815260200183815260200160006001600160401b03811180156125d657600080fd5b5060405190808252806020026020018201604052801561261057816020015b6125fd61515b565b8152602001906001900390816125f55790505b508152600060208201526040016126256139e5565b815260016020820181905260409091015292915050565b60408051602080820193909352815180820384018152908201909152805191012090565b600060028260400151511061267157fe5b6040820151516126d4576126836120e0565b82600001518360200151604051602001808460ff1660f81b81526001018360ff1660f81b815260010182815260200193505050506040516020818303038152906040528051906020012090506112e0565b6126dc6120e0565b826000015161270284604001516000815181106126f557fe5b6020026020010151611852565b8460200151604051602001808560ff1660f81b81526001018460ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b600061275f61239d565b8383604051602001808460ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b6127ab61515b565b6008825111156127f9576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b606082516001600160401b038111801561281257600080fd5b5060405190808252806020026020018201604052801561283c578160200160208202803683370190505b508051909150600160005b8281101561289f5761285e8682815181106126f557fe5b84828151811061286a57fe5b60200260200101818152505085818151811061288257fe5b602002602001015160c00151820191508080600101915050612847565b506000835184604051602001808360ff1660f81b8152600101828051906020019060200280838360005b838110156128e15781810151838201526020016128c9565b505050509050019250505060405160208183030381529060405280519060200120905061290e8183613b51565b9695505050505050565b606490565b6000612927612187565b8260000151836020015184606001518560800151604051602001808660ff1660f81b815260010185815260200184815260200183815260200182815260200195505050505050604051602081830303815290604052805190602001209050919050565b61299261515b565b6040805160028082526060828101909352816020015b6129b061515b565b8152602001906001900390816129a857905050905082816000815181106129d357fe5b602002602001018190525083816001815181106129ec57fe5b6020026020010181905250612a00816127a3565b949350505050565b612a1061515b565b612a1d8260e00151613c24565b9050612a2761515b565b612a348360e00151613c24565b9050612a3f82613c66565b1580612a515750612a4f81613c84565b155b15612a6657612a5f83613c91565b5050612ab9565b8151600160401b11612a7b57612a5f83613c91565b6000612a9d82606001518460000151612a98876101a001516112e5565b613c9a565b9050612ab58460e00151612ab083612013565b613cbc565b5050505b50565b612ac461515b565b612ad18260e00151613c24565b9050612adb61515b565b612ae88360e00151613c24565b9050612af382613c66565b1580612b055750612b0381613c84565b155b15612b1357612a5f83613c91565b815167fffffffffffffff911612b2c57612a5f83613c91565b6000612a9d82606001518460000151612b49876101a001516112e5565b613ce6565b612b5661515b565b612b638260e00151613c24565b9050612b6d61515b565b612b7a8360e00151613c24565b9050612b8582613c66565b1580612b975750612b9581613c84565b155b15612ba557612a5f83613c91565b815167ffffffffffffffe111612bbe57612a5f83613c91565b6000612a9d82606001518460000151612bdb876101a001516112e5565b613e45565b612be861515b565b612bf58260e00151613c24565b9050612bff61515b565b612c0c8360e00151613c24565b9050612c1661515b565b612c238460e00151613c24565b9050612c2e83613c66565b1580612c405750612c3e82613f78565b155b80612c515750612c4f81613c84565b155b15612c6757612c5f84613c91565b505050612ab9565b8251600160401b111580612c7e5750815161010011155b15612c8c57612c5f84613c91565b6000612cb3826060015185600001518560000151612cae896101a001516112e5565b613f83565b9050612cc68560e00151612ab08361220c565b5050505050565b612cd561515b565b612ce28260e00151613c24565b9050612cec61515b565b612cf98360e00151613c24565b9050612d0361515b565b612d108460e00151613c24565b9050612d1b83613c66565b1580612d2d5750612d2b82613f78565b155b80612d3e5750612d3c81613c84565b155b15612d4c57612c5f84613c91565b825167fffffffffffffff9111580612d6957508151600160401b11155b15612d7757612c5f84613c91565b6000612cb3826060015185600001518560000151612d99896101a001516112e5565b613fcc565b612da661515b565b612db38260e00151613c24565b9050612dbd61515b565b612dca8360e00151613c24565b9050612dd461515b565b612de18460e00151613c24565b9050612dec83613c66565b1580612dfe5750612dfc82613f78565b155b80612e0f5750612e0d81613c84565b155b15612e1d57612c5f84613c91565b825167ffffffffffffffe111612e3657612c5f84613c91565b6000612cb3826060015185600001518560000151612e58896101a001516112e5565b61410e565b612e6561515b565b612e728260e00151613c24565b9050612e7c61515b565b612e898360e00151613c24565b9050612e9481613c84565b612ea157612a5f83613c91565b612eaa82613f78565b612eb757612a5f83613c91565b6040805160028082526060828101909352816020015b612ed561515b565b815260200190600190039081612ecd5790505090508181600081518110612ef857fe5b6020026020010181905250612f0b611b87565b81600181518110612f1857fe5b6020026020010181905250612f2b6151a4565b6040805161012081019091527f4932d554b80820e294814bd0674558bd57fa55b750456622dc6e1793390c01ec815260208101612fa2612f8d7f71b400febf23e3973c60191ccf470be8c754bb923d10851420f550782a6b72c46192496141ce565b612f9d87612f9d8a612f9d611b87565b61429a565b8152602001612faf611b87565b8152602001612fbc611b87565b8152602001612fcb6000612013565b8152620f424060208201527fb4c00615f95dc249934075fcc669947596baf6e070ac80a59f79dae98aa932f06040820152606001613007611b87565b81526020016000815250905061301b6151a4565b6060600061302d886101a00151614310565b509350509250925060028251101561308c576040805162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f756768207761736d20737461636b2072657475726e73000000604482015290519081900360640190fd5b6130ae8860e00151836001815181106130a157fe5b6020026020010151613cbc565b6130c38860e00151836000815181106130a157fe5b6130cc84611e9f565b6101c08901526130db83611e9f565b6101e089015261020088015250505050505050565b6130f861515b565b6131058260e00151613c24565b905061310f61515b565b61311c8360e00151613c24565b905061312781613c84565b61313457612a5f83613c91565b61313d82613f78565b61314a57612a5f83613c91565b6040805160028082526060828101909352816020015b61316861515b565b815260200190600190039081613160579050509050818160008151811061318b57fe5b602002602001018190525061319e611b87565b816001815181106131ab57fe5b60200260200101819052506131be6151a4565b6040805161012081019091527f9035048daf60a7f343b8078730a8859bcccc481f657dadff27411ae58e65b7cb815260208101613220612f8d7f97e073b103571a1794a6e51e9ca3464c07686628b9b59f59a0791bd9b3c5329d6192496141ce565b815260200161322d611b87565b815260200161323a611b87565b81526020016132496000612013565b8152620f424060208201527fb4c00615f95dc249934075fcc669947596baf6e070ac80a59f79dae98aa932f06040820152606001613285611b87565b8152602001600081525090506132996151a4565b60606000806132ac896101a00151614310565b9450945050935093506132bd61515b565b6132cc8a6101a001518361218c565b915050600184511015613326576040805162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f756768207761736d20737461636b2072657475726e73000000604482015290519081900360640190fd5b613336846000815181106126f557fe5b607b61334183611852565b6040516020018083815260200182815260200192505050604051602081830303815290604052805190602001201461337857600080fd5b6133868a60e0015182613cbc565b61338f86611e9f565b6101c08b015261339e85611e9f565b6101e08b0152505061020088015250505050505050565b7f78d4e5dcdec1a54b7b3afdabc972f706b1ca14062146c98af8a781d686e5aa9260001b6133e68260200151611e9f565b14613425576040805162461bcd60e51b815260206004820152600a602482015269696e697420686173683f60b01b604482015290519081900360640190fd5b61342d61515b565b61343a8260e00151613c24565b905061344461515b565b6134518360e00151613c24565b905061345b61515b565b6134688460e00151613c24565b905061347381613c84565b61348057612c5f84613c91565b61348982613f78565b61349657612c5f84613c91565b61349f8361467a565b6134ac57612c5f84613c91565b6040805160028082526060828101909352816020015b6134ca61515b565b8152602001906001900390816134c257905050905081816000815181106134ed57fe5b6020026020010181905250613500611b87565b8160018151811061350d57fe5b6020026020010181905250613520615211565b50608084015161352e6151a4565b60405180610120016040528083600001518152602001613569613559856020015186604001516141ce565b612f9d88612f9d8b612f9d611b87565b8152602001613576611b87565b8152602001613583611b87565b81526020016135926000612013565b8152620f424060208201527fb4c00615f95dc249934075fcc669947596baf6e070ac80a59f79dae98aa932f060408201526060016135ce611b87565b8152602001600081525090506135e26151a4565b606060006135f48a6101a00151614310565b5093505092509250600282511015613653576040805162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f756768207761736d20737461636b2072657475726e73000000604482015290519081900360640190fd5b6136708260008151811061366357fe5b6020026020010151613f78565b6136b5576040805162461bcd60e51b81526020600482015260116024820152701cdd1858dac81d1bdc081b9bdd081a5b9d607a1b604482015290519081900360640190fd5b6136d2826001815181106136c557fe5b6020026020010151613c84565b613718576040805162461bcd60e51b815260206004820152601260248201527139ba30b1b5903732bc3a103737ba10313ab360711b604482015290519081900360640190fd5b6137528a60e00151612ab08460018151811061373057fe5b60200260200101518560008151811061374557fe5b602002602001015161429a565b61375b84611e9f565b6101c08b015261376a83611e9f565b6101e08b01526102008a0152505050505050505050565b61378961515b565b6137968260e00151613c24565b90506137a061515b565b6137ad8360e00151613c24565b90506137b882613c66565b15806137ca57506137c881613c84565b155b156137d857612a5f83613c91565b815161271010806137e857508151155b156137f657612a5f83613c91565b8261016001515183610180015114156138715761382981606001518360000151613824866101a001516112e5565b614687565b15613868576040805162461bcd60e51b815260206004820152600a602482015269084aa8cbe988a9c8ea8960b31b604482015290519081900360640190fd5b612a5f83613c91565b6101808301518251610160850151600061388c8285856146db565b90508061389886611852565b146138d7576040805162461bcd60e51b815260206004820152600a60248201526915d493d391d7d4d1539160b21b604482015290519081900360640190fd5b509091016020908101919091206080850180516040805180860192909252818101939093528251808203840181526060909101909252815191909201209052505050565b6000600a60f883901c101561393b578160f81c60300160f81b90506112e0565b8160f81c60570160f81b90506112e0565b600080805b602081101561398457600882901b9150848185018151811061396f57fe5b016020015160f81c9190911790600101613951565b509392505050565b600081602001835110156139dc576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b6139ed615211565b506040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b60008060208301612008858561398c565b613a3561515b565b6040518060e00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b0381118015613a7c57600080fd5b50604051908082528060200260200182016040528015613ab657816020015b613aa361515b565b815260200190600190039081613a9b5790505b50905281526020016000604051908082528060200260200182016040528015613af957816020015b613ae661515b565b815260200190600190039081613ade5790505b5081526020016000801b81526020016040518060a001604052808981526020018881526020018781526020018681526020018581525081526020016003600b0160ff1681526020016001815250905095945050505050565b613b5961515b565b6040805160e0810182528481528151606081018352600080825260208083018290528451828152808201865293949085019390830191613baf565b613b9c61515b565b815260200190600190039081613b945790505b50905281526020016000604051908082528060200260200182016040528015613bf257816020015b613bdf61515b565b815260200190600190039081613bd75790505b50815260006020820152604001613c076139e5565b8152600260208201526040019290925250919050565b6008101590565b613c2c61515b565b613c3461515b565b8260200151600184600001510381518110613c4b57fe5b60209081029190910101518351600019018452915050919050565b60a081015160009060ff161580156117c657505051600160401b1190565b60a0015160ff16600c1490565b612ab981611c43565b6000612a00613cb2856020865b04856000015161470d565b6020855b0661487b565b808260200151836000015181518110613cd157fe5b60209081029190910101525080516001019052565b604080516008808252818301909252600091606091906020820181803683370190505090506000613d20866020875b04866000015161470d565b9050602080860660080110613df3576000613d47876020885b04600101876040015161470d565b905060005b6018601f881660080301811015613d9b57613d6d838260208a5b060161487b565b60f81b848281518110613d7c57fe5b60200101906001600160f81b031916908160001a905350600101613d4c565b506018601f8716600803015b6008811015613dec57613dbe826020898401613cb6565b60f81b848281518110613dcd57fe5b60200101906001600160f81b031916908160001a905350600101613da7565b5050613e3c565b60005b6008811015613e3a57613e0c8282602089613d66565b60f81b838281518110613e1b57fe5b60200101906001600160f81b031916908160001a905350600101613df6565b505b61290e82614888565b604080516020808252818301909252600091606091906020820181803683370190505090506000613e7886602087613d15565b9050602080860660200110613f31576000613e9587602088613d39565b905060005b601f8716602003811015613ee357613eb5838260208a613d66565b60f81b848281518110613ec457fe5b60200101906001600160f81b031916908160001a905350600101613e9a565b50601f86166008035b6020811015613dec57613f03826020898401613cb6565b60f81b848281518110613f1257fe5b60200101906001600160f81b031916908160001a905350600101613eec565b60005b6020811015613e3a57613f4a8282602089613d66565b60f81b838281518110613f5957fe5b60200101906001600160f81b031916908160001a905350600101613f34565b60a0015160ff161590565b600080613f9286602087613ca7565b90506000613fa48260208806876148be565b90506000613fc0886020890484886000015189602001516148fd565b98975050505050505050565b60006060613fd9846149a3565b90506000613fe987602088613d15565b9050602080870660080111156140c65760005b6018601f881660080301811015614041576140378260208984010685848151811061402357fe5b01602001516001600160f81b031916614a0d565b9150600101613ffc565b5061405b876020885b0483876000015188602001516148fd565b9650600061406b88602089613d39565b90506018601f8816600803015b60088110156140a2576140988260208a84015b0686848151811061402357fe5b9150600101614078565b506140be886020890460010183886040015189606001516148fd565b975050614103565b60005b60088110156140f3576140e9828260208a5b060185848151811061402357fe5b91506001016140c9565b506141008760208861404a565b96505b509495945050505050565b6000606061411b846149a3565b9050600061412b87602088613d15565b9050602080870660200111156141ab5760005b601f871660200381101561416357614159828260208a6140db565b915060010161413e565b506141708760208861404a565b9650600061418088602089613d39565b9050601f87166020035b60208110156140a2576141a18260208a840161408b565b915060010161418a565b60005b60208110156140f3576141c4828260208a6140db565b91506001016141ae565b6141d661515b565b6040805160e081018252848152815160608101835260008082526020808301829052845182815280820186529394908501939083019161422c565b61421961515b565b8152602001906001900390816142115790505b5090528152602001600060405190808252806020026020018201604052801561426f57816020015b61425c61515b565b8152602001906001900390816142545790505b508152600060208201526040016142846139e5565b8152606460208201526040019290925250919050565b6142a261515b565b6040805160028082526060828101909352816020015b6142c061515b565b8152602001906001900390816142b857905050905083816000815181106142e357fe5b602002602001018190525082816001815181106142fc57fe5b6020026020010181905250612a008161244f565b6143186151a4565b606080600080600386511015614368576040805162461bcd60e51b815260206004820152601060248201526f7761736d2070726f6f6620656d70747960801b604482015290519081900360640190fd5b60008660008151811061437757fe5b602001015160f81c60f81b60f81c905060008760018151811061439657fe5b602001015160f81c60f81b60f81c90506000886002815181106143b557fe5b016020015160f81c9050600360ff8416607414614419576040805162461bcd60e51b815260206004820152601a60248201527f7761736d2066696e616c207374617465206d7573742068616c74000000000000604482015290519081900360640190fd5b8260040160ff166001600160401b038111801561443557600080fd5b5060405190808252806020026020018201604052801561446f57816020015b61445c61515b565b8152602001906001900390816144545790505b5097508160040160ff166001600160401b038111801561448e57600080fd5b506040519080825280602002602001820160405280156144c857816020015b6144b561515b565b8152602001906001900390816144ad5790505b50965060005b8360ff16811015614504576144e38b83611462565b8a83815181106144ef57fe5b602090810291909101015291506001016144ce565b5060005b8260ff1681101561453e5761451d8b83611462565b89838151811061452957fe5b60209081029190910101529150600101614508565b506145476151a4565b6145518b83611643565b809250819350505060008b838151811061456757fe5b01602001516001939093019260f81c905080156145b55760405162461bcd60e51b81526004018080602001828103825260288152602001806152796028913960400191505060405180910390fd5b6145bd61515b565b6145cb878460000151611768565b90506145d681611852565b8352919a508a916145e78d85611fa5565b9950935060005b82870360ff16811015614629576146218c828151811061460a57fe5b6020026020010151856119e590919063ffffffff16565b6001016145ee565b5060005b8560ff168110156146665761465e8b828151811061464757fe5b6020026020010151856119ff90919063ffffffff16565b60010161462d565b849850505050505050505091939590929450565b60a0015160ff16600e1490565b60008061469685602086613ca7565b9050601f84165b60208110156146c8576146b0828261487b565b156146c05760009250505061184b565b60010161469d565b5061184785602086048560000151614a29565b6000806146f385856146ec86614ba5565b6001614bd0565b50855190915061184790614708607b84614ca4565b614ca4565b600081516000141561477657614723600061263c565b841461476e576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b50600061184b565b60006147958360008151811061478857fe5b602002602001015161263c565b905060015b83518110156147ff5784600116600114156147d3576147cc8482815181106147be57fe5b602002602001015183614ca4565b91506147f3565b6147f0828583815181106147e357fe5b6020026020010151614ca4565b91505b600194851c940161479a565b5084811461484c576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b831561485c57506000905061184b565b8260008151811061486957fe5b60200260200101519150509392505050565b601f036008021c60ff1690565b600080805b8351811015611d2157600882901b91508381815181106148a957fe5b016020015160f81c919091179060010161488d565b600060606148cb856149a3565b90508260f81b8185815181106148dd57fe5b60200101906001600160f81b031916908160001a90535061184781614888565b60008151600314614955576040805162461bcd60e51b815260206004820152601760248201527f4241445f4e4f524d414c495a4154494f4e5f50524f4f46000000000000000000604482015290519081900360640190fd5b61290e868686868660008151811061496957fe5b602002602001015160001c8760018151811061498157fe5b60200260200101518860028151811061499657fe5b6020026020010151614cd0565b6040805160208082528183019092526060918391839160208201818036833701905050905060005b6020811015613984578260f81b8282601f03815181106149e757fe5b60200101906001600160f81b031916908160001a90535060089290921c916001016149cb565b60006060614a1a856149a3565b9050828185815181106148dd57fe5b6000815160001415614a9257614a3f600061263c565b8414614a8a576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b50600161184b565b6000614aa48360008151811061478857fe5b905060016060614ab2614f4a565b905060015b8551811015614b46578660011660011415614af057614ae9868281518110614adb57fe5b602002602001015185614ca4565b9350614b3a565b614b00848783815181106147e357fe5b9350828015614b375750816001820381518110614b1957fe5b6020026020010151868281518110614b2d57fe5b6020026020010151145b92505b600196871c9601614ab7565b50868314614b93576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b8515611df8576001935050505061184b565b600060018211614bb7575060016112e0565b614bc660026001840104614ba5565b60020290506112e0565b60008060208411614c245785518510614bf857614bed600061263c565b600191509150614c9b565b6000614c0c614c078888614feb565b61263c565b905080614c19600061263c565b909350149050614c9b565b600080614c3d886002880489016002895b046000614bd0565b91509150808015614c4b5750845b15614c6a57614c5f88886002890488614bd0565b935093505050614c9b565b600080614c7a8a8a60028b614c35565b91509150614c888285614ca4565b818015614c925750835b95509550505050505b94509492505050565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600080614cdc8761263c565b9050614ce989898861470d565b506060614cf4614f4a565b905060018751036001901b8910614db85787614d14578992505050614f3f565b6000614d1f8a615042565b88519091505b60018203811015614d4d57614d438c8460018403815181106147e357fe5b9b50600101614d25565b5060015b60018203811015614da3578a60011660011415614d8157614d7a836001830381518110614adb57fe5b9350614d97565b614d94848460018403815181106147e357fe5b93505b60019a8b1c9a01614d51565b50614dae8b84614ca4565b9350505050614f3f565b60015b8751811015614e385760008a600116600114614dd75783614dec565b888281518110614de357fe5b60200260200101515b905060008b600116600114614e1457898381518110614e0757fe5b6020026020010151614e16565b845b9050614e228282614ca4565b60019c8d1c9c909550929092019150614dbb9050565b508715614e4757509050614f3f565b600086614e55575084614eca565b818781518110614e6157fe5b6020026020010151851415614ebd576040805162461bcd60e51b815260206004820152601c60248201527f726967687420737562747265652063616e6e6f74206265207a65726f00000000604482015290519081900360640190fd5b614ec78686614ca4565b90505b80875b60018a5103811015614ef357614ee9828583815181106147e357fe5b9150600101614ecd565b50838114614f39576040805162461bcd60e51b815260206004820152600e60248201526d0caf0e0cac6e8cac840dac2e8c6d60931b604482015290519081900360640190fd5b50925050505b979650505050505050565b60408051818152610820810182526060918291906020820161080080368337019050509050614f79600061263c565b81600081518110614f8657fe5b602090810291909101015260015b6040811015614fe557614fc6826001830381518110614faf57fe5b60200260200101518360018403815181106147e357fe5b828281518110614fd257fe5b6020908102919091010152600101614f94565b50905090565b600080805b602081101561398457600882901b91506000818501865111615013576000615031565b858286018151811061502157fe5b01602001516001600160f81b0319165b60f81c929092179150600101614ff0565b600081615051575060016112e0565b61505e600183901c615042565b60010190506112e0565b60405180610240016040528060006001600160a01b0316815260200161508c6151a4565b81526020016150996151a4565b81526000602082018190526040820181905260608201819052608082015260a0016150c261523f565b81526020016150cf61523f565b81526000602082018190526040820181905260608083018190526080830182905260a083015260c0820181905260e0820181905261010082018190526101209091015290565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b6040518060e001604052806007906020820280368337509192915050565b6040518060e0016040528060008152602001615175615259565b81526060602082018190526000604083015201615190615211565b815260006020820181905260409091015290565b60408051610120810190915260008152602081016151c061515b565b81526020016151cd61515b565b81526020016151da61515b565b81526020016151e761515b565b8152600060208201819052604082015260600161520261515b565b8152602001600081525090565bfe5b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b604051806040016040528060008152602001606081525090565b604080516060808201835260008083526020830152918101919091529056fe7761736d2066696e616c20696e737472756374696f6e2063616e6e6f74206861766520696d6d656475736520616e6f7468657220636f6e747261637420746f2068616e646c65206f74686572206f70636f646573a26469706673582212208e654b0aeeb44c547ff307ceaa047c0434720abd72fe8022a4ec39fcb743c96f64736f6c634300060c0033"

// DeployOneStepProof2 deploys a new Ethereum contract, binding an instance of OneStepProof2 to it.
func DeployOneStepProof2(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OneStepProof2, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OneStepProof2Bin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// OneStepProof2 is an auto generated Go binding around an Ethereum contract.
type OneStepProof2 struct {
	OneStepProof2Caller     // Read-only binding to the contract
	OneStepProof2Transactor // Write-only binding to the contract
	OneStepProof2Filterer   // Log filterer for contract events
}

// OneStepProof2Caller is an auto generated read-only Go binding around an Ethereum contract.
type OneStepProof2Caller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Transactor is an auto generated write-only Go binding around an Ethereum contract.
type OneStepProof2Transactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Filterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneStepProof2Filterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Session is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneStepProof2Session struct {
	Contract     *OneStepProof2    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneStepProof2CallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneStepProof2CallerSession struct {
	Contract *OneStepProof2Caller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// OneStepProof2TransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneStepProof2TransactorSession struct {
	Contract     *OneStepProof2Transactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// OneStepProof2Raw is an auto generated low-level Go binding around an Ethereum contract.
type OneStepProof2Raw struct {
	Contract *OneStepProof2 // Generic contract binding to access the raw methods on
}

// OneStepProof2CallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneStepProof2CallerRaw struct {
	Contract *OneStepProof2Caller // Generic read-only contract binding to access the raw methods on
}

// OneStepProof2TransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneStepProof2TransactorRaw struct {
	Contract *OneStepProof2Transactor // Generic write-only contract binding to access the raw methods on
}

// NewOneStepProof2 creates a new instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2(address common.Address, backend bind.ContractBackend) (*OneStepProof2, error) {
	contract, err := bindOneStepProof2(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// NewOneStepProof2Caller creates a new read-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Caller(address common.Address, caller bind.ContractCaller) (*OneStepProof2Caller, error) {
	contract, err := bindOneStepProof2(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Caller{contract: contract}, nil
}

// NewOneStepProof2Transactor creates a new write-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Transactor(address common.Address, transactor bind.ContractTransactor) (*OneStepProof2Transactor, error) {
	contract, err := bindOneStepProof2(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Transactor{contract: contract}, nil
}

// NewOneStepProof2Filterer creates a new log filterer instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Filterer(address common.Address, filterer bind.ContractFilterer) (*OneStepProof2Filterer, error) {
	contract, err := bindOneStepProof2(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Filterer{contract: contract}, nil
}

// bindOneStepProof2 binds a generic wrapper to an already deployed contract.
func bindOneStepProof2(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2Raw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.OneStepProof2Caller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2Raw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2Raw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2CallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[7] fields)
func (_OneStepProof2 *OneStepProof2Caller) ExecuteStep(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [7][32]byte
}, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "executeStep", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		Gas               uint64
		TotalMessagesRead *big.Int
		Fields            [7][32]byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Gas = *abi.ConvertType(out[0], new(uint64)).(*uint64)
	outstruct.TotalMessagesRead = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Fields = *abi.ConvertType(out[2], new([7][32]byte)).(*[7][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[7] fields)
func (_OneStepProof2 *OneStepProof2Session) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [7][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[7] fields)
func (_OneStepProof2 *OneStepProof2CallerSession) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [7][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof2 *OneStepProof2Caller) ExecuteStepDebug(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "executeStepDebug", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		StartMachine string
		AfterMachine string
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.StartMachine = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.AfterMachine = *abi.ConvertType(out[1], new(string)).(*string)

	return *outstruct, err

}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof2 *OneStepProof2Session) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof2.Contract.ExecuteStepDebug(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof2 *OneStepProof2CallerSession) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof2.Contract.ExecuteStepDebug(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Caller) ParseProof(opts *bind.CallOpts, proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "parseProof", proof)

	if err != nil {
		return *new([][32]byte), *new([][32]byte), *new([][32]byte), *new([][32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([][32]byte)).(*[][32]byte)
	out1 := *abi.ConvertType(out[1], new([][32]byte)).(*[][32]byte)
	out2 := *abi.ConvertType(out[2], new([][32]byte)).(*[][32]byte)
	out3 := *abi.ConvertType(out[3], new([][32]byte)).(*[][32]byte)

	return out0, out1, out2, out3, err

}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Session) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2CallerSession) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}
