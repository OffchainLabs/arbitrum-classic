// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OneStepProof2ABI is the input ABI used to generate the binding from.
const OneStepProof2ABI = "[{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[7]\",\"name\":\"fields\",\"type\":\"bytes32[7]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStepDebug\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"startMachine\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"afterMachine\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"parseProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// OneStepProof2FuncSigs maps the 4-byte function signature to its string representation.
var OneStepProof2FuncSigs = map[string]string{
	"9d16dd04": "executeStep(address,uint256,bytes32[2],bytes,bytes)",
	"2ccebb7a": "executeStepDebug(address,uint256,bytes32[2],bytes,bytes)",
	"793deea3": "parseProof(bytes)",
}

// OneStepProof2Bin is the compiled bytecode used for deploying new contracts.
var OneStepProof2Bin = "0x608060405234801561001057600080fd5b506153e6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632ccebb7a14610046578063793deea3146101fd5780639d16dd04146103c4575b600080fd5b61011f600480360360c081101561005c57600080fd5b6001600160a01b038235169160208101359160408201919081019060a081016080820135600160201b81111561009157600080fd5b8201836020820111156100a357600080fd5b803590602001918460018302840111600160201b831117156100c457600080fd5b919390929091602081019035600160201b8111156100e157600080fd5b8201836020820111156100f357600080fd5b803590602001918460018302840111600160201b8311171561011457600080fd5b5090925090506104ef565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610160578181015183820152602001610148565b50505050905090810190601f16801561018d5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101c05781810151838201526020016101a8565b50505050905090810190601f1680156101ed5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6102a16004803603602081101561021357600080fd5b810190602081018135600160201b81111561022d57600080fd5b82018360208201111561023f57600080fd5b803590602001918460018302840111600160201b8311171561026057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105b4945050505050565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b838110156102ed5781810151838201526020016102d5565b50505050905001858103845288818151815260200191508051906020019060200280838360005b8381101561032c578181015183820152602001610314565b50505050905001858103835287818151815260200191508051906020019060200280838360005b8381101561036b578181015183820152602001610353565b50505050905001858103825286818151815260200191508051906020019060200280838360005b838110156103aa578181015183820152602001610392565b505050509050019850505050505050505060405180910390f35b61049d600480360360c08110156103da57600080fd5b6001600160a01b038235169160208101359160408201919081019060a081016080820135600160201b81111561040f57600080fd5b82018360208201111561042157600080fd5b803590602001918460018302840111600160201b8311171561044257600080fd5b919390929091602081019035600160201b81111561045f57600080fd5b82018360208201111561047157600080fd5b803590602001918460018302840111600160201b8311171561049257600080fd5b5090925090506105f0565b60405180846001600160401b0316815260200183815260200182600760200280838360005b838110156104da5781810151838201526020016104c2565b50505050905001935050505060405180910390f35b6060806104fa61514c565b61057e898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600081840152601f19601f820116905080830192505050505050508e6106af565b905061058981610b63565b6105968160200151610f71565b92506105a58160400151610f71565b91505097509795505050505050565b6060806060806105c26151f9565b6105cb866112e5565b80516020820151604083015160609093015191975095509093509150505b9193509193565b6000806105fb615221565b61060361514c565b6106878a8a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b9081908401838280828437600081840152601f19601f820116905080830192505050505050508f6106af565b905061069281610b63565b61069b816113db565b935093509350509750975097945050505050565b6106b761514c565b6000846000815181106106c657fe5b602001015160f81c60f81b60f81c90506000856001815181106106e557fe5b602001015160f81c60f81b60f81c905060008660028151811061070457fe5b016020015160f81c9050600360606004840160ff166001600160401b038111801561072e57600080fd5b5060405190808252806020026020018201604052801561076857816020015b61075561523f565b81526020019060019003908161074d5790505b50905060608360040160ff166001600160401b038111801561078957600080fd5b506040519080825280602002602001820160405280156107c357816020015b6107b061523f565b8152602001906001900390816107a85790505b50905060005b8560ff168110156107ff576107de8b856114ac565b8483815181106107ea57fe5b602090810291909101015293506001016107c9565b5060005b8460ff16811015610839576108188b856114ac565b83838151811061082457fe5b60209081029190910101529350600101610803565b50610842615288565b61084c8b8561168d565b809250819550505060008b858151811061086257fe5b01602001516001959095019460f81c905061087b61514c565b6001600160a01b038b168152602081018390526108978361173e565b6040820152606081018f90528d6000602002013560808201528d60016020908102919091013560a0830152600060c0830181905260408051808201825260ff8c811682528185018a905260e086019190915281518083019092528a8116825292810187905261010084015283821660018114610120850152918b1661014084015261016083018f90526101a083018e90526102208301526101808201879052158061094557508160ff166001145b6040518060400160405280600b81526020016a04241445f494d4d5f5459560ac1b815250906109f25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109b757818101518382015260200161099f565b50505050905090810190601f1680156109e45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506109fb61523f565b60ff8316610a1c57610a158a8360200151600001516117b2565b9050610abc565b6000865111604051806040016040528060068152602001654e4f5f494d4d60d01b81525090610a8c5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50610ab98a8360200151600001518860018d0360ff1681518110610aac57fe5b6020026020010151611816565b90505b610ac58161189c565b60208301515260005b838a0360ff16811015610b0d57610b05878281518110610aea57fe5b60200260200101518460200151611a2f90919063ffffffff16565b600101610ace565b5060005b8860ff16811015610b4e57610b46868281518110610b2b57fe5b60200260200101518460200151611a4990919063ffffffff16565b600101610b11565b50909f9e505050505050505050505050505050565b60008060006152f3610b7c85610140015160ff16611a63565b93509350935093506000841180610b965750846101200151155b8015610ba7575060e0850151518410155b80610bce57508461012001518015610bbd575083155b8015610bce575060e0850151516001145b6040518060400160405280600a815260200169535441434b5f4d414e5960b01b81525090610c3d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50610100850151516040805180820190915260088152674155585f4d414e5960c01b602082015290841015610cb35760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b5060e085015151841115610d7057610cd1610ccc611bd1565b61189c565b610ce286604001516020015161189c565b146040518060400160405280600d81526020016c535441434b5f4d495353494e4760981b81525090610d555760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50610d61856005611c18565b50610d6b85611c8d565b610e30565b61010085015151831115610e0b57610d89610ccc611bd1565b610d9a86604001516040015161189c565b146040518060400160405280600b81526020016a4155585f4d495353494e4760a81b81525090610d555760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b610e158583611c18565b15610e2357610d6b85611c8d565b610e30858263ffffffff16565b84610220015115610ed25760408051600160f81b602080830191909152600060218301819052602280840191909152835180840390910181526042909201835281519101209086015160c001511415610e9557610e908560400151611c98565b610ed2565b6000610220860152604085015160c081015190526101208501518015610eb9575083155b610ec75760e0850151600090525b610100850151600090525b60005b60e086015151811015610f1c57610f148660e00151602001518281518110610ef957fe5b60200260200101518760400151611a2f90919063ffffffff16565b600101610ed5565b5060005b61010086015151811015610f6957610f61866101000151602001518281518110610f4657fe5b60200260200101518760400151611a4990919063ffffffff16565b600101610f20565b505050505050565b6060610f808260000151611ca3565b610f95610f90846020015161189c565b611ca3565b610fa5610f90856040015161189c565b610fb5610f90866060015161189c565b610fc5610f90876080015161189c565b610fd28760a00151611d72565b610fdf8860c00151611ca3565b610fef610f908a60e0015161189c565b60405160200180806709ac2c6d0d2dcca560c31b81525060080189805190602001908083835b602083106110345780518252601f199092019160209182019101611015565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528a516003909101928b0191508083835b6020831061108b5780518252601f19909201916020918201910161106c565b51815160209384036101000a60001901801990921691161790526216100560e91b9190930190815289516003909101928a0191508083835b602083106110e25780518252601f1990920191602091820191016110c3565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528851600390910192890191508083835b602083106111395780518252601f19909201916020918201910161111a565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528751600390910192880191508083835b602083106111905780518252601f199092019160209182019101611171565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528651600390910192870191508083835b602083106111e75780518252601f1990920191602091820191016111c8565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528551600390910192860191508083835b6020831061123e5780518252601f19909201916020918201910161121f565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528451600390910192850191508083835b602083106112955780518252601f199092019160209182019101611276565b6001836020036101000a0380198251168184511680821785525050505050509050018061148560f11b8152506002019850505050505050505060405160208183030381529060405290505b919050565b6112ed6151f9565b606061132c838460008151811061130057fe5b602001015160f81c60f81b8560018151811061131857fe5b01602001516001600160f81b031916611e4c565b90506060611359848560018151811061134157fe5b602001015160f81c60f81b8660028151811061131857fe5b90506060611386858660028151811061136e57fe5b602001015160f81c60f81b8760038151811061131857fe5b905060606113b3868760038151811061139b57fe5b602001015160f81c60f81b8860048151811061131857fe5b6040805160808101825295865260208601949094529284019190915250606082015292915050565b6000806113e6615221565b6101c0840151611430576040805162461bcd60e51b815260206004820152601060248201526f72657475726e696e673f3f3f3f3f3f3f60801b604482015290519081900360640190fd5b8360c0015184606001516040518060e001604052806114528860200151611ee9565b81526020016114648860400151611ee9565b8152602001876080015181526020018760a001518152602001876101c001518152602001876101e00151815260200187610200015160001b8152509250925092509193909250565b60006114b661523f565b835183106114fc576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b6000806115098686611fc3565b91509150611515611fea565b60ff168160ff16141561154957600061152e8784611fef565b90935090508261153d8261205d565b94509450505050611686565b61155161212a565b60ff168160ff16141561157357611568868361212f565b935093505050611686565b61157b6121d1565b60ff168160ff1614156115925761156886836121d6565b61159a612251565b60ff168160ff1614156115c25760006115b38784611fef565b90935090508261153d82612256565b6115ca61234d565b60ff168160ff1614156115e1576115688683612352565b6115e96123e7565b60ff168160ff161015801561160a57506116016123ec565b60ff168160ff16105b156116465760006116196123e7565b82039050606061162a8289866123f1565b90945090508361163982612499565b9550955050505050611686565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b9250929050565b6000611697615288565b61169f615288565b60006101008201819052806116b48787611fef565b90965091506116c38787612352565b602085015295506116d48787612352565b604085015295506116e587876114ac565b606085015295506116f687876114ac565b608085015295506117078787611fef565b60a085015295506117188787611fef565b909650905061172787876114ac565b60e085015291835260c08301529590945092505050565b611746615288565b60405180610120016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361010001518152509050919050565b6117ba61523f565b6040805160608101825260ff85168152602080820185905282516000808252918101845261180d93830191611805565b6117f261523f565b8152602001906001900390816117ea5790505b5090526125e9565b90505b92915050565b61181e61523f565b604080516001808252818301909252606091816020015b61183d61523f565b815260200190600190039081611835579050509050828160008151811061186057fe5b602002602001018190525061189160405180606001604052808760ff168152602001868152602001838152506125e9565b9150505b9392505050565b60006118a6611fea565b60ff168260a0015160ff1614156118c95781516118c290612686565b90506112e0565b6118d161212a565b60ff168260a0015160ff1614156118ef576118c282602001516126aa565b6118f761234d565b60ff168260a0015160ff16141561191957815160c08301516118c2919061279f565b6119216123e7565b60ff168260a0015160ff16141561195a5761193a61523f565b61194783604001516127ed565b90506119528161189c565b9150506112e0565b611962612962565b60ff168260a0015160ff16141561197b575080516112e0565b611983612251565b60ff168260a0015160ff1614156119c8575060608082015160408051607b602080830191909152818301939093528151808203830181529301905281519101206112e0565b6119d06121d1565b60ff168260a0015160ff1614156119ee576118c28260800151612967565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b611a3d8260200151826129d4565b82602001819052505050565b611a578260400151826129d4565b82604001819052505050565b600080806152f360a1851415611a8857506002925060009150600a9050612a526105e9565b60a2851415611aa657506002925060009150600a9050612b066105e9565b60a3851415611ac457506002925060009150600a9050612b986105e9565b60a4851415611ae25750600392506000915060649050612c2a6105e9565b60a5851415611b005750600392506000915060649050612d176105e9565b60a6851415611b1e5750600392506000915060649050612de86105e9565b60f1851415611b3c5750600292506000915060649050612ea76105e9565b60a7851415611b5c57506002925060009150620f4240905061313a6105e9565b60a8851415611b7c57506003925060009150620f424090506134006105e9565b6070851415611b9a575060029250600091506064905061375e6105e9565b60405162461bcd60e51b815260040180806020018281038252602c815260200180615385602c913960400191505060405180910390fd5b611bd961523f565b60408051600080825260208201909252611c1391611c0d565b611bfa61523f565b815260200190600190039081611bf25790505b50612499565b905090565b6000816001600160401b0316836040015160a001511015611c5d575060c0820180516005016001600160401b03169052604082015160001960a0909101526001611810565b5060c0820180516001600160401b039083018116909152604083015160a001805191831690910390526000611810565b600161022090910152565b600161010090910152565b60408051818152606081810183529182919060208201818036833701905050905060005b6020811015611d6b576000848260208110611cde57fe5b1a60f881811b9250601080830480831b9360ff9091169091029003901b611d04826138f8565b858560020281518110611d1357fe5b60200101906001600160f81b031916908160001a905350611d33816138f8565b858560020260010181518110611d4557fe5b60200101906001600160f81b031916908160001a9053505060019092019150611cc79050565b5092915050565b60608180611d995750506040805180820190915260018152600360fc1b60208201526112e0565b8060005b8115611db157600101600a82049150611d9d565b6060816001600160401b0381118015611dc957600080fd5b506040519080825280601f01601f191660200182016040528015611df4576020820181803683370190505b50905060001982015b8415611e4257600a850660300160f81b82828060019003935081518110611e2057fe5b60200101906001600160f81b031916908160001a905350600a85049450611dfd565b5095945050505050565b606060f883811c9083901c81900360ff169082826001600160401b0381118015611e7557600080fd5b50604051908082528060200260200182016040528015611e9f578160200160208202803683370190505b50905060005b83811015611ede57611ebc88828501602002613929565b60001b828281518110611ecb57fe5b6020908102919091010152600101611ea5565b509695505050505050565b600060028261010001511415611f01575060006112e0565b60018261010001511415611f17575060016112e0565b81516020830151611f279061189c565b611f34846040015161189c565b611f41856060015161189c565b611f4e866080015161189c565b8660a001518760c00151611f658960e0015161189c565b60405160200180898152602001888152602001878152602001868152602001858152602001848152602001838152602001828152602001985050505050505050506040516020818303038152906040528051906020012090506112e0565b60008082600101848481518110611fd657fe5b016020015190925060f81c90509250929050565b600090565b60008082845110158015612007575060208385510310155b612044576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b602083016120528585613969565b915091509250929050565b61206561523f565b6040805160e08101825283815281516060810183526000808252602080830182905284518281528082018652939490850193908301916120bb565b6120a861523f565b8152602001906001900390816120a05790505b509052815260200160006040519080825280602002602001820160405280156120fe57816020015b6120eb61523f565b8152602001906001900390816120e35790505b508152600060208201526040016121136139c2565b815260006020820152600160409091015292915050565b600190565b600061213961523f565b8260008061214561523f565b60006121518986611fc3565b90955093506121608986611fc3565b9095509250600160ff851614156121815761217b89866114ac565b90955091505b61218b89866139f9565b9095509050600160ff851614156121b657846121a8848385611816565b965096505050505050611686565b846121c184836117b2565b9650965050505050509250929050565b600e90565b60006121e061523f565b826000808080806121f18a876139f9565b90965094506122008a876139f9565b909650935061220f8a87611fef565b909650925061221e8a876139f9565b909650915061222d8a87611fef565b9096509050856122408686868686613a0a565b975097505050505050509250929050565b600c90565b61225e61523f565b6040518060e00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b03811180156122a557600080fd5b506040519080825280602002602001820160405280156122df57816020015b6122cc61523f565b8152602001906001900390816122c45790505b5090528152602001600060405190808252806020026020018201604052801561232257816020015b61230f61523f565b8152602001906001900390816123075790505b5081526020018381526020016123366139c2565b8152600c6020820152600160409091015292915050565b600290565b600061235c61523f565b82845110158015612371575060408385510310155b6123ae576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b6000806123bb86866139f9565b90945091506123ca8685611fef565b9094509050836123da8383613b2e565b9350935050509250929050565b600390565b600f90565b60006060828160ff87166001600160401b038111801561241057600080fd5b5060405190808252806020026020018201604052801561244a57816020015b61243761523f565b81526020019060019003908161242f5790505b50905060005b8760ff168160ff16101561248c5761246887846114ac565b838360ff168151811061247757fe5b60209081029190910101529250600101612450565b5090969095509350505050565b6124a161523f565b6124ab8251613bfa565b6124fc576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b83518110156125335783818151811061251657fe5b602002602001015160c00151820191508080600101915050612501565b506040518060e00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b038111801561257b57600080fd5b506040519080825280602002602001820160405280156125b557816020015b6125a261523f565b81526020019060019003908161259a5790505b509052815260208101859052600060408201526060016125d36139c2565b8152600360208201526040019190915292915050565b6125f161523f565b6040518060e001604052806000815260200183815260200160006001600160401b038111801561262057600080fd5b5060405190808252806020026020018201604052801561265a57816020015b61264761523f565b81526020019060019003908161263f5790505b5081526000602082015260400161266f6139c2565b815260016020820181905260409091015292915050565b60408051602080820193909352815180820384018152908201909152805191012090565b60006002826040015151106126bb57fe5b60408201515161271e576126cd61212a565b82600001518360200151604051602001808460ff1660f81b81526001018360ff1660f81b815260010182815260200193505050506040516020818303038152906040528051906020012090506112e0565b61272661212a565b826000015161274c846040015160008151811061273f57fe5b602002602001015161189c565b8460200151604051602001808560ff1660f81b81526001018460ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b60006127a96123e7565b8383604051602001808460ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b6127f561523f565b600882511115612843576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b606082516001600160401b038111801561285c57600080fd5b50604051908082528060200260200182016040528015612886578160200160208202803683370190505b508051909150600160005b828110156128e9576128a886828151811061273f57fe5b8482815181106128b457fe5b6020026020010181815250508581815181106128cc57fe5b602002602001015160c00151820191508080600101915050612891565b506000835184604051602001808360ff1660f81b8152600101828051906020019060200280838360005b8381101561292b578181015183820152602001612913565b50505050905001925050506040516020818303038152906040528051906020012090506129588183613b2e565b9695505050505050565b606490565b60006129716121d1565b8260000151836020015184606001518560800151604051602001808660ff1660f81b815260010185815260200184815260200183815260200182815260200195505050505050604051602081830303815290604052805190602001209050919050565b6129dc61523f565b6040805160028082526060828101909352816020015b6129fa61523f565b8152602001906001900390816129f25790505090508281600081518110612a1d57fe5b60200260200101819052508381600181518110612a3657fe5b6020026020010181905250612a4a816127ed565b949350505050565b612a5a61523f565b612a678260e00151613c01565b9050612a7161523f565b612a7e8360e00151613c01565b9050612a8982613c43565b1580612a9b5750612a9981613c61565b155b15612ab057612aa983613c6e565b5050612b03565b8151600160401b11612ac557612aa983613c6e565b6000612ae782606001518460000151612ae2876101a001516112e5565b613c77565b9050612aff8460e00151612afa8361205d565b613c99565b5050505b50565b612b0e61523f565b612b1b8260e00151613c01565b9050612b2561523f565b612b328360e00151613c01565b9050612b3d82613c43565b1580612b4f5750612b4d81613c61565b155b15612b5d57612aa983613c6e565b815167fffffffffffffff911612b7657612aa983613c6e565b6000612ae782606001518460000151612b93876101a001516112e5565b613cc3565b612ba061523f565b612bad8260e00151613c01565b9050612bb761523f565b612bc48360e00151613c01565b9050612bcf82613c43565b1580612be15750612bdf81613c61565b155b15612bef57612aa983613c6e565b815167ffffffffffffffe111612c0857612aa983613c6e565b6000612ae782606001518460000151612c25876101a001516112e5565b613e22565b612c3261523f565b612c3f8260e00151613c01565b9050612c4961523f565b612c568360e00151613c01565b9050612c6061523f565b612c6d8460e00151613c01565b9050612c7883613c43565b1580612c8a5750612c8882613f55565b155b80612c9b5750612c9981613c61565b155b15612cb157612ca984613c6e565b505050612b03565b8251600160401b111580612cc85750815161010011155b15612cd657612ca984613c6e565b6000612cfd826060015185600001518560000151612cf8896101a001516112e5565b613f60565b9050612d108560e00151612afa83612256565b5050505050565b612d1f61523f565b612d2c8260e00151613c01565b9050612d3661523f565b612d438360e00151613c01565b9050612d4d61523f565b612d5a8460e00151613c01565b9050612d6583613c43565b1580612d775750612d7582613f55565b155b80612d885750612d8681613c61565b155b15612d9657612ca984613c6e565b825167fffffffffffffff9111580612db357508151600160401b11155b15612dc157612ca984613c6e565b6000612cfd826060015185600001518560000151612de3896101a001516112e5565b613fa9565b612df061523f565b612dfd8260e00151613c01565b9050612e0761523f565b612e148360e00151613c01565b9050612e1e61523f565b612e2b8460e00151613c01565b9050612e3683613c43565b1580612e485750612e4682613f55565b155b80612e595750612e5781613c61565b155b15612e6757612ca984613c6e565b825167ffffffffffffffe111612e8057612ca984613c6e565b6000612cfd826060015185600001518560000151612ea2896101a001516112e5565b6140eb565b612eaf61523f565b612ebc8260e00151613c01565b9050612ec661523f565b612ed38360e00151613c01565b9050612ede81613c61565b612eeb57612aa983613c6e565b612ef482613f55565b612f0157612aa983613c6e565b6040805160028082526060828101909352816020015b612f1f61523f565b815260200190600190039081612f175790505090508181600081518110612f4257fe5b6020026020010181905250612f55611bd1565b81600181518110612f6257fe5b6020026020010181905250612f75615288565b6040805161012081019091527f4932d554b80820e294814bd0674558bd57fa55b750456622dc6e1793390c01ec815260208101612fec612fd77f71b400febf23e3973c60191ccf470be8c754bb923d10851420f550782a6b72c46192496141ab565b612fe787612fe78a612fe7611bd1565b614277565b8152602001612ff9611bd1565b8152602001613006611bd1565b8152602001613015600061205d565b8152620f424060208201527fb4c00615f95dc249934075fcc669947596baf6e070ac80a59f79dae98aa932f06040820152606001613051611bd1565b815260200160008152509050613065615288565b60606000613077886101a001516142ed565b50935050925092506002825110156130d6576040805162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f756768207761736d20737461636b2072657475726e73000000604482015290519081900360640190fd5b6130f88860e00151836001815181106130eb57fe5b6020026020010151613c99565b61310d8860e00151836000815181106130eb57fe5b61311684611ee9565b6101c089015261312583611ee9565b6101e089015261020088015250505050505050565b61314261523f565b61314f8260e00151613c01565b905061315961523f565b6131668360e00151613c01565b905061317181613c61565b61317e57612aa983613c6e565b61318782613f55565b61319457612aa983613c6e565b6040805160028082526060828101909352816020015b6131b261523f565b8152602001906001900390816131aa57905050905081816000815181106131d557fe5b60200260200101819052506131e8611bd1565b816001815181106131f557fe5b602002602001018190525061320861523f565b6132347f97e073b103571a1794a6e51e9ca3464c07686628b9b59f59a0791bd9b3c5329d6192496141ab565b905061323e615288565b6040518061012001604052807f9035048daf60a7f343b8078730a8859bcccc481f657dadff27411ae58e65b7cb60001b815260200161328784612fe788612fe78b612fe7611bd1565b8152602001613294611bd1565b81526020016132a1611bd1565b81526020016132b0600061205d565b815264e8d4a5100060208201527fb4c00615f95dc249934075fcc669947596baf6e070ac80a59f79dae98aa932f060408201526060016132ee611bd1565b815260200160008152509050613302615288565b60606000613314896101a001516142ed565b5093505092509250600582511015613373576040805162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f756768207761736d20737461636b2072657475726e73000000604482015290519081900360640190fd5b6133d28960e00151612afa61338e8560038151811061273f57fe5b61339e8660048151811061273f57fe5b6133bb876004815181106133ae57fe5b6020026020010151614657565b6133c48d61189c565b6133cd8e614657565b613a0a565b6133db84611ee9565b6101c08a01526133ea83611ee9565b6101e08a01526102008901525050505050505050565b61340861523f565b6134158260e00151613c01565b905061341f61523f565b61342c8360e00151613c01565b905061343661523f565b6134438460e00151613c01565b905061344e82613c61565b61345b57612ca984613c6e565b61346483613f55565b61347157612ca984613c6e565b61347a8161475e565b61348757612ca984613c6e565b6040805160028082526060828101909352816020015b6134a561523f565b81526020019060019003908161349d57905050905082816000815181106134c857fe5b60200260200101819052506134db611bd1565b816001815181106134e857fe5b60200260200101819052506134fb6152f5565b506080820151613509615288565b60405180610120016040528083600001518152602001613544613534856020015186604001516141ab565b612fe789612fe78c612fe7611bd1565b8152602001613551611bd1565b815260200161355e611bd1565b815260200161356d600061205d565b815264e8d4a5100060208201527fb4c00615f95dc249934075fcc669947596baf6e070ac80a59f79dae98aa932f060408201526060016135ab611bd1565b8152602001600081525090506135bf615288565b606060006135d18a6101a001516142ed565b5093505092509250600282511015613630576040805162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f756768207761736d20737461636b2072657475726e73000000604482015290519081900360640190fd5b61364d8260018151811061364057fe5b6020026020010151613f55565b613692576040805162461bcd60e51b81526020600482015260116024820152701cdd1858dac81d1bdc081b9bdd081a5b9d607a1b604482015290519081900360640190fd5b6136af826000815181106136a257fe5b6020026020010151613c61565b6136f5576040805162461bcd60e51b815260206004820152601260248201527139ba30b1b5903732bc3a103737ba10313ab360711b604482015290519081900360640190fd5b61372f8a60e00151612afa8460008151811061370d57fe5b60200260200101518560018151811061372257fe5b6020026020010151614277565b61373884611ee9565b6101c08b015261374783611ee9565b6101e08b01526102008a0152505050505050505050565b61376661523f565b6137738260e00151613c01565b905061377d61523f565b61378a8360e00151613c01565b905061379582613c43565b15806137a757506137a581613c61565b155b156137b557612aa983613c6e565b815161271010806137c557508151155b156137d357612aa983613c6e565b82610160015151836101800151141561384e5761380681606001518360000151613801866101a001516112e5565b61476b565b15613845576040805162461bcd60e51b815260206004820152600a602482015269084aa8cbe988a9c8ea8960b31b604482015290519081900360640190fd5b612aa983613c6e565b610180830151825161016085015160006138698285856147bf565b9050806138758661189c565b146138b4576040805162461bcd60e51b815260206004820152600a60248201526915d493d391d7d4d1539160b21b604482015290519081900360640190fd5b509091016020908101919091206080850180516040805180860192909252818101939093528251808203840181526060909101909252815191909201209052505050565b6000600a60f883901c1015613918578160f81c60300160f81b90506112e0565b8160f81c60570160f81b90506112e0565b600080805b602081101561396157600882901b9150848185018151811061394c57fe5b016020015160f81c919091179060010161392e565b509392505050565b600081602001835110156139b9576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b6139ca6152f5565b506040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b600080602083016120528585613969565b613a1261523f565b6040518060e00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b0381118015613a5957600080fd5b50604051908082528060200260200182016040528015613a9357816020015b613a8061523f565b815260200190600190039081613a785790505b50905281526020016000604051908082528060200260200182016040528015613ad657816020015b613ac361523f565b815260200190600190039081613abb5790505b5081526020016000801b81526020016040518060a001604052808981526020018881526020018781526020018681526020018581525081526020016003600b0160ff1681526020016001815250905095945050505050565b613b3661523f565b6040805160e0810182528481528151606081018352600080825260208083018290528451828152808201865293949085019390830191613b8c565b613b7961523f565b815260200190600190039081613b715790505b50905281526020016000604051908082528060200260200182016040528015613bcf57816020015b613bbc61523f565b815260200190600190039081613bb45790505b50815260006020820152604001613be46139c2565b8152600260208201526040019290925250919050565b6008101590565b613c0961523f565b613c1161523f565b8260200151600184600001510381518110613c2857fe5b60209081029190910101518351600019018452915050919050565b60a081015160009060ff1615801561181057505051600160401b1190565b60a0015160ff16600c1490565b612b0381611c8d565b6000612a4a613c8f856020865b0485600001516147f1565b6020855b0661495f565b808260200151836000015181518110613cae57fe5b60209081029190910101525080516001019052565b604080516008808252818301909252600091606091906020820181803683370190505090506000613cfd866020875b0486600001516147f1565b9050602080860660080110613dd0576000613d24876020885b0460010187604001516147f1565b905060005b6018601f881660080301811015613d7857613d4a838260208a5b060161495f565b60f81b848281518110613d5957fe5b60200101906001600160f81b031916908160001a905350600101613d29565b506018601f8716600803015b6008811015613dc957613d9b826020898401613c93565b60f81b848281518110613daa57fe5b60200101906001600160f81b031916908160001a905350600101613d84565b5050613e19565b60005b6008811015613e1757613de98282602089613d43565b60f81b838281518110613df857fe5b60200101906001600160f81b031916908160001a905350600101613dd3565b505b6129588261496c565b604080516020808252818301909252600091606091906020820181803683370190505090506000613e5586602087613cf2565b9050602080860660200110613f0e576000613e7287602088613d16565b905060005b601f8716602003811015613ec057613e92838260208a613d43565b60f81b848281518110613ea157fe5b60200101906001600160f81b031916908160001a905350600101613e77565b50601f86166008035b6020811015613dc957613ee0826020898401613c93565b60f81b848281518110613eef57fe5b60200101906001600160f81b031916908160001a905350600101613ec9565b60005b6020811015613e1757613f278282602089613d43565b60f81b838281518110613f3657fe5b60200101906001600160f81b031916908160001a905350600101613f11565b60a0015160ff161590565b600080613f6f86602087613c84565b90506000613f818260208806876149a2565b90506000613f9d886020890484886000015189602001516149e1565b98975050505050505050565b60006060613fb684614a87565b90506000613fc687602088613cf2565b9050602080870660080111156140a35760005b6018601f88166008030181101561401e576140148260208984010685848151811061400057fe5b01602001516001600160f81b031916614af1565b9150600101613fd9565b50614038876020885b0483876000015188602001516149e1565b9650600061404888602089613d16565b90506018601f8816600803015b600881101561407f576140758260208a84015b0686848151811061400057fe5b9150600101614055565b5061409b886020890460010183886040015189606001516149e1565b9750506140e0565b60005b60088110156140d0576140c6828260208a5b060185848151811061400057fe5b91506001016140a6565b506140dd87602088614027565b96505b509495945050505050565b600060606140f884614a87565b9050600061410887602088613cf2565b9050602080870660200111156141885760005b601f871660200381101561414057614136828260208a6140b8565b915060010161411b565b5061414d87602088614027565b9650600061415d88602089613d16565b9050601f87166020035b602081101561407f5761417e8260208a8401614068565b9150600101614167565b60005b60208110156140d0576141a1828260208a6140b8565b915060010161418b565b6141b361523f565b6040805160e0810182528481528151606081018352600080825260208083018290528451828152808201865293949085019390830191614209565b6141f661523f565b8152602001906001900390816141ee5790505b5090528152602001600060405190808252806020026020018201604052801561424c57816020015b61423961523f565b8152602001906001900390816142315790505b508152600060208201526040016142616139c2565b8152606460208201526040019290925250919050565b61427f61523f565b6040805160028082526060828101909352816020015b61429d61523f565b81526020019060019003908161429557905050905083816000815181106142c057fe5b602002602001018190525082816001815181106142d957fe5b6020026020010181905250612a4a81612499565b6142f5615288565b606080600080600386511015614345576040805162461bcd60e51b815260206004820152601060248201526f7761736d2070726f6f6620656d70747960801b604482015290519081900360640190fd5b60008660008151811061435457fe5b602001015160f81c60f81b60f81c905060008760018151811061437357fe5b602001015160f81c60f81b60f81c905060008860028151811061439257fe5b016020015160f81c9050600360ff84166074146143f6576040805162461bcd60e51b815260206004820152601a60248201527f7761736d2066696e616c207374617465206d7573742068616c74000000000000604482015290519081900360640190fd5b8260040160ff166001600160401b038111801561441257600080fd5b5060405190808252806020026020018201604052801561444c57816020015b61443961523f565b8152602001906001900390816144315790505b5097508160040160ff166001600160401b038111801561446b57600080fd5b506040519080825280602002602001820160405280156144a557816020015b61449261523f565b81526020019060019003908161448a5790505b50965060005b8360ff168110156144e1576144c08b836114ac565b8a83815181106144cc57fe5b602090810291909101015291506001016144ab565b5060005b8260ff1681101561451b576144fa8b836114ac565b89838151811061450657fe5b602090810291909101015291506001016144e5565b50614524615288565b61452e8b8361168d565b809250819350505060008b838151811061454457fe5b01602001516001939093019260f81c905080156145925760405162461bcd60e51b815260040180806020018281038252602881526020018061535d6028913960400191505060405180910390fd5b61459a61523f565b6145a88784600001516117b2565b90506145b38161189c565b8352919a508a916145c48d85611fef565b9950935060005b82870360ff16811015614606576145fe8c82815181106145e757fe5b602002602001015185611a2f90919063ffffffff16565b6001016145cb565b5060005b8560ff168110156146435761463b8b828151811061462457fe5b602002602001015185611a4990919063ffffffff16565b60010161460a565b849850505050505050505091939590929450565b6000614661611fea565b60ff168260a0015160ff16141561467a575060016112e0565b61468261212a565b60ff168260a0015160ff16141561469b575060016112e0565b6146a361234d565b60ff168260a0015160ff1614156146bf575060c08101516112e0565b6146c76123e7565b60ff168260a0015160ff1614156146f8576146e061523f565b6146ed83604001516127ed565b905061195281614657565b614700612962565b60ff168260a0015160ff16141561471c575060c08101516112e0565b614724612251565b60ff168260a0015160ff16141561473d575060016112e0565b6147456121d1565b60ff168260a0015160ff1614156119ee575060016112e0565b60a0015160ff16600e1490565b60008061477a85602086613c84565b9050601f84165b60208110156147ac57614794828261495f565b156147a457600092505050611895565b600101614781565b5061189185602086048560000151614b0d565b6000806147d785856147d086614c89565b6001614cb4565b508551909150611891906147ec607b84614d88565b614d88565b600081516000141561485a576148076000612686565b8414614852576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b506000611895565b60006148798360008151811061486c57fe5b6020026020010151612686565b905060015b83518110156148e35784600116600114156148b7576148b08482815181106148a257fe5b602002602001015183614d88565b91506148d7565b6148d4828583815181106148c757fe5b6020026020010151614d88565b91505b600194851c940161487e565b50848114614930576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b8315614940575060009050611895565b8260008151811061494d57fe5b60200260200101519150509392505050565b601f036008021c60ff1690565b600080805b8351811015611d6b57600882901b915083818151811061498d57fe5b016020015160f81c9190911790600101614971565b600060606149af85614a87565b90508260f81b8185815181106149c157fe5b60200101906001600160f81b031916908160001a9053506118918161496c565b60008151600314614a39576040805162461bcd60e51b815260206004820152601760248201527f4241445f4e4f524d414c495a4154494f4e5f50524f4f46000000000000000000604482015290519081900360640190fd5b6129588686868686600081518110614a4d57fe5b602002602001015160001c87600181518110614a6557fe5b602002602001015188600281518110614a7a57fe5b6020026020010151614db4565b6040805160208082528183019092526060918391839160208201818036833701905050905060005b6020811015613961578260f81b8282601f0381518110614acb57fe5b60200101906001600160f81b031916908160001a90535060089290921c91600101614aaf565b60006060614afe85614a87565b9050828185815181106149c157fe5b6000815160001415614b7657614b236000612686565b8414614b6e576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b506001611895565b6000614b888360008151811061486c57fe5b905060016060614b9661502e565b905060015b8551811015614c2a578660011660011415614bd457614bcd868281518110614bbf57fe5b602002602001015185614d88565b9350614c1e565b614be4848783815181106148c757fe5b9350828015614c1b5750816001820381518110614bfd57fe5b6020026020010151868281518110614c1157fe5b6020026020010151145b92505b600196871c9601614b9b565b50868314614c77576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b8515611e425760019350505050611895565b600060018211614c9b575060016112e0565b614caa60026001840104614c89565b60020290506112e0565b60008060208411614d085785518510614cdc57614cd16000612686565b600191509150614d7f565b6000614cf0614ceb88886150cf565b612686565b905080614cfd6000612686565b909350149050614d7f565b600080614d21886002880489016002895b046000614cb4565b91509150808015614d2f5750845b15614d4e57614d4388886002890488614cb4565b935093505050614d7f565b600080614d5e8a8a60028b614d19565b91509150614d6c8285614d88565b818015614d765750835b95509550505050505b94509492505050565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600080614dc087612686565b9050614dcd8989886147f1565b506060614dd861502e565b905060018751036001901b8910614e9c5787614df8578992505050615023565b6000614e038a615126565b88519091505b60018203811015614e3157614e278c8460018403815181106148c757fe5b9b50600101614e09565b5060015b60018203811015614e87578a60011660011415614e6557614e5e836001830381518110614bbf57fe5b9350614e7b565b614e78848460018403815181106148c757fe5b93505b60019a8b1c9a01614e35565b50614e928b84614d88565b9350505050615023565b60015b8751811015614f1c5760008a600116600114614ebb5783614ed0565b888281518110614ec757fe5b60200260200101515b905060008b600116600114614ef857898381518110614eeb57fe5b6020026020010151614efa565b845b9050614f068282614d88565b60019c8d1c9c909550929092019150614e9f9050565b508715614f2b57509050615023565b600086614f39575084614fae565b818781518110614f4557fe5b6020026020010151851415614fa1576040805162461bcd60e51b815260206004820152601c60248201527f726967687420737562747265652063616e6e6f74206265207a65726f00000000604482015290519081900360640190fd5b614fab8686614d88565b90505b80875b60018a5103811015614fd757614fcd828583815181106148c757fe5b9150600101614fb1565b5083811461501d576040805162461bcd60e51b815260206004820152600e60248201526d0caf0e0cac6e8cac840dac2e8c6d60931b604482015290519081900360640190fd5b50925050505b979650505050505050565b6040805181815261082081018252606091829190602082016108008036833701905050905061505d6000612686565b8160008151811061506a57fe5b602090810291909101015260015b60408110156150c9576150aa82600183038151811061509357fe5b60200260200101518360018403815181106148c757fe5b8282815181106150b657fe5b6020908102919091010152600101615078565b50905090565b600080805b602081101561396157600882901b915060008185018651116150f7576000615115565b858286018151811061510557fe5b01602001516001600160f81b0319165b60f81c9290921791506001016150d4565b600081615135575060016112e0565b615142600183901c615126565b60010190506112e0565b60405180610240016040528060006001600160a01b03168152602001615170615288565b815260200161517d615288565b81526000602082018190526040820181905260608201819052608082015260a0016151a6615323565b81526020016151b3615323565b81526000602082018190526040820181905260608083018190526080830182905260a083015260c0820181905260e0820181905261010082018190526101209091015290565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b6040518060e001604052806007906020820280368337509192915050565b6040518060e001604052806000815260200161525961533d565b815260606020820181905260006040830152016152746152f5565b815260006020820181905260409091015290565b60408051610120810190915260008152602081016152a461523f565b81526020016152b161523f565b81526020016152be61523f565b81526020016152cb61523f565b815260006020820181905260408201526060016152e661523f565b8152602001600081525090565bfe5b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b604051806040016040528060008152602001606081525090565b604080516060808201835260008083526020830152918101919091529056fe7761736d2066696e616c20696e737472756374696f6e2063616e6e6f74206861766520696d6d656475736520616e6f7468657220636f6e747261637420746f2068616e646c65206f74686572206f70636f646573a264697066735822122060b53da1a980c74815e69eb6f55d44d44ee81f3883080e2d840f02c15245250664736f6c634300060c0033"

// DeployOneStepProof2 deploys a new Ethereum contract, binding an instance of OneStepProof2 to it.
func DeployOneStepProof2(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OneStepProof2, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OneStepProof2Bin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// OneStepProof2 is an auto generated Go binding around an Ethereum contract.
type OneStepProof2 struct {
	OneStepProof2Caller     // Read-only binding to the contract
	OneStepProof2Transactor // Write-only binding to the contract
	OneStepProof2Filterer   // Log filterer for contract events
}

// OneStepProof2Caller is an auto generated read-only Go binding around an Ethereum contract.
type OneStepProof2Caller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Transactor is an auto generated write-only Go binding around an Ethereum contract.
type OneStepProof2Transactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Filterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneStepProof2Filterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Session is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneStepProof2Session struct {
	Contract     *OneStepProof2    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneStepProof2CallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneStepProof2CallerSession struct {
	Contract *OneStepProof2Caller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// OneStepProof2TransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneStepProof2TransactorSession struct {
	Contract     *OneStepProof2Transactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// OneStepProof2Raw is an auto generated low-level Go binding around an Ethereum contract.
type OneStepProof2Raw struct {
	Contract *OneStepProof2 // Generic contract binding to access the raw methods on
}

// OneStepProof2CallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneStepProof2CallerRaw struct {
	Contract *OneStepProof2Caller // Generic read-only contract binding to access the raw methods on
}

// OneStepProof2TransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneStepProof2TransactorRaw struct {
	Contract *OneStepProof2Transactor // Generic write-only contract binding to access the raw methods on
}

// NewOneStepProof2 creates a new instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2(address common.Address, backend bind.ContractBackend) (*OneStepProof2, error) {
	contract, err := bindOneStepProof2(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// NewOneStepProof2Caller creates a new read-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Caller(address common.Address, caller bind.ContractCaller) (*OneStepProof2Caller, error) {
	contract, err := bindOneStepProof2(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Caller{contract: contract}, nil
}

// NewOneStepProof2Transactor creates a new write-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Transactor(address common.Address, transactor bind.ContractTransactor) (*OneStepProof2Transactor, error) {
	contract, err := bindOneStepProof2(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Transactor{contract: contract}, nil
}

// NewOneStepProof2Filterer creates a new log filterer instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Filterer(address common.Address, filterer bind.ContractFilterer) (*OneStepProof2Filterer, error) {
	contract, err := bindOneStepProof2(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Filterer{contract: contract}, nil
}

// bindOneStepProof2 binds a generic wrapper to an already deployed contract.
func bindOneStepProof2(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2Raw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.OneStepProof2Caller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2Raw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2Raw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2CallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[7] fields)
func (_OneStepProof2 *OneStepProof2Caller) ExecuteStep(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [7][32]byte
}, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "executeStep", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		Gas               uint64
		TotalMessagesRead *big.Int
		Fields            [7][32]byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Gas = *abi.ConvertType(out[0], new(uint64)).(*uint64)
	outstruct.TotalMessagesRead = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Fields = *abi.ConvertType(out[2], new([7][32]byte)).(*[7][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[7] fields)
func (_OneStepProof2 *OneStepProof2Session) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [7][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[7] fields)
func (_OneStepProof2 *OneStepProof2CallerSession) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [7][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof2 *OneStepProof2Caller) ExecuteStepDebug(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "executeStepDebug", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		StartMachine string
		AfterMachine string
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.StartMachine = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.AfterMachine = *abi.ConvertType(out[1], new(string)).(*string)

	return *outstruct, err

}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof2 *OneStepProof2Session) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof2.Contract.ExecuteStepDebug(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof2 *OneStepProof2CallerSession) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof2.Contract.ExecuteStepDebug(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Caller) ParseProof(opts *bind.CallOpts, proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "parseProof", proof)

	if err != nil {
		return *new([][32]byte), *new([][32]byte), *new([][32]byte), *new([][32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([][32]byte)).(*[][32]byte)
	out1 := *abi.ConvertType(out[1], new([][32]byte)).(*[][32]byte)
	out2 := *abi.ConvertType(out[2], new([][32]byte)).(*[][32]byte)
	out3 := *abi.ConvertType(out[3], new([][32]byte)).(*[][32]byte)

	return out0, out1, out2, out3, err

}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Session) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2CallerSession) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}
