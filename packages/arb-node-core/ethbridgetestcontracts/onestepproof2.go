// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OneStepProof2ABI is the input ABI used to generate the binding from.
const OneStepProof2ABI = "[{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[7]\",\"name\":\"fields\",\"type\":\"bytes32[7]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStepDebug\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"startMachine\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"afterMachine\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"parseProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// OneStepProof2FuncSigs maps the 4-byte function signature to its string representation.
var OneStepProof2FuncSigs = map[string]string{
	"9d16dd04": "executeStep(address,uint256,bytes32[2],bytes,bytes)",
	"2ccebb7a": "executeStepDebug(address,uint256,bytes32[2],bytes,bytes)",
	"793deea3": "parseProof(bytes)",
}

// OneStepProof2Bin is the compiled bytecode used for deploying new contracts.
var OneStepProof2Bin = "0x608060405234801561001057600080fd5b5061483f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632ccebb7a14610046578063793deea3146101fd5780639d16dd04146103c4575b600080fd5b61011f600480360360c081101561005c57600080fd5b6001600160a01b038235169160208101359160408201919081019060a081016080820135600160201b81111561009157600080fd5b8201836020820111156100a357600080fd5b803590602001918460018302840111600160201b831117156100c457600080fd5b919390929091602081019035600160201b8111156100e157600080fd5b8201836020820111156100f357600080fd5b803590602001918460018302840111600160201b8311171561011457600080fd5b5090925090506104ef565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610160578181015183820152602001610148565b50505050905090810190601f16801561018d5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101c05781810151838201526020016101a8565b50505050905090810190601f1680156101ed5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6102a16004803603602081101561021357600080fd5b810190602081018135600160201b81111561022d57600080fd5b82018360208201111561023f57600080fd5b803590602001918460018302840111600160201b8311171561026057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105b4945050505050565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b838110156102ed5781810151838201526020016102d5565b50505050905001858103845288818151815260200191508051906020019060200280838360005b8381101561032c578181015183820152602001610314565b50505050905001858103835287818151815260200191508051906020019060200280838360005b8381101561036b578181015183820152602001610353565b50505050905001858103825286818151815260200191508051906020019060200280838360005b838110156103aa578181015183820152602001610392565b505050509050019850505050505050505060405180910390f35b61049d600480360360c08110156103da57600080fd5b6001600160a01b038235169160208101359160408201919081019060a081016080820135600160201b81111561040f57600080fd5b82018360208201111561042157600080fd5b803590602001918460018302840111600160201b8311171561044257600080fd5b919390929091602081019035600160201b81111561045f57600080fd5b82018360208201111561047157600080fd5b803590602001918460018302840111600160201b8311171561049257600080fd5b5090925090506105f0565b60405180846001600160401b0316815260200183815260200182600760200280838360005b838110156104da5781810151838201526020016104c2565b50505050905001935050505060405180910390f35b6060806104fa614607565b61057e898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600081840152601f19601f820116905080830192505050505050508e6106af565b905061058981610b63565b6105968160200151610f71565b92506105a58160400151610f71565b91505097509795505050505050565b6060806060806105c26146b4565b6105cb866112e5565b80516020820151604083015160609093015191975095509093509150505b9193509193565b6000806105fb6146dc565b610603614607565b6106878a8a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b9081908401838280828437600081840152601f19601f820116905080830192505050505050508f6106af565b905061069281610b63565b61069b816113db565b935093509350509750975097945050505050565b6106b7614607565b6000846000815181106106c657fe5b602001015160f81c60f81b60f81c90506000856001815181106106e557fe5b602001015160f81c60f81b60f81c905060008660028151811061070457fe5b016020015160f81c9050600360606004840160ff166001600160401b038111801561072e57600080fd5b5060405190808252806020026020018201604052801561076857816020015b6107556146fa565b81526020019060019003908161074d5790505b50905060608360040160ff166001600160401b038111801561078957600080fd5b506040519080825280602002602001820160405280156107c357816020015b6107b06146fa565b8152602001906001900390816107a85790505b50905060005b8560ff168110156107ff576107de8b85611462565b8483815181106107ea57fe5b602090810291909101015293506001016107c9565b5060005b8460ff16811015610839576108188b85611462565b83838151811061082457fe5b60209081029190910101529350600101610803565b50610842614737565b61084c8b85611624565b809250819550505060008b858151811061086257fe5b01602001516001959095019460f81c905061087b614607565b6001600160a01b038b16815260208101839052610897836116d5565b6040820152606081018f90528d6000602002013560808201528d60016020908102919091013560a0830152600060c0830181905260408051808201825260ff8c811682528185018a905260e086019190915281518083019092528a8116825292810187905261010084015283821660018114610120850152918b1661014084015261016083018f90526101a083018e90526102208301526101808201879052158061094557508160ff166001145b6040518060400160405280600b81526020016a04241445f494d4d5f5459560ac1b815250906109f25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109b757818101518382015260200161099f565b50505050905090810190601f1680156109e45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506109fb6146fa565b60ff8316610a1c57610a158a836020015160000151611749565b9050610abc565b6000865111604051806040016040528060068152602001654e4f5f494d4d60d01b81525090610a8c5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50610ab98a8360200151600001518860018d0360ff1681518110610aac57fe5b60200260200101516117ad565b90505b610ac581611833565b60208301515260005b838a0360ff16811015610b0d57610b05878281518110610aea57fe5b602002602001015184602001516119a090919063ffffffff16565b600101610ace565b5060005b8860ff16811015610b4e57610b46868281518110610b2b57fe5b602002602001015184602001516119ba90919063ffffffff16565b600101610b11565b50909f9e505050505050505050505050505050565b60008060006147a2610b7c85610140015160ff166119d4565b93509350935093506000841180610b965750846101200151155b8015610ba7575060e0850151518410155b80610bce57508461012001518015610bbd575083155b8015610bce575060e0850151516001145b6040518060400160405280600a815260200169535441434b5f4d414e5960b01b81525090610c3d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50610100850151516040805180820190915260088152674155585f4d414e5960c01b602082015290841015610cb35760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b5060e085015151841115610d7057610cd1610ccc611b02565b611833565b610ce2866040015160200151611833565b146040518060400160405280600d81526020016c535441434b5f4d495353494e4760981b81525090610d555760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50610d61856005611b49565b50610d6b85611bbe565b610e30565b61010085015151831115610e0b57610d89610ccc611b02565b610d9a866040015160400151611833565b146040518060400160405280600b81526020016a4155585f4d495353494e4760a81b81525090610d555760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b610e158583611b49565b15610e2357610d6b85611bbe565b610e30858263ffffffff16565b84610220015115610ed25760408051600160f81b602080830191909152600060218301819052602280840191909152835180840390910181526042909201835281519101209086015160c001511415610e9557610e908560400151611bc9565b610ed2565b6000610220860152604085015160c081015190526101208501518015610eb9575083155b610ec75760e0850151600090525b610100850151600090525b60005b60e086015151811015610f1c57610f148660e00151602001518281518110610ef957fe5b602002602001015187604001516119a090919063ffffffff16565b600101610ed5565b5060005b61010086015151811015610f6957610f61866101000151602001518281518110610f4657fe5b602002602001015187604001516119ba90919063ffffffff16565b600101610f20565b505050505050565b6060610f808260000151611bd4565b610f95610f908460200151611833565b611bd4565b610fa5610f908560400151611833565b610fb5610f908660600151611833565b610fc5610f908760800151611833565b610fd28760a00151611ca3565b610fdf8860c00151611bd4565b610fef610f908a60e00151611833565b60405160200180806709ac2c6d0d2dcca560c31b81525060080189805190602001908083835b602083106110345780518252601f199092019160209182019101611015565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528a516003909101928b0191508083835b6020831061108b5780518252601f19909201916020918201910161106c565b51815160209384036101000a60001901801990921691161790526216100560e91b9190930190815289516003909101928a0191508083835b602083106110e25780518252601f1990920191602091820191016110c3565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528851600390910192890191508083835b602083106111395780518252601f19909201916020918201910161111a565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528751600390910192880191508083835b602083106111905780518252601f199092019160209182019101611171565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528651600390910192870191508083835b602083106111e75780518252601f1990920191602091820191016111c8565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528551600390910192860191508083835b6020831061123e5780518252601f19909201916020918201910161121f565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528451600390910192850191508083835b602083106112955780518252601f199092019160209182019101611276565b6001836020036101000a0380198251168184511680821785525050505050509050018061148560f11b8152506002019850505050505050505060405160208183030381529060405290505b919050565b6112ed6146b4565b606061132c838460008151811061130057fe5b602001015160f81c60f81b8560018151811061131857fe5b01602001516001600160f81b031916611d7d565b90506060611359848560018151811061134157fe5b602001015160f81c60f81b8660028151811061131857fe5b90506060611386858660028151811061136e57fe5b602001015160f81c60f81b8760038151811061131857fe5b905060606113b3868760038151811061139b57fe5b602001015160f81c60f81b8860048151811061131857fe5b6040805160808101825295865260208601949094529284019190915250606082015292915050565b6000806113e66146dc565b8360c0015184606001516040518060e001604052806114088860200151611e1a565b815260200161141a8860400151611e1a565b8152602001876080015181526020018760a001518152602001876101c001518152602001876101e00151815260200187610200015160001b8152509250925092509193909250565b600061146c6146fa565b835183106114b2576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b6000806114bf8686611ef4565b915091506114cb611f1b565b60ff168160ff1614156114ff5760006114e48784611f20565b9093509050826114f382611f8e565b9450945050505061161d565b61150761204e565b60ff168160ff1614156115295761151e8683612053565b93509350505061161d565b6115316120f5565b60ff168160ff16141561155957600061154a8784611f20565b9093509050826114f3826120fa565b6115616121e6565b60ff168160ff1614156115785761151e86836121eb565b611580612280565b60ff168160ff16101580156115a15750611598612285565b60ff168160ff16105b156115dd5760006115b0612280565b8203905060606115c182898661228a565b9094509050836115d082612332565b955095505050505061161d565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b9250929050565b600061162e614737565b611636614737565b600061010082018190528061164b8787611f20565b909650915061165a87876121eb565b6020850152955061166b87876121eb565b6040850152955061167c8787611462565b6060850152955061168d8787611462565b6080850152955061169e8787611f20565b60a085015295506116af8787611f20565b90965090506116be8787611462565b60e085015291835260c08301529590945092505050565b6116dd614737565b60405180610120016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361010001518152509050919050565b6117516146fa565b6040805160608101825260ff8516815260208082018590528251600080825291810184526117a49383019161179c565b6117896146fa565b8152602001906001900390816117815790505b509052612473565b90505b92915050565b6117b56146fa565b604080516001808252818301909252606091816020015b6117d46146fa565b8152602001906001900390816117cc57905050905082816000815181106117f757fe5b602002602001018190525061182860405180606001604052808760ff16815260200186815260200183815250612473565b9150505b9392505050565b600061183d611f1b565b60ff16826080015160ff16141561186057815161185990612503565b90506112e0565b61186861204e565b60ff16826080015160ff161415611886576118598260200151612527565b61188e6121e6565b60ff16826080015160ff1614156118b057815160a0830151611859919061261c565b6118b8612280565b60ff16826080015160ff1614156118f1576118d16146fa565b6118de836040015161266a565b90506118e981611833565b9150506112e0565b6118f96127df565b60ff16826080015160ff161415611912575080516112e0565b61191a6120f5565b60ff16826080015160ff16141561195f575060608082015160408051607b602080830191909152818301939093528151808203830181529301905281519101206112e0565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b6119ae8260200151826127e4565b82602001819052505050565b6119c88260400151826127e4565b82604001819052505050565b600080806147a260a18514156119f957506002925060009150600a90506128626105e9565b60a2851415611a1757506002925060009150600a90506129166105e9565b60a3851415611a3557506002925060009150600a90506129a86105e9565b60a4851415611a535750600392506000915060649050612a3a6105e9565b60a5851415611a715750600392506000915060649050612b276105e9565b60a6851415611a8f5750600392506000915060649050612bf86105e9565b60f1851415611aad5750600292506000915060649050612cb76105e9565b6070851415611acb5750600292506000915060649050612ef16105e9565b60405162461bcd60e51b815260040180806020018281038252602c8152602001806147de602c913960400191505060405180910390fd5b611b0a6146fa565b60408051600080825260208201909252611b4491611b3e565b611b2b6146fa565b815260200190600190039081611b235790505b50612332565b905090565b6000816001600160401b0316836040015160a001511015611b8e575060c0820180516005016001600160401b03169052604082015160001960a09091015260016117a7565b5060c0820180516001600160401b039083018116909152604083015160a0018051918316909103905260006117a7565b600161022090910152565b600161010090910152565b60408051818152606081810183529182919060208201818036833701905050905060005b6020811015611c9c576000848260208110611c0f57fe5b1a60f881811b9250601080830480831b9360ff9091169091029003901b611c358261308b565b858560020281518110611c4457fe5b60200101906001600160f81b031916908160001a905350611c648161308b565b858560020260010181518110611c7657fe5b60200101906001600160f81b031916908160001a9053505060019092019150611bf89050565b5092915050565b60608180611cca5750506040805180820190915260018152600360fc1b60208201526112e0565b8060005b8115611ce257600101600a82049150611cce565b6060816001600160401b0381118015611cfa57600080fd5b506040519080825280601f01601f191660200182016040528015611d25576020820181803683370190505b50905060001982015b8415611d7357600a850660300160f81b82828060019003935081518110611d5157fe5b60200101906001600160f81b031916908160001a905350600a85049450611d2e565b5095945050505050565b606060f883811c9083901c81900360ff169082826001600160401b0381118015611da657600080fd5b50604051908082528060200260200182016040528015611dd0578160200160208202803683370190505b50905060005b83811015611e0f57611ded888285016020026130bc565b60001b828281518110611dfc57fe5b6020908102919091010152600101611dd6565b509695505050505050565b600060028261010001511415611e32575060006112e0565b60018261010001511415611e48575060016112e0565b81516020830151611e5890611833565b611e658460400151611833565b611e728560600151611833565b611e7f8660800151611833565b8660a001518760c00151611e968960e00151611833565b60405160200180898152602001888152602001878152602001868152602001858152602001848152602001838152602001828152602001985050505050505050506040516020818303038152906040528051906020012090506112e0565b60008082600101848481518110611f0757fe5b016020015190925060f81c90509250929050565b600090565b60008082845110158015611f38575060208385510310155b611f75576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b60208301611f8385856130fc565b915091509250929050565b611f966146fa565b6040805160c0810182528381528151606081018352600080825260208083018290528451828152808201865293949085019390830191611fec565b611fd96146fa565b815260200190600190039081611fd15790505b5090528152602001600060405190808252806020026020018201604052801561202f57816020015b61201c6146fa565b8152602001906001900390816120145790505b5081526000602082018190526040820152600160609091015292915050565b600190565b600061205d6146fa565b826000806120696146fa565b60006120758986611ef4565b90955093506120848986611ef4565b9095509250600160ff851614156120a55761209f8986611462565b90955091505b6120af8986613155565b9095509050600160ff851614156120da57846120cc8483856117ad565b96509650505050505061161d565b846120e58483611749565b9650965050505050509250929050565b600c90565b6121026146fa565b6040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b038111801561214957600080fd5b5060405190808252806020026020018201604052801561218357816020015b6121706146fa565b8152602001906001900390816121685790505b509052815260200160006040519080825280602002602001820160405280156121c657816020015b6121b36146fa565b8152602001906001900390816121ab5790505b50815260208101849052600c604082015260016060909101529050919050565b600290565b60006121f56146fa565b8284511015801561220a575060408385510310155b612247576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b6000806122548686613155565b90945091506122638685611f20565b9094509050836122738383613166565b9350935050509250929050565b600390565b600d90565b60006060828160ff87166001600160401b03811180156122a957600080fd5b506040519080825280602002602001820160405280156122e357816020015b6122d06146fa565b8152602001906001900390816122c85790505b50905060005b8760ff168160ff161015612325576123018784611462565b838360ff168151811061231057fe5b602090810291909101015292506001016122e9565b5090969095509350505050565b61233a6146fa565b6123448251613225565b612395576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b83518110156123cc578381815181106123af57fe5b602002602001015160a0015182019150808060010191505061239a565b506040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b038111801561241457600080fd5b5060405190808252806020026020018201604052801561244e57816020015b61243b6146fa565b8152602001906001900390816124335790505b5090528152602081019490945260006040850152600360608501526080909301525090565b61247b6146fa565b6040518060c001604052806000815260200183815260200160006001600160401b03811180156124aa57600080fd5b506040519080825280602002602001820160405280156124e457816020015b6124d16146fa565b8152602001906001900390816124c95790505b5081526000602082015260016040820181905260609091015292915050565b60408051602080820193909352815180820384018152908201909152805191012090565b600060028260400151511061253857fe5b60408201515161259b5761254a61204e565b82600001518360200151604051602001808460ff1660f81b81526001018360ff1660f81b815260010182815260200193505050506040516020818303038152906040528051906020012090506112e0565b6125a361204e565b82600001516125c984604001516000815181106125bc57fe5b6020026020010151611833565b8460200151604051602001808560ff1660f81b81526001018460ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b6000612626612280565b8383604051602001808460ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b6126726146fa565b6008825111156126c0576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b606082516001600160401b03811180156126d957600080fd5b50604051908082528060200260200182016040528015612703578160200160208202803683370190505b508051909150600160005b82811015612766576127258682815181106125bc57fe5b84828151811061273157fe5b60200260200101818152505085818151811061274957fe5b602002602001015160a0015182019150808060010191505061270e565b506000835184604051602001808360ff1660f81b8152600101828051906020019060200280838360005b838110156127a8578181015183820152602001612790565b50505050905001925050506040516020818303038152906040528051906020012090506127d58183613166565b9695505050505050565b606490565b6127ec6146fa565b6040805160028082526060828101909352816020015b61280a6146fa565b815260200190600190039081612802579050509050828160008151811061282d57fe5b6020026020010181905250838160018151811061284657fe5b602002602001018190525061285a8161266a565b949350505050565b61286a6146fa565b6128778260e0015161322c565b90506128816146fa565b61288e8360e0015161322c565b90506128998261326e565b15806128ab57506128a98161328c565b155b156128c0576128b983613299565b5050612913565b8151600160401b116128d5576128b983613299565b60006128f7826060015184600001516128f2876101a001516112e5565b6132a2565b905061290f8460e0015161290a83611f8e565b6132c4565b5050505b50565b61291e6146fa565b61292b8260e0015161322c565b90506129356146fa565b6129428360e0015161322c565b905061294d8261326e565b158061295f575061295d8161328c565b155b1561296d576128b983613299565b815167fffffffffffffff911612986576128b983613299565b60006128f7826060015184600001516129a3876101a001516112e5565b6132ee565b6129b06146fa565b6129bd8260e0015161322c565b90506129c76146fa565b6129d48360e0015161322c565b90506129df8261326e565b15806129f157506129ef8161328c565b155b156129ff576128b983613299565b815167ffffffffffffffe111612a18576128b983613299565b60006128f782606001518460000151612a35876101a001516112e5565b61344d565b612a426146fa565b612a4f8260e0015161322c565b9050612a596146fa565b612a668360e0015161322c565b9050612a706146fa565b612a7d8460e0015161322c565b9050612a888361326e565b1580612a9a5750612a9882613580565b155b80612aab5750612aa98161328c565b155b15612ac157612ab984613299565b505050612913565b8251600160401b111580612ad85750815161010011155b15612ae657612ab984613299565b6000612b0d826060015185600001518560000151612b08896101a001516112e5565b61358b565b9050612b208560e0015161290a836120fa565b5050505050565b612b2f6146fa565b612b3c8260e0015161322c565b9050612b466146fa565b612b538360e0015161322c565b9050612b5d6146fa565b612b6a8460e0015161322c565b9050612b758361326e565b1580612b875750612b8582613580565b155b80612b985750612b968161328c565b155b15612ba657612ab984613299565b825167fffffffffffffff9111580612bc357508151600160401b11155b15612bd157612ab984613299565b6000612b0d826060015185600001518560000151612bf3896101a001516112e5565b6135d4565b612c006146fa565b612c0d8260e0015161322c565b9050612c176146fa565b612c248360e0015161322c565b9050612c2e6146fa565b612c3b8460e0015161322c565b9050612c468361326e565b1580612c585750612c5682613580565b155b80612c695750612c678161328c565b155b15612c7757612ab984613299565b825167ffffffffffffffe111612c9057612ab984613299565b6000612b0d826060015185600001518560000151612cb2896101a001516112e5565b61371d565b612cbf6146fa565b612ccc8260e0015161322c565b9050612cd66146fa565b612ce38360e0015161322c565b9050612cee8161328c565b612cfb576128b983613299565b612d0482613580565b612d11576128b983613299565b6040805160028082526060828101909352816020015b612d2f6146fa565b815260200190600190039081612d275790505090508181600081518110612d5257fe5b6020026020010181905250612d65611b02565b81600181518110612d7257fe5b6020026020010181905250612d85614737565b6040518061012001604052806000801b8152602001612dc0612dab6000801b60006137ef565b612dbb87612dbb8a612dbb611b02565b6138ae565b8152602001612dcd611b02565b8152602001612dda611b02565b8152602001612de7611b02565b815264174876e800602082015260006040820152606001612e06611b02565b815260200160008152509050612e1a614737565b6060806000612e2d896101a00151613924565b9350935093509350600283511015612e8c576040805162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f756768207761736d20737461636b2072657475726e73000000604482015290519081900360640190fd5b612eae8960e0015184600181518110612ea157fe5b60200260200101516132c4565b612ec38960e0015184600081518110612ea157fe5b612ecc85611e1a565b6101c08a0152612edb84611e1a565b6101e08a01526102008901525050505050505050565b612ef96146fa565b612f068260e0015161322c565b9050612f106146fa565b612f1d8360e0015161322c565b9050612f288261326e565b1580612f3a5750612f388161328c565b155b15612f48576128b983613299565b81516127101080612f5857508151155b15612f66576128b983613299565b826101600151518361018001511415612fe157612f9981606001518360000151612f94866101a001516112e5565b613c26565b15612fd8576040805162461bcd60e51b815260206004820152600a602482015269084aa8cbe988a9c8ea8960b31b604482015290519081900360640190fd5b6128b983613299565b61018083015182516101608501516000612ffc828585613c7a565b90508061300886611833565b14613047576040805162461bcd60e51b815260206004820152600a60248201526915d493d391d7d4d1539160b21b604482015290519081900360640190fd5b509091016020908101919091206080850180516040805180860192909252818101939093528251808203840181526060909101909252815191909201209052505050565b6000600a60f883901c10156130ab578160f81c60300160f81b90506112e0565b8160f81c60570160f81b90506112e0565b600080805b60208110156130f457600882901b915084818501815181106130df57fe5b016020015160f81c91909117906001016130c1565b509392505050565b6000816020018351101561314c576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b60008060208301611f8385856130fc565b61316e6146fa565b6040805160c08101825284815281516060810183526000808252602080830182905284518281528082018652939490850193908301916131c4565b6131b16146fa565b8152602001906001900390816131a95790505b5090528152602001600060405190808252806020026020018201604052801561320757816020015b6131f46146fa565b8152602001906001900390816131ec5790505b50815260006020820152600260408201526060019290925250919050565b6008101590565b6132346146fa565b61323c6146fa565b826020015160018460000151038151811061325357fe5b60209081029190910101518351600019018452915050919050565b608081015160009060ff161580156117a757505051600160401b1190565b6080015160ff16600c1490565b61291381611bbe565b600061285a6132ba856020865b048560000151613cac565b6020855b06613e1a565b8082602001518360000151815181106132d957fe5b60209081029190910101525080516001019052565b604080516008808252818301909252600091606091906020820181803683370190505090506000613328866020875b048660000151613cac565b90506020808606600801106133fb57600061334f876020885b046001018760400151613cac565b905060005b6018601f8816600803018110156133a357613375838260208a5b0601613e1a565b60f81b84828151811061338457fe5b60200101906001600160f81b031916908160001a905350600101613354565b506018601f8716600803015b60088110156133f4576133c68260208984016132be565b60f81b8482815181106133d557fe5b60200101906001600160f81b031916908160001a9053506001016133af565b5050613444565b60005b600881101561344257613414828260208961336e565b60f81b83828151811061342357fe5b60200101906001600160f81b031916908160001a9053506001016133fe565b505b6127d582613e27565b6040805160208082528183019092526000916060919060208201818036833701905050905060006134808660208761331d565b905060208086066020011061353957600061349d87602088613341565b905060005b601f87166020038110156134eb576134bd838260208a61336e565b60f81b8482815181106134cc57fe5b60200101906001600160f81b031916908160001a9053506001016134a2565b50601f86166008035b60208110156133f45761350b8260208984016132be565b60f81b84828151811061351a57fe5b60200101906001600160f81b031916908160001a9053506001016134f4565b60005b602081101561344257613552828260208961336e565b60f81b83828151811061356157fe5b60200101906001600160f81b031916908160001a90535060010161353c565b6080015160ff161590565b60008061359a866020876132af565b905060006135ac826020880687613e5d565b905060006135c888602089048488600001518960200151613e9c565b98975050505050505050565b600060606135e184613f42565b905060006135f18760208861331d565b9050602080870660080111156136d35760005b6018601f88166008030181101561364c576136428260208984010685846018018151811061362e57fe5b01602001516001600160f81b031916613fac565b9150600101613604565b50613666876020885b048387600001518860200151613e9c565b9650600061367688602089613341565b90506018601f8816600803015b60088110156136af576136a58260208a84010686846018018151811061362e57fe5b9150600101613683565b506136cb88602089046001018388604001518960600151613e9c565b975050613712565b60005b6008811015613702576136f8828260208a060185846018018151811061362e57fe5b91506001016136d6565b5061370f87602088613655565b96505b509495945050505050565b6000606061372a84613f42565b9050600061373a8760208861331d565b9050602080870660200111156137cc5760005b601f871660200381101561377c57613772828260208a5b060185848151811061362e57fe5b915060010161374d565b5061378987602088613655565b9650600061379988602089613341565b9050601f87166020035b60208110156136af576137c28260208a84010686848151811061362e57fe5b91506001016137a3565b60005b6020811015613702576137e5828260208a613764565b91506001016137cf565b6137f76146fa565b6040805160c081018252848152815160608101835260008082526020808301829052845182815280820186529394908501939083019161384d565b61383a6146fa565b8152602001906001900390816138325790505b5090528152602001600060405190808252806020026020018201604052801561389057816020015b61387d6146fa565b8152602001906001900390816138755790505b50815260006020820152606460408201526060019290925250919050565b6138b66146fa565b6040805160028082526060828101909352816020015b6138d46146fa565b8152602001906001900390816138cc57905050905083816000815181106138f757fe5b6020026020010181905250828160018151811061391057fe5b602002602001018190525061285a81612332565b61392c614737565b606080600060038551101561397b576040805162461bcd60e51b815260206004820152601060248201526f7761736d2070726f6f6620656d70747960801b604482015290519081900360640190fd5b60008560008151811061398a57fe5b602001015160f81c60f81b60f81c90506000866001815181106139a957fe5b602001015160f81c60f81b60f81c90506000876002815181106139c857fe5b016020015160f81c9050600360ff8416607414613a2c576040805162461bcd60e51b815260206004820152601a60248201527f7761736d2066696e616c207374617465206d7573742068616c74000000000000604482015290519081900360640190fd5b8260040160ff166001600160401b0381118015613a4857600080fd5b50604051908082528060200260200182016040528015613a8257816020015b613a6f6146fa565b815260200190600190039081613a675790505b5096508160040160ff166001600160401b0381118015613aa157600080fd5b50604051908082528060200260200182016040528015613adb57816020015b613ac86146fa565b815260200190600190039081613ac05790505b50955060005b8360ff16811015613b1757613af68a83611462565b898381518110613b0257fe5b60209081029190910101529150600101613ae1565b5060005b8260ff16811015613b5157613b308a83611462565b888381518110613b3c57fe5b60209081029190910101529150600101613b1b565b50613b5a614737565b613b648a83611624565b809250819350505060008a8381518110613b7a57fe5b01602001519199505060019190910190889060f81c613b998b84611f20565b9750925060005b81860360ff16811015613bdb57613bd38a8281518110613bbc57fe5b6020026020010151846119a090919063ffffffff16565b600101613ba0565b5060005b8460ff16811015613c1857613c10898281518110613bf957fe5b6020026020010151846119ba90919063ffffffff16565b600101613bdf565b505050505050509193509193565b600080613c35856020866132af565b9050601f84165b6020811015613c6757613c4f8282613e1a565b15613c5f5760009250505061182c565b600101613c3c565b5061182885602086048560000151613fc8565b600080613c928585613c8b86614144565b600161416f565b50855190915061182890613ca7607b84614243565b614243565b6000815160001415613d1557613cc26000612503565b8414613d0d576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b50600061182c565b6000613d3483600081518110613d2757fe5b6020026020010151612503565b905060015b8351811015613d9e578460011660011415613d7257613d6b848281518110613d5d57fe5b602002602001015183614243565b9150613d92565b613d8f82858381518110613d8257fe5b6020026020010151614243565b91505b600194851c9401613d39565b50848114613deb576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b8315613dfb57506000905061182c565b82600081518110613e0857fe5b60200260200101519150509392505050565b601f036008021c60ff1690565b600080805b8351811015611c9c57600882901b9150838181518110613e4857fe5b016020015160f81c9190911790600101613e2c565b60006060613e6a85613f42565b90508260f81b818581518110613e7c57fe5b60200101906001600160f81b031916908160001a90535061182881613e27565b60008151600314613ef4576040805162461bcd60e51b815260206004820152601760248201527f4241445f4e4f524d414c495a4154494f4e5f50524f4f46000000000000000000604482015290519081900360640190fd5b6127d58686868686600081518110613f0857fe5b602002602001015160001c87600181518110613f2057fe5b602002602001015188600281518110613f3557fe5b602002602001015161426f565b6040805160208082528183019092526060918391839160208201818036833701905050905060005b60208110156130f4578260f81b8282601f0381518110613f8657fe5b60200101906001600160f81b031916908160001a90535060089290921c91600101613f6a565b60006060613fb985613f42565b905082818581518110613e7c57fe5b600081516000141561403157613fde6000612503565b8414614029576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b50600161182c565b600061404383600081518110613d2757fe5b9050600160606140516144e9565b905060015b85518110156140e557866001166001141561408f5761408886828151811061407a57fe5b602002602001015185614243565b93506140d9565b61409f84878381518110613d8257fe5b93508280156140d657508160018203815181106140b857fe5b60200260200101518682815181106140cc57fe5b6020026020010151145b92505b600196871c9601614056565b50868314614132576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b8515611d73576001935050505061182c565b600060018211614156575060016112e0565b61416560026001840104614144565b60020290506112e0565b600080602084116141c357855185106141975761418c6000612503565b60019150915061423a565b60006141ab6141a6888861458a565b612503565b9050806141b86000612503565b90935014905061423a565b6000806141dc886002880489016002895b04600061416f565b915091508080156141ea5750845b15614209576141fe8888600289048861416f565b93509350505061423a565b6000806142198a8a60028b6141d4565b915091506142278285614243565b8180156142315750835b95509550505050505b94509492505050565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b60008061427b87612503565b9050614288898988613cac565b5060606142936144e9565b905060018751036001901b891061435757876142b35789925050506144de565b60006142be8a6145e1565b88519091505b600182038110156142ec576142e28c846001840381518110613d8257fe5b9b506001016142c4565b5060015b60018203811015614342578a600116600114156143205761431983600183038151811061407a57fe5b9350614336565b61433384846001840381518110613d8257fe5b93505b60019a8b1c9a016142f0565b5061434d8b84614243565b93505050506144de565b60015b87518110156143d75760008a600116600114614376578361438b565b88828151811061438257fe5b60200260200101515b905060008b6001166001146143b3578983815181106143a657fe5b60200260200101516143b5565b845b90506143c18282614243565b60019c8d1c9c90955092909201915061435a9050565b5087156143e6575090506144de565b6000866143f4575084614469565b81878151811061440057fe5b602002602001015185141561445c576040805162461bcd60e51b815260206004820152601c60248201527f726967687420737562747265652063616e6e6f74206265207a65726f00000000604482015290519081900360640190fd5b6144668686614243565b90505b80875b60018a51038110156144925761448882858381518110613d8257fe5b915060010161446c565b508381146144d8576040805162461bcd60e51b815260206004820152600e60248201526d0caf0e0cac6e8cac840dac2e8c6d60931b604482015290519081900360640190fd5b50925050505b979650505050505050565b604080518181526108208101825260609182919060208201610800803683370190505090506145186000612503565b8160008151811061452557fe5b602090810291909101015260015b60408110156145845761456582600183038151811061454e57fe5b6020026020010151836001840381518110613d8257fe5b82828151811061457157fe5b6020908102919091010152600101614533565b50905090565b600080805b60208110156130f457600882901b915060008185018651116145b25760006145d0565b85828601815181106145c057fe5b01602001516001600160f81b0319165b60f81c92909217915060010161458f565b6000816145f0575060016112e0565b6145fd600183901c6145e1565b60010190506112e0565b60405180610240016040528060006001600160a01b0316815260200161462b614737565b8152602001614638614737565b81526000602082018190526040820181905260608201819052608082015260a0016146616147a4565b815260200161466e6147a4565b81526000602082018190526040820181905260608083018190526080830182905260a083015260c0820181905260e0820181905261010082018190526101209091015290565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b6040518060e001604052806007906020820280368337509192915050565b6040518060c00160405280600081526020016147146147be565b815260606020820181905260006040830181905290820181905260809091015290565b60408051610120810190915260008152602081016147536146fa565b81526020016147606146fa565b815260200161476d6146fa565b815260200161477a6146fa565b815260006020820181905260408201526060016147956146fa565b8152602001600081525090565bfe5b604051806040016040528060008152602001606081525090565b604080516060808201835260008083526020830152918101919091529056fe75736520616e6f7468657220636f6e747261637420746f2068616e646c65206f74686572206f70636f646573a2646970667358221220a0183330136767d5d5d783ad31e4c56d8185730a4422eb1db0b2eb3a3260159364736f6c634300060c0033"

// DeployOneStepProof2 deploys a new Ethereum contract, binding an instance of OneStepProof2 to it.
func DeployOneStepProof2(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OneStepProof2, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OneStepProof2Bin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// OneStepProof2 is an auto generated Go binding around an Ethereum contract.
type OneStepProof2 struct {
	OneStepProof2Caller     // Read-only binding to the contract
	OneStepProof2Transactor // Write-only binding to the contract
	OneStepProof2Filterer   // Log filterer for contract events
}

// OneStepProof2Caller is an auto generated read-only Go binding around an Ethereum contract.
type OneStepProof2Caller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Transactor is an auto generated write-only Go binding around an Ethereum contract.
type OneStepProof2Transactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Filterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneStepProof2Filterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Session is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneStepProof2Session struct {
	Contract     *OneStepProof2    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneStepProof2CallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneStepProof2CallerSession struct {
	Contract *OneStepProof2Caller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// OneStepProof2TransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneStepProof2TransactorSession struct {
	Contract     *OneStepProof2Transactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// OneStepProof2Raw is an auto generated low-level Go binding around an Ethereum contract.
type OneStepProof2Raw struct {
	Contract *OneStepProof2 // Generic contract binding to access the raw methods on
}

// OneStepProof2CallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneStepProof2CallerRaw struct {
	Contract *OneStepProof2Caller // Generic read-only contract binding to access the raw methods on
}

// OneStepProof2TransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneStepProof2TransactorRaw struct {
	Contract *OneStepProof2Transactor // Generic write-only contract binding to access the raw methods on
}

// NewOneStepProof2 creates a new instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2(address common.Address, backend bind.ContractBackend) (*OneStepProof2, error) {
	contract, err := bindOneStepProof2(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// NewOneStepProof2Caller creates a new read-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Caller(address common.Address, caller bind.ContractCaller) (*OneStepProof2Caller, error) {
	contract, err := bindOneStepProof2(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Caller{contract: contract}, nil
}

// NewOneStepProof2Transactor creates a new write-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Transactor(address common.Address, transactor bind.ContractTransactor) (*OneStepProof2Transactor, error) {
	contract, err := bindOneStepProof2(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Transactor{contract: contract}, nil
}

// NewOneStepProof2Filterer creates a new log filterer instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Filterer(address common.Address, filterer bind.ContractFilterer) (*OneStepProof2Filterer, error) {
	contract, err := bindOneStepProof2(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Filterer{contract: contract}, nil
}

// bindOneStepProof2 binds a generic wrapper to an already deployed contract.
func bindOneStepProof2(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2Raw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.OneStepProof2Caller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2Raw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2Raw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2CallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[7] fields)
func (_OneStepProof2 *OneStepProof2Caller) ExecuteStep(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [7][32]byte
}, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "executeStep", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		Gas               uint64
		TotalMessagesRead *big.Int
		Fields            [7][32]byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Gas = *abi.ConvertType(out[0], new(uint64)).(*uint64)
	outstruct.TotalMessagesRead = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Fields = *abi.ConvertType(out[2], new([7][32]byte)).(*[7][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[7] fields)
func (_OneStepProof2 *OneStepProof2Session) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [7][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[7] fields)
func (_OneStepProof2 *OneStepProof2CallerSession) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [7][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof2 *OneStepProof2Caller) ExecuteStepDebug(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "executeStepDebug", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		StartMachine string
		AfterMachine string
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.StartMachine = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.AfterMachine = *abi.ConvertType(out[1], new(string)).(*string)

	return *outstruct, err

}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof2 *OneStepProof2Session) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof2.Contract.ExecuteStepDebug(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof2 *OneStepProof2CallerSession) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof2.Contract.ExecuteStepDebug(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Caller) ParseProof(opts *bind.CallOpts, proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "parseProof", proof)

	if err != nil {
		return *new([][32]byte), *new([][32]byte), *new([][32]byte), *new([][32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([][32]byte)).(*[][32]byte)
	out1 := *abi.ConvertType(out[1], new([][32]byte)).(*[][32]byte)
	out2 := *abi.ConvertType(out[2], new([][32]byte)).(*[][32]byte)
	out3 := *abi.ConvertType(out[3], new([][32]byte)).(*[][32]byte)

	return out0, out1, out2, out3, err

}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Session) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2CallerSession) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}
