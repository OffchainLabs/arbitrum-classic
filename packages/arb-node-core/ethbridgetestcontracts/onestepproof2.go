// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OneStepProof2ABI is the input ABI used to generate the binding from.
const OneStepProof2ABI = "[{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[7]\",\"name\":\"fields\",\"type\":\"bytes32[7]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStepDebug\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"startMachine\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"afterMachine\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"parseProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// OneStepProof2FuncSigs maps the 4-byte function signature to its string representation.
var OneStepProof2FuncSigs = map[string]string{
	"9d16dd04": "executeStep(address,uint256,bytes32[2],bytes,bytes)",
	"2ccebb7a": "executeStepDebug(address,uint256,bytes32[2],bytes,bytes)",
	"793deea3": "parseProof(bytes)",
}

// OneStepProof2Bin is the compiled bytecode used for deploying new contracts.
var OneStepProof2Bin = "0x608060405234801561001057600080fd5b50615470806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632ccebb7a14610046578063793deea3146101fd5780639d16dd04146103c4575b600080fd5b61011f600480360360c081101561005c57600080fd5b6001600160a01b038235169160208101359160408201919081019060a081016080820135600160201b81111561009157600080fd5b8201836020820111156100a357600080fd5b803590602001918460018302840111600160201b831117156100c457600080fd5b919390929091602081019035600160201b8111156100e157600080fd5b8201836020820111156100f357600080fd5b803590602001918460018302840111600160201b8311171561011457600080fd5b5090925090506104ef565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610160578181015183820152602001610148565b50505050905090810190601f16801561018d5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101c05781810151838201526020016101a8565b50505050905090810190601f1680156101ed5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6102a16004803603602081101561021357600080fd5b810190602081018135600160201b81111561022d57600080fd5b82018360208201111561023f57600080fd5b803590602001918460018302840111600160201b8311171561026057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105b4945050505050565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b838110156102ed5781810151838201526020016102d5565b50505050905001858103845288818151815260200191508051906020019060200280838360005b8381101561032c578181015183820152602001610314565b50505050905001858103835287818151815260200191508051906020019060200280838360005b8381101561036b578181015183820152602001610353565b50505050905001858103825286818151815260200191508051906020019060200280838360005b838110156103aa578181015183820152602001610392565b505050509050019850505050505050505060405180910390f35b61049d600480360360c08110156103da57600080fd5b6001600160a01b038235169160208101359160408201919081019060a081016080820135600160201b81111561040f57600080fd5b82018360208201111561042157600080fd5b803590602001918460018302840111600160201b8311171561044257600080fd5b919390929091602081019035600160201b81111561045f57600080fd5b82018360208201111561047157600080fd5b803590602001918460018302840111600160201b8311171561049257600080fd5b5090925090506105f0565b60405180846001600160401b0316815260200183815260200182600760200280838360005b838110156104da5781810151838201526020016104c2565b50505050905001935050505060405180910390f35b6060806104fa6151d6565b61057e898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600081840152601f19601f820116905080830192505050505050508e6106af565b905061058981610b63565b6105968160200151610f71565b92506105a58160400151610f71565b91505097509795505050505050565b6060806060806105c2615283565b6105cb866112e5565b80516020820151604083015160609093015191975095509093509150505b9193509193565b6000806105fb6152ab565b6106036151d6565b6106878a8a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b9081908401838280828437600081840152601f19601f820116905080830192505050505050508f6106af565b905061069281610b63565b61069b816113db565b935093509350509750975097945050505050565b6106b76151d6565b6000846000815181106106c657fe5b602001015160f81c60f81b60f81c90506000856001815181106106e557fe5b602001015160f81c60f81b60f81c905060008660028151811061070457fe5b016020015160f81c9050600360606004840160ff166001600160401b038111801561072e57600080fd5b5060405190808252806020026020018201604052801561076857816020015b6107556152c9565b81526020019060019003908161074d5790505b50905060608360040160ff166001600160401b038111801561078957600080fd5b506040519080825280602002602001820160405280156107c357816020015b6107b06152c9565b8152602001906001900390816107a85790505b50905060005b8560ff168110156107ff576107de8b856114ac565b8483815181106107ea57fe5b602090810291909101015293506001016107c9565b5060005b8460ff16811015610839576108188b856114ac565b83838151811061082457fe5b60209081029190910101529350600101610803565b50610842615312565b61084c8b8561168d565b809250819550505060008b858151811061086257fe5b01602001516001959095019460f81c905061087b6151d6565b6001600160a01b038b168152602081018390526108978361173e565b6040820152606081018f90528d6000602002013560808201528d60016020908102919091013560a0830152600060c0830181905260408051808201825260ff8c811682528185018a905260e086019190915281518083019092528a8116825292810187905261010084015283821660018114610120850152918b1661014084015261016083018f90526101a083018e90526102208301526101808201879052158061094557508160ff166001145b6040518060400160405280600b81526020016a04241445f494d4d5f5459560ac1b815250906109f25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109b757818101518382015260200161099f565b50505050905090810190601f1680156109e45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506109fb6152c9565b60ff8316610a1c57610a158a8360200151600001516117b2565b9050610abc565b6000865111604051806040016040528060068152602001654e4f5f494d4d60d01b81525090610a8c5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50610ab98a8360200151600001518860018d0360ff1681518110610aac57fe5b6020026020010151611816565b90505b610ac58161189c565b60208301515260005b838a0360ff16811015610b0d57610b05878281518110610aea57fe5b60200260200101518460200151611a2f90919063ffffffff16565b600101610ace565b5060005b8860ff16811015610b4e57610b46868281518110610b2b57fe5b60200260200101518460200151611a4990919063ffffffff16565b600101610b11565b50909f9e505050505050505050505050505050565b600080600061537d610b7c85610140015160ff16611a63565b93509350935093506000841180610b965750846101200151155b8015610ba7575060e0850151518410155b80610bce57508461012001518015610bbd575083155b8015610bce575060e0850151516001145b6040518060400160405280600a815260200169535441434b5f4d414e5960b01b81525090610c3d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50610100850151516040805180820190915260088152674155585f4d414e5960c01b602082015290841015610cb35760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b5060e085015151841115610d7057610cd1610ccc611bd1565b61189c565b610ce286604001516020015161189c565b146040518060400160405280600d81526020016c535441434b5f4d495353494e4760981b81525090610d555760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50610d61856005611c18565b50610d6b85611c8d565b610e30565b61010085015151831115610e0b57610d89610ccc611bd1565b610d9a86604001516040015161189c565b146040518060400160405280600b81526020016a4155585f4d495353494e4760a81b81525090610d555760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b610e158583611c18565b15610e2357610d6b85611c8d565b610e30858263ffffffff16565b84610220015115610ed25760408051600160f81b602080830191909152600060218301819052602280840191909152835180840390910181526042909201835281519101209086015160c001511415610e9557610e908560400151611c98565b610ed2565b6000610220860152604085015160c081015190526101208501518015610eb9575083155b610ec75760e0850151600090525b610100850151600090525b60005b60e086015151811015610f1c57610f148660e00151602001518281518110610ef957fe5b60200260200101518760400151611a2f90919063ffffffff16565b600101610ed5565b5060005b61010086015151811015610f6957610f61866101000151602001518281518110610f4657fe5b60200260200101518760400151611a4990919063ffffffff16565b600101610f20565b505050505050565b6060610f808260000151611ca3565b610f95610f90846020015161189c565b611ca3565b610fa5610f90856040015161189c565b610fb5610f90866060015161189c565b610fc5610f90876080015161189c565b610fd28760a00151611d72565b610fdf8860c00151611ca3565b610fef610f908a60e0015161189c565b60405160200180806709ac2c6d0d2dcca560c31b81525060080189805190602001908083835b602083106110345780518252601f199092019160209182019101611015565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528a516003909101928b0191508083835b6020831061108b5780518252601f19909201916020918201910161106c565b51815160209384036101000a60001901801990921691161790526216100560e91b9190930190815289516003909101928a0191508083835b602083106110e25780518252601f1990920191602091820191016110c3565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528851600390910192890191508083835b602083106111395780518252601f19909201916020918201910161111a565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528751600390910192880191508083835b602083106111905780518252601f199092019160209182019101611171565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528651600390910192870191508083835b602083106111e75780518252601f1990920191602091820191016111c8565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528551600390910192860191508083835b6020831061123e5780518252601f19909201916020918201910161121f565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528451600390910192850191508083835b602083106112955780518252601f199092019160209182019101611276565b6001836020036101000a0380198251168184511680821785525050505050509050018061148560f11b8152506002019850505050505050505060405160208183030381529060405290505b919050565b6112ed615283565b606061132c838460008151811061130057fe5b602001015160f81c60f81b8560018151811061131857fe5b01602001516001600160f81b031916611e4c565b90506060611359848560018151811061134157fe5b602001015160f81c60f81b8660028151811061131857fe5b90506060611386858660028151811061136e57fe5b602001015160f81c60f81b8760038151811061131857fe5b905060606113b3868760038151811061139b57fe5b602001015160f81c60f81b8860048151811061131857fe5b6040805160808101825295865260208601949094529284019190915250606082015292915050565b6000806113e66152ab565b6101c0840151611430576040805162461bcd60e51b815260206004820152601060248201526f72657475726e696e673f3f3f3f3f3f3f60801b604482015290519081900360640190fd5b8360c0015184606001516040518060e001604052806114528860200151611ee9565b81526020016114648860400151611ee9565b8152602001876080015181526020018760a001518152602001876101c001518152602001876101e00151815260200187610200015160001b8152509250925092509193909250565b60006114b66152c9565b835183106114fc576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b6000806115098686611fc3565b91509150611515611fea565b60ff168160ff16141561154957600061152e8784611fef565b90935090508261153d8261205d565b94509450505050611686565b61155161212a565b60ff168160ff16141561157357611568868361212f565b935093505050611686565b61157b6121d1565b60ff168160ff1614156115925761156886836121d6565b61159a612251565b60ff168160ff1614156115c25760006115b38784611fef565b90935090508261153d82612256565b6115ca61234d565b60ff168160ff1614156115e1576115688683612352565b6115e96123e7565b60ff168160ff161015801561160a57506116016123ec565b60ff168160ff16105b156116465760006116196123e7565b82039050606061162a8289866123f1565b90945090508361163982612499565b9550955050505050611686565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b9250929050565b6000611697615312565b61169f615312565b60006101008201819052806116b48787611fef565b90965091506116c38787612352565b602085015295506116d48787612352565b604085015295506116e587876114ac565b606085015295506116f687876114ac565b608085015295506117078787611fef565b60a085015295506117188787611fef565b909650905061172787876114ac565b60e085015291835260c08301529590945092505050565b611746615312565b60405180610120016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361010001518152509050919050565b6117ba6152c9565b6040805160608101825260ff85168152602080820185905282516000808252918101845261180d93830191611805565b6117f26152c9565b8152602001906001900390816117ea5790505b5090526125e9565b90505b92915050565b61181e6152c9565b604080516001808252818301909252606091816020015b61183d6152c9565b815260200190600190039081611835579050509050828160008151811061186057fe5b602002602001018190525061189160405180606001604052808760ff168152602001868152602001838152506125e9565b9150505b9392505050565b60006118a6611fea565b60ff168260a0015160ff1614156118c95781516118c290612686565b90506112e0565b6118d161212a565b60ff168260a0015160ff1614156118ef576118c282602001516126aa565b6118f761234d565b60ff168260a0015160ff16141561191957815160c08301516118c2919061279f565b6119216123e7565b60ff168260a0015160ff16141561195a5761193a6152c9565b61194783604001516127ed565b90506119528161189c565b9150506112e0565b611962612962565b60ff168260a0015160ff16141561197b575080516112e0565b611983612251565b60ff168260a0015160ff1614156119c8575060608082015160408051607b602080830191909152818301939093528151808203830181529301905281519101206112e0565b6119d06121d1565b60ff168260a0015160ff1614156119ee576118c28260800151612967565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b611a3d8260200151826129d4565b82602001819052505050565b611a578260400151826129d4565b82604001819052505050565b6000808061537d60a1851415611a8857506002925060009150600a9050612a526105e9565b60a2851415611aa657506002925060009150600a9050612b066105e9565b60a3851415611ac457506002925060009150600a9050612b986105e9565b60a4851415611ae25750600392506000915060649050612c2a6105e9565b60a5851415611b005750600392506000915060649050612d176105e9565b60a6851415611b1e5750600392506000915060649050612de86105e9565b60f1851415611b3c5750600292506000915060649050612ea76105e9565b60a7851415611b5c57506002925060009150620f4240905061313a6105e9565b60a8851415611b7c57506004925060009150620f424090506134006105e9565b6070851415611b9a57506002925060009150606490506137e86105e9565b60405162461bcd60e51b815260040180806020018281038252602c81526020018061540f602c913960400191505060405180910390fd5b611bd96152c9565b60408051600080825260208201909252611c1391611c0d565b611bfa6152c9565b815260200190600190039081611bf25790505b50612499565b905090565b6000816001600160401b0316836040015160a001511015611c5d575060c0820180516005016001600160401b03169052604082015160001960a0909101526001611810565b5060c0820180516001600160401b039083018116909152604083015160a001805191831690910390526000611810565b600161022090910152565b600161010090910152565b60408051818152606081810183529182919060208201818036833701905050905060005b6020811015611d6b576000848260208110611cde57fe5b1a60f881811b9250601080830480831b9360ff9091169091029003901b611d0482613982565b858560020281518110611d1357fe5b60200101906001600160f81b031916908160001a905350611d3381613982565b858560020260010181518110611d4557fe5b60200101906001600160f81b031916908160001a9053505060019092019150611cc79050565b5092915050565b60608180611d995750506040805180820190915260018152600360fc1b60208201526112e0565b8060005b8115611db157600101600a82049150611d9d565b6060816001600160401b0381118015611dc957600080fd5b506040519080825280601f01601f191660200182016040528015611df4576020820181803683370190505b50905060001982015b8415611e4257600a850660300160f81b82828060019003935081518110611e2057fe5b60200101906001600160f81b031916908160001a905350600a85049450611dfd565b5095945050505050565b606060f883811c9083901c81900360ff169082826001600160401b0381118015611e7557600080fd5b50604051908082528060200260200182016040528015611e9f578160200160208202803683370190505b50905060005b83811015611ede57611ebc888285016020026139b3565b60001b828281518110611ecb57fe5b6020908102919091010152600101611ea5565b509695505050505050565b600060028261010001511415611f01575060006112e0565b60018261010001511415611f17575060016112e0565b81516020830151611f279061189c565b611f34846040015161189c565b611f41856060015161189c565b611f4e866080015161189c565b8660a001518760c00151611f658960e0015161189c565b60405160200180898152602001888152602001878152602001868152602001858152602001848152602001838152602001828152602001985050505050505050506040516020818303038152906040528051906020012090506112e0565b60008082600101848481518110611fd657fe5b016020015190925060f81c90509250929050565b600090565b60008082845110158015612007575060208385510310155b612044576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b6020830161205285856139f3565b915091509250929050565b6120656152c9565b6040805160e08101825283815281516060810183526000808252602080830182905284518281528082018652939490850193908301916120bb565b6120a86152c9565b8152602001906001900390816120a05790505b509052815260200160006040519080825280602002602001820160405280156120fe57816020015b6120eb6152c9565b8152602001906001900390816120e35790505b50815260006020820152604001612113613a4c565b815260006020820152600160409091015292915050565b600190565b60006121396152c9565b826000806121456152c9565b60006121518986611fc3565b90955093506121608986611fc3565b9095509250600160ff851614156121815761217b89866114ac565b90955091505b61218b8986613a83565b9095509050600160ff851614156121b657846121a8848385611816565b965096505050505050611686565b846121c184836117b2565b9650965050505050509250929050565b600e90565b60006121e06152c9565b826000808080806121f18a87613a83565b90965094506122008a87613a83565b909650935061220f8a87611fef565b909650925061221e8a87613a83565b909650915061222d8a87611fef565b9096509050856122408686868686613a94565b975097505050505050509250929050565b600c90565b61225e6152c9565b6040518060e00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b03811180156122a557600080fd5b506040519080825280602002602001820160405280156122df57816020015b6122cc6152c9565b8152602001906001900390816122c45790505b5090528152602001600060405190808252806020026020018201604052801561232257816020015b61230f6152c9565b8152602001906001900390816123075790505b508152602001838152602001612336613a4c565b8152600c6020820152600160409091015292915050565b600290565b600061235c6152c9565b82845110158015612371575060408385510310155b6123ae576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b6000806123bb8686613a83565b90945091506123ca8685611fef565b9094509050836123da8383613bb8565b9350935050509250929050565b600390565b600f90565b60006060828160ff87166001600160401b038111801561241057600080fd5b5060405190808252806020026020018201604052801561244a57816020015b6124376152c9565b81526020019060019003908161242f5790505b50905060005b8760ff168160ff16101561248c5761246887846114ac565b838360ff168151811061247757fe5b60209081029190910101529250600101612450565b5090969095509350505050565b6124a16152c9565b6124ab8251613c84565b6124fc576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b83518110156125335783818151811061251657fe5b602002602001015160c00151820191508080600101915050612501565b506040518060e00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b038111801561257b57600080fd5b506040519080825280602002602001820160405280156125b557816020015b6125a26152c9565b81526020019060019003908161259a5790505b509052815260208101859052600060408201526060016125d3613a4c565b8152600360208201526040019190915292915050565b6125f16152c9565b6040518060e001604052806000815260200183815260200160006001600160401b038111801561262057600080fd5b5060405190808252806020026020018201604052801561265a57816020015b6126476152c9565b81526020019060019003908161263f5790505b5081526000602082015260400161266f613a4c565b815260016020820181905260409091015292915050565b60408051602080820193909352815180820384018152908201909152805191012090565b60006002826040015151106126bb57fe5b60408201515161271e576126cd61212a565b82600001518360200151604051602001808460ff1660f81b81526001018360ff1660f81b815260010182815260200193505050506040516020818303038152906040528051906020012090506112e0565b61272661212a565b826000015161274c846040015160008151811061273f57fe5b602002602001015161189c565b8460200151604051602001808560ff1660f81b81526001018460ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b60006127a96123e7565b8383604051602001808460ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b6127f56152c9565b600882511115612843576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b606082516001600160401b038111801561285c57600080fd5b50604051908082528060200260200182016040528015612886578160200160208202803683370190505b508051909150600160005b828110156128e9576128a886828151811061273f57fe5b8482815181106128b457fe5b6020026020010181815250508581815181106128cc57fe5b602002602001015160c00151820191508080600101915050612891565b506000835184604051602001808360ff1660f81b8152600101828051906020019060200280838360005b8381101561292b578181015183820152602001612913565b50505050905001925050506040516020818303038152906040528051906020012090506129588183613bb8565b9695505050505050565b606490565b60006129716121d1565b8260000151836020015184606001518560800151604051602001808660ff1660f81b815260010185815260200184815260200183815260200182815260200195505050505050604051602081830303815290604052805190602001209050919050565b6129dc6152c9565b6040805160028082526060828101909352816020015b6129fa6152c9565b8152602001906001900390816129f25790505090508281600081518110612a1d57fe5b60200260200101819052508381600181518110612a3657fe5b6020026020010181905250612a4a816127ed565b949350505050565b612a5a6152c9565b612a678260e00151613c8b565b9050612a716152c9565b612a7e8360e00151613c8b565b9050612a8982613ccd565b1580612a9b5750612a9981613ceb565b155b15612ab057612aa983613cf8565b5050612b03565b8151600160401b11612ac557612aa983613cf8565b6000612ae782606001518460000151612ae2876101a001516112e5565b613d01565b9050612aff8460e00151612afa8361205d565b613d23565b5050505b50565b612b0e6152c9565b612b1b8260e00151613c8b565b9050612b256152c9565b612b328360e00151613c8b565b9050612b3d82613ccd565b1580612b4f5750612b4d81613ceb565b155b15612b5d57612aa983613cf8565b815167fffffffffffffff911612b7657612aa983613cf8565b6000612ae782606001518460000151612b93876101a001516112e5565b613d4d565b612ba06152c9565b612bad8260e00151613c8b565b9050612bb76152c9565b612bc48360e00151613c8b565b9050612bcf82613ccd565b1580612be15750612bdf81613ceb565b155b15612bef57612aa983613cf8565b815167ffffffffffffffe111612c0857612aa983613cf8565b6000612ae782606001518460000151612c25876101a001516112e5565b613eac565b612c326152c9565b612c3f8260e00151613c8b565b9050612c496152c9565b612c568360e00151613c8b565b9050612c606152c9565b612c6d8460e00151613c8b565b9050612c7883613ccd565b1580612c8a5750612c8882613fdf565b155b80612c9b5750612c9981613ceb565b155b15612cb157612ca984613cf8565b505050612b03565b8251600160401b111580612cc85750815161010011155b15612cd657612ca984613cf8565b6000612cfd826060015185600001518560000151612cf8896101a001516112e5565b613fea565b9050612d108560e00151612afa83612256565b5050505050565b612d1f6152c9565b612d2c8260e00151613c8b565b9050612d366152c9565b612d438360e00151613c8b565b9050612d4d6152c9565b612d5a8460e00151613c8b565b9050612d6583613ccd565b1580612d775750612d7582613fdf565b155b80612d885750612d8681613ceb565b155b15612d9657612ca984613cf8565b825167fffffffffffffff9111580612db357508151600160401b11155b15612dc157612ca984613cf8565b6000612cfd826060015185600001518560000151612de3896101a001516112e5565b614033565b612df06152c9565b612dfd8260e00151613c8b565b9050612e076152c9565b612e148360e00151613c8b565b9050612e1e6152c9565b612e2b8460e00151613c8b565b9050612e3683613ccd565b1580612e485750612e4682613fdf565b155b80612e595750612e5781613ceb565b155b15612e6757612ca984613cf8565b825167ffffffffffffffe111612e8057612ca984613cf8565b6000612cfd826060015185600001518560000151612ea2896101a001516112e5565b614175565b612eaf6152c9565b612ebc8260e00151613c8b565b9050612ec66152c9565b612ed38360e00151613c8b565b9050612ede81613ceb565b612eeb57612aa983613cf8565b612ef482613fdf565b612f0157612aa983613cf8565b6040805160028082526060828101909352816020015b612f1f6152c9565b815260200190600190039081612f175790505090508181600081518110612f4257fe5b6020026020010181905250612f55611bd1565b81600181518110612f6257fe5b6020026020010181905250612f75615312565b6040805161012081019091527f4932d554b80820e294814bd0674558bd57fa55b750456622dc6e1793390c01ec815260208101612fec612fd77f71b400febf23e3973c60191ccf470be8c754bb923d10851420f550782a6b72c4619249614235565b612fe787612fe78a612fe7611bd1565b614301565b8152602001612ff9611bd1565b8152602001613006611bd1565b8152602001613015600061205d565b8152620f424060208201527fb4c00615f95dc249934075fcc669947596baf6e070ac80a59f79dae98aa932f06040820152606001613051611bd1565b815260200160008152509050613065615312565b60606000613077886101a00151614377565b50935050925092506002825110156130d6576040805162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f756768207761736d20737461636b2072657475726e73000000604482015290519081900360640190fd5b6130f88860e00151836001815181106130eb57fe5b6020026020010151613d23565b61310d8860e00151836000815181106130eb57fe5b61311684611ee9565b6101c089015261312583611ee9565b6101e089015261020088015250505050505050565b6131426152c9565b61314f8260e00151613c8b565b90506131596152c9565b6131668360e00151613c8b565b905061317181613ceb565b61317e57612aa983613cf8565b61318782613fdf565b61319457612aa983613cf8565b6040805160028082526060828101909352816020015b6131b26152c9565b8152602001906001900390816131aa57905050905081816000815181106131d557fe5b60200260200101819052506131e8611bd1565b816001815181106131f557fe5b60200260200101819052506132086152c9565b6132347f97e073b103571a1794a6e51e9ca3464c07686628b9b59f59a0791bd9b3c5329d619249614235565b905061323e615312565b6040518061012001604052807f9035048daf60a7f343b8078730a8859bcccc481f657dadff27411ae58e65b7cb60001b815260200161328784612fe788612fe78b612fe7611bd1565b8152602001613294611bd1565b81526020016132a1611bd1565b81526020016132b0600061205d565b815264e8d4a5100060208201527fb4c00615f95dc249934075fcc669947596baf6e070ac80a59f79dae98aa932f060408201526060016132ee611bd1565b815260200160008152509050613302615312565b60606000613314896101a00151614377565b5093505092509250600582511015613373576040805162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f756768207761736d20737461636b2072657475726e73000000604482015290519081900360640190fd5b6133d28960e00151612afa61338e8560038151811061273f57fe5b61339e8660048151811061273f57fe5b6133bb876004815181106133ae57fe5b60200260200101516146e1565b6133c48d61189c565b6133cd8e6146e1565b613a94565b6133db84611ee9565b6101c08a01526133ea83611ee9565b6101e08a01526102008901525050505050505050565b6134086152c9565b6134158260e00151613c8b565b905061341f6152c9565b61342c8360e00151613c8b565b90506134366152c9565b6134438460e00151613c8b565b905061344d6152c9565b61345a8560e00151613c8b565b905061346582613ceb565b61347b5761347285613cf8565b50505050612b03565b61348483613fdf565b6134915761347285613cf8565b61349a816147e8565b6134a75761347285613cf8565b6040805160028082526060828101909352816020015b6134c56152c9565b8152602001906001900390816134bd57905050905082816000815181106134e857fe5b60200260200101819052506134fb611bd1565b8160018151811061350857fe5b602002602001018190525061351b61537f565b506080820151613529615312565b6040518061012001604052808360000151815260200161356889612fe761355887602001518860400151614235565b612fe78b612fe78e612fe7611bd1565b8152602001613575611bd1565b8152602001613582611bd1565b8152602001613591600061205d565b815264e8d4a5100060208201527fb4c00615f95dc249934075fcc669947596baf6e070ac80a59f79dae98aa932f060408201526060016135cf611bd1565b8152602001600081525090506135e3615312565b606060006135f58b6101a00151614377565b5093505092509250600282511015613654576040805162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f756768207761736d20737461636b2072657475726e73000000604482015290519081900360640190fd5b6136718260018151811061366457fe5b6020026020010151613fdf565b6136b6576040805162461bcd60e51b81526020600482015260116024820152701cdd1858dac81d1bdc081b9bdd081a5b9d607a1b604482015290519081900360640190fd5b6136d3826000815181106136c657fe5b6020026020010151613ceb565b613719576040805162461bcd60e51b815260206004820152601260248201527139ba30b1b5903732bc3a103737ba10313ab360711b604482015290519081900360640190fd5b6137538b60e00151612afa8460008151811061373157fe5b60200260200101518560018151811061374657fe5b6020026020010151614301565b61375c84611ee9565b6101c08c015261376b83611ee9565b6101e08c018190527f50ed09ad2653c0c7bdde6f2ae7fbcaed24f44eed800c8ba4581ef09993f7228d146137d6576040805162461bcd60e51b815260206004820152600d60248201526c195b99081cdd185d1948189859609a1b604482015290519081900360640190fd5b6102008b015250505050505050505050565b6137f06152c9565b6137fd8260e00151613c8b565b90506138076152c9565b6138148360e00151613c8b565b905061381f82613ccd565b1580613831575061382f81613ceb565b155b1561383f57612aa983613cf8565b8151612710108061384f57508151155b1561385d57612aa983613cf8565b8261016001515183610180015114156138d8576138908160600151836000015161388b866101a001516112e5565b6147f5565b156138cf576040805162461bcd60e51b815260206004820152600a602482015269084aa8cbe988a9c8ea8960b31b604482015290519081900360640190fd5b612aa983613cf8565b610180830151825161016085015160006138f3828585614849565b9050806138ff8661189c565b1461393e576040805162461bcd60e51b815260206004820152600a60248201526915d493d391d7d4d1539160b21b604482015290519081900360640190fd5b509091016020908101919091206080850180516040805180860192909252818101939093528251808203840181526060909101909252815191909201209052505050565b6000600a60f883901c10156139a2578160f81c60300160f81b90506112e0565b8160f81c60570160f81b90506112e0565b600080805b60208110156139eb57600882901b915084818501815181106139d657fe5b016020015160f81c91909117906001016139b8565b509392505050565b60008160200183511015613a43576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b613a5461537f565b506040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b6000806020830161205285856139f3565b613a9c6152c9565b6040518060e00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b0381118015613ae357600080fd5b50604051908082528060200260200182016040528015613b1d57816020015b613b0a6152c9565b815260200190600190039081613b025790505b50905281526020016000604051908082528060200260200182016040528015613b6057816020015b613b4d6152c9565b815260200190600190039081613b455790505b5081526020016000801b81526020016040518060a001604052808981526020018881526020018781526020018681526020018581525081526020016003600b0160ff1681526020016001815250905095945050505050565b613bc06152c9565b6040805160e0810182528481528151606081018352600080825260208083018290528451828152808201865293949085019390830191613c16565b613c036152c9565b815260200190600190039081613bfb5790505b50905281526020016000604051908082528060200260200182016040528015613c5957816020015b613c466152c9565b815260200190600190039081613c3e5790505b50815260006020820152604001613c6e613a4c565b8152600260208201526040019290925250919050565b6008101590565b613c936152c9565b613c9b6152c9565b8260200151600184600001510381518110613cb257fe5b60209081029190910101518351600019018452915050919050565b60a081015160009060ff1615801561181057505051600160401b1190565b60a0015160ff16600c1490565b612b0381611c8d565b6000612a4a613d19856020865b04856000015161487b565b6020855b066149e9565b808260200151836000015181518110613d3857fe5b60209081029190910101525080516001019052565b604080516008808252818301909252600091606091906020820181803683370190505090506000613d87866020875b04866000015161487b565b9050602080860660080110613e5a576000613dae876020885b04600101876040015161487b565b905060005b6018601f881660080301811015613e0257613dd4838260208a5b06016149e9565b60f81b848281518110613de357fe5b60200101906001600160f81b031916908160001a905350600101613db3565b506018601f8716600803015b6008811015613e5357613e25826020898401613d1d565b60f81b848281518110613e3457fe5b60200101906001600160f81b031916908160001a905350600101613e0e565b5050613ea3565b60005b6008811015613ea157613e738282602089613dcd565b60f81b838281518110613e8257fe5b60200101906001600160f81b031916908160001a905350600101613e5d565b505b612958826149f6565b604080516020808252818301909252600091606091906020820181803683370190505090506000613edf86602087613d7c565b9050602080860660200110613f98576000613efc87602088613da0565b905060005b601f8716602003811015613f4a57613f1c838260208a613dcd565b60f81b848281518110613f2b57fe5b60200101906001600160f81b031916908160001a905350600101613f01565b50601f86166008035b6020811015613e5357613f6a826020898401613d1d565b60f81b848281518110613f7957fe5b60200101906001600160f81b031916908160001a905350600101613f53565b60005b6020811015613ea157613fb18282602089613dcd565b60f81b838281518110613fc057fe5b60200101906001600160f81b031916908160001a905350600101613f9b565b60a0015160ff161590565b600080613ff986602087613d0e565b9050600061400b826020880687614a2c565b9050600061402788602089048488600001518960200151614a6b565b98975050505050505050565b6000606061404084614b11565b9050600061405087602088613d7c565b90506020808706600801111561412d5760005b6018601f8816600803018110156140a85761409e8260208984010685848151811061408a57fe5b01602001516001600160f81b031916614b7b565b9150600101614063565b506140c2876020885b048387600001518860200151614a6b565b965060006140d288602089613da0565b90506018601f8816600803015b6008811015614109576140ff8260208a84015b0686848151811061408a57fe5b91506001016140df565b5061412588602089046001018388604001518960600151614a6b565b97505061416a565b60005b600881101561415a57614150828260208a5b060185848151811061408a57fe5b9150600101614130565b50614167876020886140b1565b96505b509495945050505050565b6000606061418284614b11565b9050600061419287602088613d7c565b9050602080870660200111156142125760005b601f87166020038110156141ca576141c0828260208a614142565b91506001016141a5565b506141d7876020886140b1565b965060006141e788602089613da0565b9050601f87166020035b6020811015614109576142088260208a84016140f2565b91506001016141f1565b60005b602081101561415a5761422b828260208a614142565b9150600101614215565b61423d6152c9565b6040805160e0810182528481528151606081018352600080825260208083018290528451828152808201865293949085019390830191614293565b6142806152c9565b8152602001906001900390816142785790505b509052815260200160006040519080825280602002602001820160405280156142d657816020015b6142c36152c9565b8152602001906001900390816142bb5790505b508152600060208201526040016142eb613a4c565b8152606460208201526040019290925250919050565b6143096152c9565b6040805160028082526060828101909352816020015b6143276152c9565b81526020019060019003908161431f579050509050838160008151811061434a57fe5b6020026020010181905250828160018151811061436357fe5b6020026020010181905250612a4a81612499565b61437f615312565b6060806000806003865110156143cf576040805162461bcd60e51b815260206004820152601060248201526f7761736d2070726f6f6620656d70747960801b604482015290519081900360640190fd5b6000866000815181106143de57fe5b602001015160f81c60f81b60f81c90506000876001815181106143fd57fe5b602001015160f81c60f81b60f81c905060008860028151811061441c57fe5b016020015160f81c9050600360ff8416607414614480576040805162461bcd60e51b815260206004820152601a60248201527f7761736d2066696e616c207374617465206d7573742068616c74000000000000604482015290519081900360640190fd5b8260040160ff166001600160401b038111801561449c57600080fd5b506040519080825280602002602001820160405280156144d657816020015b6144c36152c9565b8152602001906001900390816144bb5790505b5097508160040160ff166001600160401b03811180156144f557600080fd5b5060405190808252806020026020018201604052801561452f57816020015b61451c6152c9565b8152602001906001900390816145145790505b50965060005b8360ff1681101561456b5761454a8b836114ac565b8a838151811061455657fe5b60209081029190910101529150600101614535565b5060005b8260ff168110156145a5576145848b836114ac565b89838151811061459057fe5b6020908102919091010152915060010161456f565b506145ae615312565b6145b88b8361168d565b809250819350505060008b83815181106145ce57fe5b01602001516001939093019260f81c9050801561461c5760405162461bcd60e51b81526004018080602001828103825260288152602001806153e76028913960400191505060405180910390fd5b6146246152c9565b6146328784600001516117b2565b905061463d8161189c565b8352919a508a9161464e8d85611fef565b9950935060005b82870360ff16811015614690576146888c828151811061467157fe5b602002602001015185611a2f90919063ffffffff16565b600101614655565b5060005b8560ff168110156146cd576146c58b82815181106146ae57fe5b602002602001015185611a4990919063ffffffff16565b600101614694565b849850505050505050505091939590929450565b60006146eb611fea565b60ff168260a0015160ff161415614704575060016112e0565b61470c61212a565b60ff168260a0015160ff161415614725575060016112e0565b61472d61234d565b60ff168260a0015160ff161415614749575060c08101516112e0565b6147516123e7565b60ff168260a0015160ff1614156147825761476a6152c9565b61477783604001516127ed565b9050611952816146e1565b61478a612962565b60ff168260a0015160ff1614156147a6575060c08101516112e0565b6147ae612251565b60ff168260a0015160ff1614156147c7575060016112e0565b6147cf6121d1565b60ff168260a0015160ff1614156119ee575060016112e0565b60a0015160ff16600e1490565b60008061480485602086613d0e565b9050601f84165b60208110156148365761481e82826149e9565b1561482e57600092505050611895565b60010161480b565b5061189185602086048560000151614b97565b600080614861858561485a86614d13565b6001614d3e565b50855190915061189190614876607b84614e12565b614e12565b60008151600014156148e4576148916000612686565b84146148dc576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b506000611895565b6000614903836000815181106148f657fe5b6020026020010151612686565b905060015b835181101561496d5784600116600114156149415761493a84828151811061492c57fe5b602002602001015183614e12565b9150614961565b61495e8285838151811061495157fe5b6020026020010151614e12565b91505b600194851c9401614908565b508481146149ba576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b83156149ca575060009050611895565b826000815181106149d757fe5b60200260200101519150509392505050565b601f036008021c60ff1690565b600080805b8351811015611d6b57600882901b9150838181518110614a1757fe5b016020015160f81c91909117906001016149fb565b60006060614a3985614b11565b90508260f81b818581518110614a4b57fe5b60200101906001600160f81b031916908160001a905350611891816149f6565b60008151600314614ac3576040805162461bcd60e51b815260206004820152601760248201527f4241445f4e4f524d414c495a4154494f4e5f50524f4f46000000000000000000604482015290519081900360640190fd5b6129588686868686600081518110614ad757fe5b602002602001015160001c87600181518110614aef57fe5b602002602001015188600281518110614b0457fe5b6020026020010151614e3e565b6040805160208082528183019092526060918391839160208201818036833701905050905060005b60208110156139eb578260f81b8282601f0381518110614b5557fe5b60200101906001600160f81b031916908160001a90535060089290921c91600101614b39565b60006060614b8885614b11565b905082818581518110614a4b57fe5b6000815160001415614c0057614bad6000612686565b8414614bf8576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b506001611895565b6000614c12836000815181106148f657fe5b905060016060614c206150b8565b905060015b8551811015614cb4578660011660011415614c5e57614c57868281518110614c4957fe5b602002602001015185614e12565b9350614ca8565b614c6e8487838151811061495157fe5b9350828015614ca55750816001820381518110614c8757fe5b6020026020010151868281518110614c9b57fe5b6020026020010151145b92505b600196871c9601614c25565b50868314614d01576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b8515611e425760019350505050611895565b600060018211614d25575060016112e0565b614d3460026001840104614d13565b60020290506112e0565b60008060208411614d925785518510614d6657614d5b6000612686565b600191509150614e09565b6000614d7a614d758888615159565b612686565b905080614d876000612686565b909350149050614e09565b600080614dab886002880489016002895b046000614d3e565b91509150808015614db95750845b15614dd857614dcd88886002890488614d3e565b935093505050614e09565b600080614de88a8a60028b614da3565b91509150614df68285614e12565b818015614e005750835b95509550505050505b94509492505050565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600080614e4a87612686565b9050614e5789898861487b565b506060614e626150b8565b905060018751036001901b8910614f265787614e825789925050506150ad565b6000614e8d8a6151b0565b88519091505b60018203811015614ebb57614eb18c84600184038151811061495157fe5b9b50600101614e93565b5060015b60018203811015614f11578a60011660011415614eef57614ee8836001830381518110614c4957fe5b9350614f05565b614f028484600184038151811061495157fe5b93505b60019a8b1c9a01614ebf565b50614f1c8b84614e12565b93505050506150ad565b60015b8751811015614fa65760008a600116600114614f455783614f5a565b888281518110614f5157fe5b60200260200101515b905060008b600116600114614f8257898381518110614f7557fe5b6020026020010151614f84565b845b9050614f908282614e12565b60019c8d1c9c909550929092019150614f299050565b508715614fb5575090506150ad565b600086614fc3575084615038565b818781518110614fcf57fe5b602002602001015185141561502b576040805162461bcd60e51b815260206004820152601c60248201527f726967687420737562747265652063616e6e6f74206265207a65726f00000000604482015290519081900360640190fd5b6150358686614e12565b90505b80875b60018a5103811015615061576150578285838151811061495157fe5b915060010161503b565b508381146150a7576040805162461bcd60e51b815260206004820152600e60248201526d0caf0e0cac6e8cac840dac2e8c6d60931b604482015290519081900360640190fd5b50925050505b979650505050505050565b604080518181526108208101825260609182919060208201610800803683370190505090506150e76000612686565b816000815181106150f457fe5b602090810291909101015260015b60408110156151535761513482600183038151811061511d57fe5b602002602001015183600184038151811061495157fe5b82828151811061514057fe5b6020908102919091010152600101615102565b50905090565b600080805b60208110156139eb57600882901b9150600081850186511161518157600061519f565b858286018151811061518f57fe5b01602001516001600160f81b0319165b60f81c92909217915060010161515e565b6000816151bf575060016112e0565b6151cc600183901c6151b0565b60010190506112e0565b60405180610240016040528060006001600160a01b031681526020016151fa615312565b8152602001615207615312565b81526000602082018190526040820181905260608201819052608082015260a0016152306153ad565b815260200161523d6153ad565b81526000602082018190526040820181905260608083018190526080830182905260a083015260c0820181905260e0820181905261010082018190526101209091015290565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b6040518060e001604052806007906020820280368337509192915050565b6040518060e00160405280600081526020016152e36153c7565b815260606020820181905260006040830152016152fe61537f565b815260006020820181905260409091015290565b604080516101208101909152600081526020810161532e6152c9565b815260200161533b6152c9565b81526020016153486152c9565b81526020016153556152c9565b815260006020820181905260408201526060016153706152c9565b8152602001600081525090565bfe5b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b604051806040016040528060008152602001606081525090565b604080516060808201835260008083526020830152918101919091529056fe7761736d2066696e616c20696e737472756374696f6e2063616e6e6f74206861766520696d6d656475736520616e6f7468657220636f6e747261637420746f2068616e646c65206f74686572206f70636f646573a2646970667358221220fadea0b9e3a38f866db86a3ebe0d2a68e867bf5cdfc895cb176775248d6827fd64736f6c634300060c0033"

// DeployOneStepProof2 deploys a new Ethereum contract, binding an instance of OneStepProof2 to it.
func DeployOneStepProof2(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OneStepProof2, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OneStepProof2Bin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// OneStepProof2 is an auto generated Go binding around an Ethereum contract.
type OneStepProof2 struct {
	OneStepProof2Caller     // Read-only binding to the contract
	OneStepProof2Transactor // Write-only binding to the contract
	OneStepProof2Filterer   // Log filterer for contract events
}

// OneStepProof2Caller is an auto generated read-only Go binding around an Ethereum contract.
type OneStepProof2Caller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Transactor is an auto generated write-only Go binding around an Ethereum contract.
type OneStepProof2Transactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Filterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneStepProof2Filterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Session is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneStepProof2Session struct {
	Contract     *OneStepProof2    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneStepProof2CallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneStepProof2CallerSession struct {
	Contract *OneStepProof2Caller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// OneStepProof2TransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneStepProof2TransactorSession struct {
	Contract     *OneStepProof2Transactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// OneStepProof2Raw is an auto generated low-level Go binding around an Ethereum contract.
type OneStepProof2Raw struct {
	Contract *OneStepProof2 // Generic contract binding to access the raw methods on
}

// OneStepProof2CallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneStepProof2CallerRaw struct {
	Contract *OneStepProof2Caller // Generic read-only contract binding to access the raw methods on
}

// OneStepProof2TransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneStepProof2TransactorRaw struct {
	Contract *OneStepProof2Transactor // Generic write-only contract binding to access the raw methods on
}

// NewOneStepProof2 creates a new instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2(address common.Address, backend bind.ContractBackend) (*OneStepProof2, error) {
	contract, err := bindOneStepProof2(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// NewOneStepProof2Caller creates a new read-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Caller(address common.Address, caller bind.ContractCaller) (*OneStepProof2Caller, error) {
	contract, err := bindOneStepProof2(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Caller{contract: contract}, nil
}

// NewOneStepProof2Transactor creates a new write-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Transactor(address common.Address, transactor bind.ContractTransactor) (*OneStepProof2Transactor, error) {
	contract, err := bindOneStepProof2(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Transactor{contract: contract}, nil
}

// NewOneStepProof2Filterer creates a new log filterer instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Filterer(address common.Address, filterer bind.ContractFilterer) (*OneStepProof2Filterer, error) {
	contract, err := bindOneStepProof2(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Filterer{contract: contract}, nil
}

// bindOneStepProof2 binds a generic wrapper to an already deployed contract.
func bindOneStepProof2(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2Raw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.OneStepProof2Caller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2Raw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2Raw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2CallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[7] fields)
func (_OneStepProof2 *OneStepProof2Caller) ExecuteStep(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [7][32]byte
}, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "executeStep", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		Gas               uint64
		TotalMessagesRead *big.Int
		Fields            [7][32]byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Gas = *abi.ConvertType(out[0], new(uint64)).(*uint64)
	outstruct.TotalMessagesRead = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Fields = *abi.ConvertType(out[2], new([7][32]byte)).(*[7][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[7] fields)
func (_OneStepProof2 *OneStepProof2Session) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [7][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[7] fields)
func (_OneStepProof2 *OneStepProof2CallerSession) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [7][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof2 *OneStepProof2Caller) ExecuteStepDebug(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "executeStepDebug", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		StartMachine string
		AfterMachine string
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.StartMachine = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.AfterMachine = *abi.ConvertType(out[1], new(string)).(*string)

	return *outstruct, err

}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof2 *OneStepProof2Session) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof2.Contract.ExecuteStepDebug(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof2 *OneStepProof2CallerSession) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof2.Contract.ExecuteStepDebug(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Caller) ParseProof(opts *bind.CallOpts, proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "parseProof", proof)

	if err != nil {
		return *new([][32]byte), *new([][32]byte), *new([][32]byte), *new([][32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([][32]byte)).(*[][32]byte)
	out1 := *abi.ConvertType(out[1], new([][32]byte)).(*[][32]byte)
	out2 := *abi.ConvertType(out[2], new([][32]byte)).(*[][32]byte)
	out3 := *abi.ConvertType(out[3], new([][32]byte)).(*[][32]byte)

	return out0, out1, out2, out3, err

}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Session) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2CallerSession) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}
