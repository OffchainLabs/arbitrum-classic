// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OneStepProof2ABI is the input ABI used to generate the binding from.
const OneStepProof2ABI = "[{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[4]\",\"name\":\"fields\",\"type\":\"bytes32[4]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStepDebug\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"startMachine\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"afterMachine\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"parseProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// OneStepProof2FuncSigs maps the 4-byte function signature to its string representation.
var OneStepProof2FuncSigs = map[string]string{
	"9d16dd04": "executeStep(address,uint256,bytes32[2],bytes,bytes)",
	"2ccebb7a": "executeStepDebug(address,uint256,bytes32[2],bytes,bytes)",
	"793deea3": "parseProof(bytes)",
}

// OneStepProof2Bin is the compiled bytecode used for deploying new contracts.
var OneStepProof2Bin = "0x608060405234801561001057600080fd5b506142d5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632ccebb7a14610046578063793deea3146101fd5780639d16dd04146103c4575b600080fd5b61011f600480360360c081101561005c57600080fd5b6001600160a01b038235169160208101359160408201919081019060a081016080820135600160201b81111561009157600080fd5b8201836020820111156100a357600080fd5b803590602001918460018302840111600160201b831117156100c457600080fd5b919390929091602081019035600160201b8111156100e157600080fd5b8201836020820111156100f357600080fd5b803590602001918460018302840111600160201b8311171561011457600080fd5b5090925090506104ef565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610160578181015183820152602001610148565b50505050905090810190601f16801561018d5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101c05781810151838201526020016101a8565b50505050905090810190601f1680156101ed5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6102a16004803603602081101561021357600080fd5b810190602081018135600160201b81111561022d57600080fd5b82018360208201111561023f57600080fd5b803590602001918460018302840111600160201b8311171561026057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105b4945050505050565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b838110156102ed5781810151838201526020016102d5565b50505050905001858103845288818151815260200191508051906020019060200280838360005b8381101561032c578181015183820152602001610314565b50505050905001858103835287818151815260200191508051906020019060200280838360005b8381101561036b578181015183820152602001610353565b50505050905001858103825286818151815260200191508051906020019060200280838360005b838110156103aa578181015183820152602001610392565b505050509050019850505050505050505060405180910390f35b61049d600480360360c08110156103da57600080fd5b6001600160a01b038235169160208101359160408201919081019060a081016080820135600160201b81111561040f57600080fd5b82018360208201111561042157600080fd5b803590602001918460018302840111600160201b8311171561044257600080fd5b919390929091602081019035600160201b81111561045f57600080fd5b82018360208201111561047157600080fd5b803590602001918460018302840111600160201b8311171561049257600080fd5b5090925090506105f0565b60405180846001600160401b0316815260200183815260200182600460200280838360005b838110156104da5781810151838201526020016104c2565b50505050905001935050505060405180910390f35b6060806104fa6140b4565b61057e898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600081840152601f19601f820116905080830192505050505050508e6106af565b905061058981610b63565b6105968160200151610f71565b92506105a58160400151610f71565b91505097509795505050505050565b6060806060806105c261414a565b6105cb866112e5565b80516020820151604083015160609093015191975095509093509150505b9193509193565b6000806105fb614172565b6106036140b4565b6106878a8a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b9081908401838280828437600081840152601f19601f820116905080830192505050505050508f6106af565b905061069281610b63565b61069b816113db565b935093509350509750975097945050505050565b6106b76140b4565b6000846000815181106106c657fe5b602001015160f81c60f81b60f81c90506000856001815181106106e557fe5b602001015160f81c60f81b60f81c905060008660028151811061070457fe5b016020015160f81c9050600360606004840160ff166001600160401b038111801561072e57600080fd5b5060405190808252806020026020018201604052801561076857816020015b610755614190565b81526020019060019003908161074d5790505b50905060608360040160ff166001600160401b038111801561078957600080fd5b506040519080825280602002602001820160405280156107c357816020015b6107b0614190565b8152602001906001900390816107a85790505b50905060005b8560ff168110156107ff576107de8b8561143e565b8483815181106107ea57fe5b602090810291909101015293506001016107c9565b5060005b8460ff16811015610839576108188b8561143e565b83838151811061082457fe5b60209081029190910101529350600101610803565b506108426141cd565b61084c8b85611612565b809250819550505060008b858151811061086257fe5b01602001516001959095019460f81c905061087b6140b4565b6001600160a01b038b16815260208101839052610897836116c3565b6040820152606081018f90528d6000602002013560808201528d60016020908102919091013560a0830152600060c0830181905260408051808201825260ff8c811682528185018a905260e086019190915281518083019092528a8116825292810187905261010084015283821660018114610120850152918b1661014084015261016083018f90526101a083018e90526101c08301526101808201879052158061094557508160ff166001145b6040518060400160405280600b81526020016a04241445f494d4d5f5459560ac1b815250906109f25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109b757818101518382015260200161099f565b50505050905090810190601f1680156109e45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506109fb614190565b60ff8316610a1c57610a158a836020015160000151611737565b9050610abc565b6000865111604051806040016040528060068152602001654e4f5f494d4d60d01b81525090610a8c5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50610ab98a8360200151600001518860018d0360ff1681518110610aac57fe5b602002602001015161179b565b90505b610ac581611821565b60208301515260005b838a0360ff16811015610b0d57610b05878281518110610aea57fe5b6020026020010151846020015161198e90919063ffffffff16565b600101610ace565b5060005b8860ff16811015610b4e57610b46868281518110610b2b57fe5b602002602001015184602001516119a890919063ffffffff16565b600101610b11565b50909f9e505050505050505050505050505050565b6000806000614238610b7c85610140015160ff166119c2565b93509350935093506000841180610b965750846101200151155b8015610ba7575060e0850151518410155b80610bce57508461012001518015610bbd575083155b8015610bce575060e0850151516001145b6040518060400160405280600a815260200169535441434b5f4d414e5960b01b81525090610c3d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50610100850151516040805180820190915260088152674155585f4d414e5960c01b602082015290841015610cb35760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b5060e085015151841115610d7057610cd1610ccc611ad4565b611821565b610ce2866040015160200151611821565b146040518060400160405280600d81526020016c535441434b5f4d495353494e4760981b81525090610d555760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50610d61856005611b1b565b50610d6b85611b90565b610e30565b61010085015151831115610e0b57610d89610ccc611ad4565b610d9a866040015160400151611821565b146040518060400160405280600b81526020016a4155585f4d495353494e4760a81b81525090610d555760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b610e158583611b1b565b15610e2357610d6b85611b90565b610e30858263ffffffff16565b846101c0015115610ed25760408051600160f81b602080830191909152600060218301819052602280840191909152835180840390910181526042909201835281519101209086015160c001511415610e9557610e908560400151611b9b565b610ed2565b60006101c0860152604085015160c081015190526101208501518015610eb9575083155b610ec75760e0850151600090525b610100850151600090525b60005b60e086015151811015610f1c57610f148660e00151602001518281518110610ef957fe5b6020026020010151876040015161198e90919063ffffffff16565b600101610ed5565b5060005b61010086015151811015610f6957610f61866101000151602001518281518110610f4657fe5b602002602001015187604001516119a890919063ffffffff16565b600101610f20565b505050505050565b6060610f808260000151611ba6565b610f95610f908460200151611821565b611ba6565b610fa5610f908560400151611821565b610fb5610f908660600151611821565b610fc5610f908760800151611821565b610fd28760a00151611c75565b610fdf8860c00151611ba6565b610fef610f908a60e00151611821565b60405160200180806709ac2c6d0d2dcca560c31b81525060080189805190602001908083835b602083106110345780518252601f199092019160209182019101611015565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528a516003909101928b0191508083835b6020831061108b5780518252601f19909201916020918201910161106c565b51815160209384036101000a60001901801990921691161790526216100560e91b9190930190815289516003909101928a0191508083835b602083106110e25780518252601f1990920191602091820191016110c3565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528851600390910192890191508083835b602083106111395780518252601f19909201916020918201910161111a565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528751600390910192880191508083835b602083106111905780518252601f199092019160209182019101611171565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528651600390910192870191508083835b602083106111e75780518252601f1990920191602091820191016111c8565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528551600390910192860191508083835b6020831061123e5780518252601f19909201916020918201910161121f565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528451600390910192850191508083835b602083106112955780518252601f199092019160209182019101611276565b6001836020036101000a0380198251168184511680821785525050505050509050018061148560f11b8152506002019850505050505050505060405160208183030381529060405290505b919050565b6112ed61414a565b606061132c838460008151811061130057fe5b602001015160f81c60f81b8560018151811061131857fe5b01602001516001600160f81b031916611d4f565b90506060611359848560018151811061134157fe5b602001015160f81c60f81b8660028151811061131857fe5b90506060611386858660028151811061136e57fe5b602001015160f81c60f81b8760038151811061131857fe5b905060606113b3868760038151811061139b57fe5b602001015160f81c60f81b8860048151811061131857fe5b6040805160808101825295865260208601949094529284019190915250606082015292915050565b6000806113e6614172565b8360c00151846060015160405180608001604052806114088860200151611dec565b815260200161141a8860400151611dec565b8152602001876080015181526020018760a001518152509250925092509193909250565b6000611448614190565b8351831061148e576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b60008061149b8686611ec6565b915091506114a7611eed565b60ff168160ff1614156114db5760006114c08784611ef2565b9093509050826114cf82611f60565b9450945050505061160b565b6114e3612020565b60ff168160ff161415611505576114fa8683612025565b93509350505061160b565b61150d6120c7565b60ff168160ff1614156115545760006115268784611ef2565b909350905060006115378885611ef2565b90945090508361154782846120cc565b955095505050505061160b565b61155c6121b7565b60ff168160ff161415611573576114fa86836121bc565b61157b612251565b60ff168160ff161015801561159c5750611593612256565b60ff168160ff16105b156115cb5760006115ab612251565b8203905060606115bc82898661225b565b90945090508361154782612303565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b9250929050565b600061161c6141cd565b6116246141cd565b60006101008201819052806116398787611ef2565b909650915061164887876121bc565b6020850152955061165987876121bc565b6040850152955061166a878761143e565b6060850152955061167b878761143e565b6080850152955061168c8787611ef2565b60a0850152955061169d8787611ef2565b90965090506116ac878761143e565b60e085015291835260c08301529590945092505050565b6116cb6141cd565b60405180610120016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361010001518152509050919050565b61173f614190565b6040805160608101825260ff8516815260208082018590528251600080825291810184526117929383019161178a565b611777614190565b81526020019060019003908161176f5790505b509052612444565b90505b92915050565b6117a3614190565b604080516001808252818301909252606091816020015b6117c2614190565b8152602001906001900390816117ba57905050905082816000815181106117e557fe5b602002602001018190525061181660405180606001604052808760ff16815260200186815260200183815250612444565b9150505b9392505050565b600061182b611eed565b60ff16826080015160ff16141561184e578151611847906124d4565b90506112e0565b611856612020565b60ff16826080015160ff1614156118745761184782602001516124f8565b61187c6121b7565b60ff16826080015160ff16141561189e57815160a083015161184791906125ed565b6118a6612251565b60ff16826080015160ff1614156118df576118bf614190565b6118cc836040015161263b565b90506118d781611821565b9150506112e0565b6118e76127b0565b60ff16826080015160ff161415611900575080516112e0565b6119086120c7565b60ff16826080015160ff16141561194d575060608082015160408051607b602080830191909152818301939093528151808203830181529301905281519101206112e0565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b61199c8260200151826127b5565b82602001819052505050565b6119b68260400151826127b5565b82604001819052505050565b6000808061423860a18514156119e757506002925060009150600390506128336105e9565b60a2851415611a0557506002925060009150600390506128e76105e9565b60a3851415611a2357506002925060009150600390506129796105e9565b60a4851415611a415750600392506000915060f09050612a0b6105e9565b60a5851415611a60575060039250600091506101e09050612b436105e9565b60a6851415611a7f575060039250600091506101e09050612c736105e9565b6070851415611a9d5750600292506000915060649050612d896105e9565b60405162461bcd60e51b815260040180806020018281038252602c815260200180614274602c913960400191505060405180910390fd5b611adc614190565b60408051600080825260208201909252611b1691611b10565b611afd614190565b815260200190600190039081611af55790505b50612303565b905090565b6000816001600160401b0316836040015160a001511015611b60575060c0820180516005016001600160401b03169052604082015160001960a0909101526001611795565b5060c0820180516001600160401b039083018116909152604083015160a001805191831690910390526000611795565b60016101c090910152565b600161010090910152565b60408051818152606081810183529182919060208201818036833701905050905060005b6020811015611c6e576000848260208110611be157fe5b1a60f881811b9250601080830480831b9360ff9091169091029003901b611c0782612f23565b858560020281518110611c1657fe5b60200101906001600160f81b031916908160001a905350611c3681612f23565b858560020260010181518110611c4857fe5b60200101906001600160f81b031916908160001a9053505060019092019150611bca9050565b5092915050565b60608180611c9c5750506040805180820190915260018152600360fc1b60208201526112e0565b8060005b8115611cb457600101600a82049150611ca0565b6060816001600160401b0381118015611ccc57600080fd5b506040519080825280601f01601f191660200182016040528015611cf7576020820181803683370190505b50905060001982015b8415611d4557600a850660300160f81b82828060019003935081518110611d2357fe5b60200101906001600160f81b031916908160001a905350600a85049450611d00565b5095945050505050565b606060f883811c9083901c81900360ff169082826001600160401b0381118015611d7857600080fd5b50604051908082528060200260200182016040528015611da2578160200160208202803683370190505b50905060005b83811015611de157611dbf88828501602002612f54565b60001b828281518110611dce57fe5b6020908102919091010152600101611da8565b509695505050505050565b600060028261010001511415611e04575060006112e0565b60018261010001511415611e1a575060016112e0565b81516020830151611e2a90611821565b611e378460400151611821565b611e448560600151611821565b611e518660800151611821565b8660a001518760c00151611e688960e00151611821565b60405160200180898152602001888152602001878152602001868152602001858152602001848152602001838152602001828152602001985050505050505050506040516020818303038152906040528051906020012090506112e0565b60008082600101848481518110611ed957fe5b016020015190925060f81c90509250929050565b600090565b60008082845110158015611f0a575060208385510310155b611f47576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b60208301611f558585612f94565b915091509250929050565b611f68614190565b6040805160c0810182528381528151606081018352600080825260208083018290528451828152808201865293949085019390830191611fbe565b611fab614190565b815260200190600190039081611fa35790505b5090528152602001600060405190808252806020026020018201604052801561200157816020015b611fee614190565b815260200190600190039081611fe65790505b5081526000602082018190526040820152600160609091015292915050565b600190565b600061202f614190565b8260008061203b614190565b60006120478986611ec6565b90955093506120568986611ec6565b9095509250600160ff8516141561207757612071898661143e565b90955091505b6120818986612fed565b9095509050600160ff851614156120ac578461209e84838561179b565b96509650505050505061160b565b846120b78483611737565b9650965050505050509250929050565b600c90565b6120d4614190565b6040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b038111801561211b57600080fd5b5060405190808252806020026020018201604052801561215557816020015b612142614190565b81526020019060019003908161213a5790505b5090528152602001600060405190808252806020026020018201604052801561219857816020015b612185614190565b81526020019060019003908161217d5790505b50815260208101859052600c6040820152606001839052905092915050565b600290565b60006121c6614190565b828451101580156121db575060408385510310155b612218576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b6000806122258686612fed565b90945091506122348685611ef2565b9094509050836122448383612ffe565b9350935050509250929050565b600390565b600d90565b60006060828160ff87166001600160401b038111801561227a57600080fd5b506040519080825280602002602001820160405280156122b457816020015b6122a1614190565b8152602001906001900390816122995790505b50905060005b8760ff168160ff1610156122f6576122d2878461143e565b838360ff16815181106122e157fe5b602090810291909101015292506001016122ba565b5090969095509350505050565b61230b614190565b61231582516130bd565b612366576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b835181101561239d5783818151811061238057fe5b602002602001015160a0015182019150808060010191505061236b565b506040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b03811180156123e557600080fd5b5060405190808252806020026020018201604052801561241f57816020015b61240c614190565b8152602001906001900390816124045790505b5090528152602081019490945260006040850152600360608501526080909301525090565b61244c614190565b6040518060c001604052806000815260200183815260200160006001600160401b038111801561247b57600080fd5b506040519080825280602002602001820160405280156124b557816020015b6124a2614190565b81526020019060019003908161249a5790505b5081526000602082015260016040820181905260609091015292915050565b60408051602080820193909352815180820384018152908201909152805191012090565b600060028260400151511061250957fe5b60408201515161256c5761251b612020565b82600001518360200151604051602001808460ff1660f81b81526001018360ff1660f81b815260010182815260200193505050506040516020818303038152906040528051906020012090506112e0565b612574612020565b826000015161259a846040015160008151811061258d57fe5b6020026020010151611821565b8460200151604051602001808560ff1660f81b81526001018460ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b60006125f7612251565b8383604051602001808460ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b612643614190565b600882511115612691576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b606082516001600160401b03811180156126aa57600080fd5b506040519080825280602002602001820160405280156126d4578160200160208202803683370190505b508051909150600160005b82811015612737576126f686828151811061258d57fe5b84828151811061270257fe5b60200260200101818152505085818151811061271a57fe5b602002602001015160a001518201915080806001019150506126df565b506000835184604051602001808360ff1660f81b8152600101828051906020019060200280838360005b83811015612779578181015183820152602001612761565b50505050905001925050506040516020818303038152906040528051906020012090506127a68183612ffe565b9695505050505050565b606490565b6127bd614190565b6040805160028082526060828101909352816020015b6127db614190565b8152602001906001900390816127d357905050905082816000815181106127fe57fe5b6020026020010181905250838160018151811061281757fe5b602002602001018190525061282b8161263b565b949350505050565b61283b614190565b6128488260e001516130c4565b9050612852614190565b61285f8360e001516130c4565b905061286a82613106565b158061287c575061287a81613124565b155b156128915761288a83613131565b50506128e4565b8151600160401b116128a65761288a83613131565b60006128c8826060015184600001516128c3876101a001516112e5565b61313a565b90506128e08460e001516128db83611f60565b61315c565b5050505b50565b6128ef614190565b6128fc8260e001516130c4565b9050612906614190565b6129138360e001516130c4565b905061291e82613106565b1580612930575061292e81613124565b155b1561293e5761288a83613131565b815167fffffffffffffff9116129575761288a83613131565b60006128c882606001518460000151612974876101a001516112e5565b613186565b612981614190565b61298e8260e001516130c4565b9050612998614190565b6129a58360e001516130c4565b90506129b082613106565b15806129c257506129c081613124565b155b156129d05761288a83613131565b815167ffffffffffffffe1116129e95761288a83613131565b60006128c882606001518460000151612a06876101a001516112e5565b6132e5565b612a13614190565b612a208260e001516130c4565b9050612a2a614190565b612a378360e001516130c4565b9050612a41614190565b612a4e8460e001516130c4565b9050612a5983613106565b1580612a6b5750612a6982613418565b155b80612a7c5750612a7a81613124565b155b15612a9257612a8a84613131565b5050506128e4565b8251600160401b111580612aa95750815161010011155b15612ab757612a8a84613131565b612acd84612ac88360a00151613423565b611b1b565b15612af05760c08401805160ef19016001600160401b03169052612a8a84611b90565b6000612b17826060015185600001518560000151612b12896101a001516112e5565b613440565b9050612b3c8560e001516128db83612b378660a001518960000151613489565b6120cc565b5050505050565b612b4b614190565b612b588260e001516130c4565b9050612b62614190565b612b6f8360e001516130c4565b9050612b79614190565b612b868460e001516130c4565b9050612b9183613106565b1580612ba35750612ba182613418565b155b80612bb45750612bb281613124565b155b15612bc257612a8a84613131565b825167fffffffffffffff9111580612bdf57508151600160401b11155b15612bed57612a8a84613131565b612c0684612bfe8360a00151613423565b600202611b1b565b15612c295760c08401805160ef19016001600160401b03169052612a8a84611b90565b6000612c50826060015185600001518560000151612c4b896101a001516112e5565b6134a1565b9050612b3c8560e001516128db83612b378660a001518960000151600701613489565b612c7b614190565b612c888260e001516130c4565b9050612c92614190565b612c9f8360e001516130c4565b9050612ca9614190565b612cb68460e001516130c4565b9050612cc183613106565b1580612cd35750612cd182613418565b155b80612ce45750612ce281613124565b155b15612cf257612a8a84613131565b825167ffffffffffffffe111612d0b57612a8a84613131565b612d1c84612bfe8360a00151613423565b15612d3f5760c08401805160ef19016001600160401b03169052612a8a84611b90565b6000612d66826060015185600001518560000151612d61896101a001516112e5565b6135ea565b9050612b3c8560e001516128db83612b378660a001518960000151601f01613489565b612d91614190565b612d9e8260e001516130c4565b9050612da8614190565b612db58360e001516130c4565b9050612dc082613106565b1580612dd25750612dd081613124565b155b15612de05761288a83613131565b81516127101080612df057508151155b15612dfe5761288a83613131565b826101600151518361018001511415612e7957612e3181606001518360000151612e2c866101a001516112e5565b6136bc565b15612e70576040805162461bcd60e51b815260206004820152600a602482015269084aa8cbe988a9c8ea8960b31b604482015290519081900360640190fd5b61288a83613131565b61018083015182516101608501516000612e94828585613710565b905080612ea086611821565b14612edf576040805162461bcd60e51b815260206004820152600a60248201526915d493d391d7d4d1539160b21b604482015290519081900360640190fd5b509091016020908101919091206080850180516040805180860192909252818101939093528251808203840181526060909101909252815191909201209052505050565b6000600a60f883901c1015612f43578160f81c60300160f81b90506112e0565b8160f81c60570160f81b90506112e0565b600080805b6020811015612f8c57600882901b91508481850181518110612f7757fe5b016020015160f81c9190911790600101612f59565b509392505050565b60008160200183511015612fe4576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b60008060208301611f558585612f94565b613006614190565b6040805160c081018252848152815160608101835260008082526020808301829052845182815280820186529394908501939083019161305c565b613049614190565b8152602001906001900390816130415790505b5090528152602001600060405190808252806020026020018201604052801561309f57816020015b61308c614190565b8152602001906001900390816130845790505b50815260006020820152600260408201526060019290925250919050565b6008101590565b6130cc614190565b6130d4614190565b82602001516001846000015103815181106130eb57fe5b60209081029190910101518351600019018452915050919050565b608081015160009060ff1615801561179557505051600160401b1190565b6080015160ff16600c1490565b6128e481611b90565b600061282b613152856020865b048560000151613742565b6020855b066138b0565b80826020015183600001518151811061317157fe5b60209081029190910101525080516001019052565b6040805160088082528183019092526000916060919060208201818036833701905050905060006131c0866020875b048660000151613742565b90506020808606600801106132935760006131e7876020885b046001018760400151613742565b905060005b6018601f88166008030181101561323b5761320d838260208a5b06016138b0565b60f81b84828151811061321c57fe5b60200101906001600160f81b031916908160001a9053506001016131ec565b506018601f8716600803015b600881101561328c5761325e826020898401613156565b60f81b84828151811061326d57fe5b60200101906001600160f81b031916908160001a905350600101613247565b50506132dc565b60005b60088110156132da576132ac8282602089613206565b60f81b8382815181106132bb57fe5b60200101906001600160f81b031916908160001a905350600101613296565b505b6127a6826138bd565b604080516020808252818301909252600091606091906020820181803683370190505090506000613318866020876131b5565b90506020808606602001106133d1576000613335876020886131d9565b905060005b601f871660200381101561338357613355838260208a613206565b60f81b84828151811061336457fe5b60200101906001600160f81b031916908160001a90535060010161333a565b50601f86166008035b602081101561328c576133a3826020898401613156565b60f81b8482815181106133b257fe5b60200101906001600160f81b031916908160001a90535060010161338c565b60005b60208110156132da576133ea8282602089613206565b60f81b8382815181106133f957fe5b60200101906001600160f81b031916908160001a9053506001016133d4565b6080015160ff161590565b60006104008204815b811561181a5760500160088204915061342c565b60008061344f86602087613147565b905060006134618260208806876138f3565b9050600061347d88602089048488600001518960200151613932565b98975050505050505050565b60008183111561349a575081611795565b5080611795565b600060606134ae846139d8565b905060006134be876020886131b5565b9050602080870660080111156135a05760005b6018601f8816600803018110156135195761350f826020898401068584601801815181106134fb57fe5b01602001516001600160f81b031916613a42565b91506001016134d1565b50613533876020885b048387600001518860200151613932565b96506000613543886020896131d9565b90506018601f8816600803015b600881101561357c576135728260208a8401068684601801815181106134fb57fe5b9150600101613550565b5061359888602089046001018388604001518960600151613932565b9750506135df565b60005b60088110156135cf576135c5828260208a06018584601801815181106134fb57fe5b91506001016135a3565b506135dc87602088613522565b96505b509495945050505050565b600060606135f7846139d8565b90506000613607876020886131b5565b9050602080870660200111156136995760005b601f87166020038110156136495761363f828260208a5b06018584815181106134fb57fe5b915060010161361a565b5061365687602088613522565b96506000613666886020896131d9565b9050601f87166020035b602081101561357c5761368f8260208a8401068684815181106134fb57fe5b9150600101613670565b60005b60208110156135cf576136b2828260208a613631565b915060010161369c565b6000806136cb85602086613147565b9050601f84165b60208110156136fd576136e582826138b0565b156136f55760009250505061181a565b6001016136d2565b5061181685602086048560000151613a5e565b600080613728858561372186613bda565b6001613c05565b5085519091506118169061373d607b84613cd9565b613cd9565b60008151600014156137ab5761375860006124d4565b84146137a3576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b50600061181a565b60006137ca836000815181106137bd57fe5b60200260200101516124d4565b905060015b8351811015613834578460011660011415613808576138018482815181106137f357fe5b602002602001015183613cd9565b9150613828565b6138258285838151811061381857fe5b6020026020010151613cd9565b91505b600194851c94016137cf565b50848114613881576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b831561389157506000905061181a565b8260008151811061389e57fe5b60200260200101519150509392505050565b601f036008021c60ff1690565b600080805b8351811015611c6e57600882901b91508381815181106138de57fe5b016020015160f81c91909117906001016138c2565b60006060613900856139d8565b90508260f81b81858151811061391257fe5b60200101906001600160f81b031916908160001a905350611816816138bd565b6000815160031461398a576040805162461bcd60e51b815260206004820152601760248201527f4241445f4e4f524d414c495a4154494f4e5f50524f4f46000000000000000000604482015290519081900360640190fd5b6127a6868686868660008151811061399e57fe5b602002602001015160001c876001815181106139b657fe5b6020026020010151886002815181106139cb57fe5b6020026020010151613d05565b6040805160208082528183019092526060918391839160208201818036833701905050905060005b6020811015612f8c578260f81b8282601f0381518110613a1c57fe5b60200101906001600160f81b031916908160001a90535060089290921c91600101613a00565b60006060613a4f856139d8565b90508281858151811061391257fe5b6000815160001415613ac757613a7460006124d4565b8414613abf576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b50600161181a565b6000613ad9836000815181106137bd57fe5b905060016060613ae7613f96565b905060015b8551811015613b7b578660011660011415613b2557613b1e868281518110613b1057fe5b602002602001015185613cd9565b9350613b6f565b613b358487838151811061381857fe5b9350828015613b6c5750816001820381518110613b4e57fe5b6020026020010151868281518110613b6257fe5b6020026020010151145b92505b600196871c9601613aec565b50868314613bc8576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b8515611d45576001935050505061181a565b600060018211613bec575060016112e0565b613bfb60026001840104613bda565b60020290506112e0565b60008060208411613c595785518510613c2d57613c2260006124d4565b600191509150613cd0565b6000613c41613c3c8888614037565b6124d4565b905080613c4e60006124d4565b909350149050613cd0565b600080613c72886002880489016002895b046000613c05565b91509150808015613c805750845b15613c9f57613c9488886002890488613c05565b935093505050613cd0565b600080613caf8a8a60028b613c6a565b91509150613cbd8285613cd9565b818015613cc75750835b95509550505050505b94509492505050565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600080613d11876124d4565b9050613d1e898988613742565b506060613d29613f96565b905060018751036001901b8910613ded5787613d49578992505050613f8b565b6000613d548a61408e565b88519091505b60018203811015613d8257613d788c84600184038151811061381857fe5b9b50600101613d5a565b5060015b60018203811015613dd8578a60011660011415613db657613daf836001830381518110613b1057fe5b9350613dcc565b613dc98484600184038151811061381857fe5b93505b60019a8b1c9a01613d86565b50613de38b84613cd9565b9350505050613f8b565b60015b8751811015613e6d5760008a600116600114613e0c5783613e21565b888281518110613e1857fe5b60200260200101515b905060008b600116600114613e4957898381518110613e3c57fe5b6020026020010151613e4b565b845b9050613e578282613cd9565b60019c8d1c9c909550929092019150613df09050565b508715613e7c57509050613f8b565b808681518110613e8857fe5b602002602001015184141580613e9c575085155b613eed576040805162461bcd60e51b815260206004820152601c60248201527f726967687420737562747265652063616e6e6f74206265207a65726f00000000604482015290519081900360640190fd5b60008615613f0457613eff8686613cd9565b613f06565b855b90508615613f1657600019909601955b80875b60018a5103811015613f3f57613f358285838151811061381857fe5b9150600101613f19565b50838114613f85576040805162461bcd60e51b815260206004820152600e60248201526d0caf0e0cac6e8cac840dac2e8c6d60931b604482015290519081900360640190fd5b50925050505b979650505050505050565b60408051818152610820810182526060918291906020820161080080368337019050509050613fc560006124d4565b81600081518110613fd257fe5b602090810291909101015260015b604081101561403157614012826001830381518110613ffb57fe5b602002602001015183600184038151811061381857fe5b82828151811061401e57fe5b6020908102919091010152600101613fe0565b50905090565b600080805b6020811015612f8c57600882901b9150600081850186511161405f57600061407d565b858286018151811061406d57fe5b01602001516001600160f81b0319165b60f81c92909217915060010161403c565b60008161409d575060016112e0565b6140aa600183901c61408e565b60010190506112e0565b604051806101e0016040528060006001600160a01b031681526020016140d86141cd565b81526020016140e56141cd565b81526000602082018190526040820181905260608201819052608082015260a00161410e61423a565b815260200161411b61423a565b81526000602082018190526040820181905260608083018190526080830182905260a083015260c09091015290565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b6040518060c00160405280600081526020016141aa614254565b815260606020820181905260006040830181905290820181905260809091015290565b60408051610120810190915260008152602081016141e9614190565b81526020016141f6614190565b8152602001614203614190565b8152602001614210614190565b8152600060208201819052604082015260600161422b614190565b8152602001600081525090565bfe5b604051806040016040528060008152602001606081525090565b604080516060808201835260008083526020830152918101919091529056fe75736520616e6f7468657220636f6e747261637420746f2068616e646c65206f74686572206f70636f646573a2646970667358221220b9e692b5a92cebc656ac457f830c0d1f14ecda3d664a66b4ff076bd9e9ae560f64736f6c634300060c0033"

// DeployOneStepProof2 deploys a new Ethereum contract, binding an instance of OneStepProof2 to it.
func DeployOneStepProof2(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OneStepProof2, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OneStepProof2Bin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// OneStepProof2 is an auto generated Go binding around an Ethereum contract.
type OneStepProof2 struct {
	OneStepProof2Caller     // Read-only binding to the contract
	OneStepProof2Transactor // Write-only binding to the contract
	OneStepProof2Filterer   // Log filterer for contract events
}

// OneStepProof2Caller is an auto generated read-only Go binding around an Ethereum contract.
type OneStepProof2Caller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Transactor is an auto generated write-only Go binding around an Ethereum contract.
type OneStepProof2Transactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Filterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneStepProof2Filterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Session is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneStepProof2Session struct {
	Contract     *OneStepProof2    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneStepProof2CallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneStepProof2CallerSession struct {
	Contract *OneStepProof2Caller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// OneStepProof2TransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneStepProof2TransactorSession struct {
	Contract     *OneStepProof2Transactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// OneStepProof2Raw is an auto generated low-level Go binding around an Ethereum contract.
type OneStepProof2Raw struct {
	Contract *OneStepProof2 // Generic contract binding to access the raw methods on
}

// OneStepProof2CallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneStepProof2CallerRaw struct {
	Contract *OneStepProof2Caller // Generic read-only contract binding to access the raw methods on
}

// OneStepProof2TransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneStepProof2TransactorRaw struct {
	Contract *OneStepProof2Transactor // Generic write-only contract binding to access the raw methods on
}

// NewOneStepProof2 creates a new instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2(address common.Address, backend bind.ContractBackend) (*OneStepProof2, error) {
	contract, err := bindOneStepProof2(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// NewOneStepProof2Caller creates a new read-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Caller(address common.Address, caller bind.ContractCaller) (*OneStepProof2Caller, error) {
	contract, err := bindOneStepProof2(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Caller{contract: contract}, nil
}

// NewOneStepProof2Transactor creates a new write-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Transactor(address common.Address, transactor bind.ContractTransactor) (*OneStepProof2Transactor, error) {
	contract, err := bindOneStepProof2(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Transactor{contract: contract}, nil
}

// NewOneStepProof2Filterer creates a new log filterer instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Filterer(address common.Address, filterer bind.ContractFilterer) (*OneStepProof2Filterer, error) {
	contract, err := bindOneStepProof2(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Filterer{contract: contract}, nil
}

// bindOneStepProof2 binds a generic wrapper to an already deployed contract.
func bindOneStepProof2(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2Raw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.OneStepProof2Caller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2Raw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2Raw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2CallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[4] fields)
func (_OneStepProof2 *OneStepProof2Caller) ExecuteStep(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "executeStep", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		Gas               uint64
		TotalMessagesRead *big.Int
		Fields            [4][32]byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Gas = *abi.ConvertType(out[0], new(uint64)).(*uint64)
	outstruct.TotalMessagesRead = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Fields = *abi.ConvertType(out[2], new([4][32]byte)).(*[4][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[4] fields)
func (_OneStepProof2 *OneStepProof2Session) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[4] fields)
func (_OneStepProof2 *OneStepProof2CallerSession) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof2 *OneStepProof2Caller) ExecuteStepDebug(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "executeStepDebug", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		StartMachine string
		AfterMachine string
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.StartMachine = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.AfterMachine = *abi.ConvertType(out[1], new(string)).(*string)

	return *outstruct, err

}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof2 *OneStepProof2Session) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof2.Contract.ExecuteStepDebug(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof2 *OneStepProof2CallerSession) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof2.Contract.ExecuteStepDebug(&_OneStepProof2.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Caller) ParseProof(opts *bind.CallOpts, proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "parseProof", proof)

	if err != nil {
		return *new([][32]byte), *new([][32]byte), *new([][32]byte), *new([][32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([][32]byte)).(*[][32]byte)
	out1 := *abi.ConvertType(out[1], new([][32]byte)).(*[][32]byte)
	out2 := *abi.ConvertType(out[2], new([][32]byte)).(*[][32]byte)
	out3 := *abi.ConvertType(out[3], new([][32]byte)).(*[][32]byte)

	return out0, out1, out2, out3, err

}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Session) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2CallerSession) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}
