// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ChallengeFactoryABI is the input ABI used to generate the binding from.
const ChallengeFactoryABI = "[{\"inputs\":[{\"internalType\":\"contractIOneStepProof[]\",\"name\":\"_executors\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"challengeTemplate\",\"outputs\":[{\"internalType\":\"contractICloneable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_resultReceiver\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_executionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_maxMessageCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_asserter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_challenger\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_asserterTimeLeft\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_challengerTimeLeft\",\"type\":\"uint256\"},{\"internalType\":\"contractIBridge\",\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"createChallenge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"executors\",\"outputs\":[{\"internalType\":\"contractIOneStepProof\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// ChallengeFactoryBin is the compiled bytecode used for deploying new contracts.
var ChallengeFactoryBin = "0x608060405234801561001057600080fd5b506040516133203803806133208339818101604052602081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825186602082028301116401000000008211171561008557600080fd5b82525081516020918201928201910280838360005b838110156100b257818101518382015260200161009a565b505050509050016040525050506040516100cb90610122565b604051809103906000f0801580156100e7573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b0392909216919091179055805161011b90600190602084019061012f565b50506101b3565b612d138061060d83390190565b828054828255906000526020600020908101928215610184579160200282015b8281111561018457825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061014f565b50610190929150610194565b5090565b5b808211156101905780546001600160a01b0319168155600101610195565b61044b806101c26000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806356a44dbb14610046578063777367c9146100b9578063f97a05df146100c1575b600080fd5b61009d600480360361010081101561005d57600080fd5b506001600160a01b0381358116916020810135916040820135916060810135821691608082013581169160a08101359160c08201359160e00135166100de565b604080516001600160a01b039092168252519081900360200190f35b61009d610211565b61009d600480360360208110156100d757600080fd5b5035610220565b6000805481906100f6906001600160a01b0316610247565b9050806001600160a01b03166332f8c24f60018c8c8c8c8c8c8c8c6040518a63ffffffff1660e01b815260040180806020018a6001600160a01b03168152602001898152602001888152602001876001600160a01b03168152602001866001600160a01b03168152602001858152602001848152602001836001600160a01b0316815260200182810382528b81815481526020019150805480156101c357602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101a5575b50509a5050505050505050505050600060405180830381600087803b1580156101eb57600080fd5b505af11580156101ff573d6000803e3d6000fd5b50929c9b505050505050505050505050565b6000546001600160a01b031681565b6001818154811061022d57fe5b6000918252602090912001546001600160a01b0316905081565b6000816001600160a01b0316636f791d296040518163ffffffff1660e01b815260040160206040518083038186803b15801561028257600080fd5b505afa158015610296573d6000803e3d6000fd5b505050506040513d60208110156102ac57600080fd5b505160408051808201909152600c81526b21a627a722afa6a0a9aa22a960a11b60208201529061035a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561031f578181015183820152602001610307565b50505050905090810190601f16801561034c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5061036d826001600160a01b0316610373565b92915050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b038116610410576040805162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015290519081900360640190fd5b91905056fea2646970667358221220a3c8189c40bcb6898c91a17f170fa8d5c22b6207b48b47083375c9e260c7caa164736f6c634300060c0033608060405234801561001057600080fd5b506000805460ff19166001179055612ce68061002d6000396000f3fe608060405234801561001057600080fd5b50600436106101075760003560e01c806304baa00b1461010c57806332f8c24f1461013557806341e8510c146101df578063534db0e2146101f95780636f791d291461021d57806370dea79a14610239578063843d5a5c1461024157806386f63a57146102495780638a8cd2181461035a5780638b299903146103625780638e7b84c51461036a578063925f9a961461044d5780639a9e4f4414610455578063a5f59af11461045d578063a63bde8d146104e9578063bb4af0b114610569578063d3b5fd3514610571578063e78cea921461059a578063e87e3589146105a2578063f1d1b9d6146105aa578063f97a05df1461077c575b600080fd5b610114610799565b6040518082600281111561012457fe5b815260200191505060405180910390f35b6101dd600480360361012081101561014c57600080fd5b810190602081018135600160201b81111561016657600080fd5b82018360208201111561017857600080fd5b803590602001918460208302840111600160201b8311171561019957600080fd5b91935091506001600160a01b0381358116916020810135916040820135916060810135821691608082013581169160a08101359160c08201359160e00135166107a2565b005b6101e7610924565b60408051918252519081900360200190f35b61020161092a565b604080516001600160a01b039092168252519081900360200190f35b610225610939565b604080519115158252519081900360200190f35b6101dd610943565b6101e7610a64565b6101dd600480360361012081101561026057600080fd5b813591602081013591604082013591606081019181019060e0810160c0820135600160201b81111561029157600080fd5b8201836020820111156102a357600080fd5b803590602001918460018302840111600160201b831117156102c457600080fd5b919390929091602081019035600160201b8111156102e157600080fd5b8201836020820111156102f357600080fd5b803590602001918460018302840111600160201b8311171561031457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff169150610a6a9050565b610201610f16565b610114610faf565b6101dd600480360361010081101561038157600080fd5b810190602081018135600160201b81111561039b57600080fd5b8201836020820111156103ad57600080fd5b803590602001918460208302840111600160201b831117156103ce57600080fd5b9193909282359260208101359260408201359260608301359260808101359260a082013592909160e081019060c00135600160201b81111561040f57600080fd5b82018360208201111561042157600080fd5b803590602001918460208302840111600160201b8311171561044257600080fd5b509092509050610fbd565b6101e7611497565b6101e761149d565b6101dd600480360360e081101561047357600080fd5b810190602081018135600160201b81111561048d57600080fd5b82018360208201111561049f57600080fd5b803590602001918460208302840111600160201b831117156104c057600080fd5b919350915080359060208101359060408101359060608101359060808101359060a001356114a3565b6101dd600480360360a08110156104ff57600080fd5b813591602081013591810190606081016040820135600160201b81111561052557600080fd5b82018360208201111561053757600080fd5b803590602001918460208302840111600160201b8311171561055857600080fd5b919350915080359060200135611792565b610201611b6c565b6101dd6004803603606081101561058757600080fd5b5080359060208101359060400135611b7b565b610201611dc5565b6101e7611dd4565b6101dd60048036036101a08110156105c157600080fd5b810190602081018135600160201b8111156105db57600080fd5b8201836020820111156105ed57600080fd5b803590602001918460208302840111600160201b8311171561060e57600080fd5b6040805160608181018352949693958335956020850135959385013594818101359460808201359460a0830135949193919261012081019260c090910190600390839083908082843760009201919091525091949392602081019250359050600160201b81111561067e57600080fd5b82018360208201111561069057600080fd5b803590602001918460018302840111600160201b831117156106b157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561070357600080fd5b82018360208201111561071557600080fd5b803590602001918460018302840111600160201b8311171561073657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff169150611e249050565b6102016004803603602081101561079257600080fd5b5035612366565b600b5460ff1681565b6000600b54610100900460ff1660028111156107ba57fe5b146040518060400160405280600f81526020016e4348414c5f494e49545f535441544560881b8152509061086c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610831578181015183820152602001610819565b50505050905090810190601f16801561085e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5061087960018b8b612bd0565b50600380546001600160a01b038a81166001600160a01b0319928316179092556004899055600588905560068054888416908316179055600780548784169083161790556009859055600a849055600b805461ffff19166102001790556000600c81905543600855600280549092169284169290921790556040517f7003482dc89fcecb9f14e280f21ee716bd54187f7f3b0ab5ed78f3648218f2de9190a150505050505050505050565b600a5481565b6007546001600160a01b031681565b60005460ff165b90565b600061095a6008544361238d90919063ffffffff16565b9050610964611dd4565b81116040518060400160405280601081526020016f54494d454f55545f444541444c494e4560801b815250906109db5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b506001600b54610100900460ff1660028111156109f457fe5b1415610a30576040517f2b92a4b014281aa2424baba9ea60bf4f26833d1c1fbd873e51cd1a6caeef48f090600090a1610a2b6123cf565b610a61565b6040517f4e1f1f06cf69d199fcdb4d87a5a92d5248ca6b540e9fc2d3698927c5002a236a90600090a1610a6161244d565b50565b600c5481565b610a72610f16565b6001600160a01b0316336001600160a01b0316146040518060400160405280600a8152602001692124a9afa9a2a72222a960b11b81525090610af55760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b50610afe611dd4565b600854610b0c90439061238d565b11156040518060400160405280600c81526020016b4249535f444541444c494e4560a01b81525090610b7f5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b506002600b5460ff166002811115610b9357fe5b14610bd2576040805162461bcd60e51b815260206004820152600a60248201526915d493d391d7d2d2539160b21b604482015290519081900360640190fd5b6000610bdc612c33565b60018360ff1681548110610bec57fe5b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b0316639d16dd04600260009054906101000a90046001600160a01b03168c60405180604001604052808e81526020018d8152508a8a8a6040518763ffffffff1660e01b815260040180876001600160a01b0316815260200186815260200185600260200280838360005b83811015610c93578181015183820152602001610c7b565b50505050905001806020018060200183810383528686828181526020019250808284376000838201819052601f909101601f191690920185810384528651815286516020918201939188019250908190849084905b83811015610d00578181015183820152602001610ce8565b50505050905090810190601f168015610d2d5780820380516001836020036101000a031916815260200191505b509850505050505050505060c06040518083038186803b158015610d5057600080fd5b505afa158015610d64573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060c0811015610d8957600080fd5b50602081015160055490935060409091019150821115610de4576040805162461bcd60e51b8152602060048201526011602482015270544f4f5f4d414e595f4d4553534147455360781b604482015290519081900360640190fd5b600454610e1e8b8b8b8b60038060200260405190810160405280929190826003602002808284376000920191909152508891506124a89050565b14610e5c576040805162461bcd60e51b815260206004820152600960248201526815d493d391d7d1539160ba1b604482015290519081900360640190fd5b604051600080516020612c7183398151915290600090a1610e7b6124de565b5060029050600b54610100900460ff166002811115610e9657fe5b1415610ed457610ebd610eb46008544361238d90919063ffffffff16565b600a549061238d565b600a55600b805461ff001916610100179055610f08565b610ef5610eec6008544361238d90919063ffffffff16565b6009549061238d565b600955600b805461ff0019166102001790555b505043600855505050505050565b60006001600b54610100900460ff166002811115610f3057fe5b1415610f4857506006546001600160a01b0316610940565b6002600b54610100900460ff166002811115610f6057fe5b1415610f7857506007546001600160a01b0316610940565b6040805162461bcd60e51b81526020600482015260076024820152662727afaa2aa92760c91b604482015290519081900360640190fd5b600b54610100900460ff1681565b6002600b5460ff166002811115610fd057fe5b1415610fe957600b805460ff1916600117905560006004555b6000600b5460ff166002811115610ffc57fe5b141561101f5760048054600c55600b805460ff1916600117905560009055611071565b6001600b5460ff16600281111561103257fe5b14611071576040805162461bcd60e51b815260206004820152600a60248201526915d493d391d7d2d2539160b21b604482015290519081900360640190fd5b611079610f16565b6001600160a01b0316336001600160a01b0316146040518060400160405280600a8152602001692124a9afa9a2a72222a960b11b815250906110fc5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b50611105611dd4565b60085461111390439061238d565b11156040518060400160405280600c81526020016b4249535f444541444c494e4560a01b815250906111865760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b50600186116111c8576040805162461bcd60e51b81526020600482015260096024820152681513d3d7d4d213d49560ba1b604482015290519081900360640190fd5b6111d486610190612511565b6001018114611216576040805162461bcd60e51b815260206004820152600960248201526810d55517d0d3d5539560ba1b604482015290519081900360640190fd5b848282600019810181811061122757fe5b90506020020135141561126c576040805162461bcd60e51b815260206004820152600860248201526714d0535157d1539160c21b604482015290519081900360640190fd5b6112768484612529565b8282600081811061128357fe5b90506020020135146112d1576040805162461bcd60e51b81526020600482015260126024820152717365676d656e74207072652d6669656c647360701b604482015290519081900360640190fd5b6112db8787612555565b8410611327576040805162461bcd60e51b81526020600482015260166024820152750d2dcecc2d8d2c840e6cacedacadce840d8cadccee8d60531b604482015290519081900360640190fd5b600061134888888585600081811061133b57fe5b90506020020135896125a3565b9050611356818c8c8c6125e1565b6113a98383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508c92506113a4915089905061139e838d612555565b9061238d565b612699565b50600c54600080516020612c918339815191528989868660405180858152602001848152602001806020018281038252848482818152602001925060200280828437600083820152604051601f909101601f191690920182900397509095505050505050a2506002600b54610100900460ff16600281111561142757fe5b141561145c57611445610eb46008544361238d90919063ffffffff16565b600a55600b805461ff001916610100179055611487565b611474610eec6008544361238d90919063ffffffff16565b600955600b805461ff0019166102001790555b5050436008555050505050505050565b60085481565b60095481565b6002600b5460ff1660028111156114b657fe5b14156114cf57600b805460ff1916600117905560006004555b6000600b5460ff1660028111156114e257fe5b14156115055760048054600c55600b805460ff1916600117905560009055611557565b6001600b5460ff16600281111561151857fe5b14611557576040805162461bcd60e51b815260206004820152600a60248201526915d493d391d7d2d2539160b21b604482015290519081900360640190fd5b61155f610f16565b6001600160a01b0316336001600160a01b0316146040518060400160405280600a8152602001692124a9afa9a2a72222a960b11b815250906115e25760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b506115eb611dd4565b6008546115f990439061238d565b11156040518060400160405280600c81526020016b4249535f444541444c494e4560a01b8152509061166c5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b50600184116116ae576040805162461bcd60e51b81526020600482015260096024820152681513d3c814d213d49560ba1b604482015290519081900360640190fd5b60006116ba8383612529565b905060006116ca878784886125a3565b90506116d8818b8b8b6125e1565b6116e28787612555565b841015611720576040805162461bcd60e51b81526020600482015260076024820152664241445f47415360c81b604482015290519081900360640190fd5b84821415611761576040805162461bcd60e51b815260206004820152600960248201526815d493d391d7d1539160ba1b604482015290519081900360640190fd5b6040517f6af162552a4b84b5de3ae085d52a72f3600612e1900ffd795ee386297eaaa55890600090a1610e7b6124de565b61179a610f16565b6001600160a01b0316336001600160a01b0316146040518060400160405280600a8152602001692124a9afa9a2a72222a960b11b8152509061181d5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b50611826611dd4565b60085461183490439061238d565b11156040518060400160405280600c81526020016b4249535f444541444c494e4560a01b815250906118a75760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b506000600b5460ff1660028111156118bb57fe5b146118f8576040805162461bcd60e51b815260206004820152600860248201526710905117d2d2539160c21b604482015290519081900360640190fd5b6000821161193a576040805162461bcd60e51b815260206004820152600a6024820152690848288be988a9c8ea8960b31b604482015290519081900360640190fd5b61194682610190612511565b6001018314611988576040805162461bcd60e51b815260206004820152600960248201526810d55517d0d3d5539560ba1b604482015290519081900360640190fd5b8582106119c7576040805162461bcd60e51b8152602060048201526008602482015267544f4f5f4c4f4e4760c01b604482015290519081900360640190fd5b6004546119d760008884896125a3565b14611a14576040805162461bcd60e51b815260206004820152600860248201526708a9c88be9082a6960c31b604482015290519081900360640190fd5b611a52848480806020026020016040519081016040528093929190818152602001838360200280828437600092018290525092508691506126999050565b5083836000198101818110611a6357fe5b602002919091013560045550600b80546002919060ff19166001830217905550600c54600080516020612c91833981519152600088878760405180858152602001848152602001806020018281038252848482818152602001925060200280828437600083820152604051601f909101601f191690920182900397509095505050505050a26002600b54610100900460ff166002811115611b0057fe5b1415611b3557611b1e610eb46008544361238d90919063ffffffff16565b600a55600b805461ff001916610100179055611b60565b611b4d610eec6008544361238d90919063ffffffff16565b600955600b805461ff0019166102001790555b50504360085550505050565b6006546001600160a01b031681565b611b83610f16565b6001600160a01b0316336001600160a01b0316146040518060400160405280600a8152602001692124a9afa9a2a72222a960b11b81525090611c065760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b50611c0f611dd4565b600854611c1d90439061238d565b11156040518060400160405280600c81526020016b4249535f444541444c494e4560a01b81525090611c905760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b506000600b5460ff166002811115611ca457fe5b14611ce3576040805162461bcd60e51b815260206004820152600a60248201526915d493d391d7d2d2539160b21b604482015290519081900360640190fd5b600454611cf360008584866125a3565b14611d32576040805162461bcd60e51b815260206004820152600a60248201526915d493d391d7d2d2539160b21b604482015290519081900360640190fd5b6004819055600b805460ff19166002908117918290559060ff6101009091041681811115611d5c57fe5b1415611d9157611d7a610eb46008544361238d90919063ffffffff16565b600a55600b805461ff001916610100179055611dbc565b611da9610eec6008544361238d90919063ffffffff16565b600955600b805461ff0019166102001790555b50504360085550565b6002546001600160a01b031681565b60006001600b54610100900460ff166002811115611dee57fe5b1415611dfd5750600954610940565b6002600b54610100900460ff166002811115611e1557fe5b1415610f785750600a54610940565b6002600b5460ff166002811115611e3757fe5b1415611e5057600b805460ff1916600117905560006004555b6000600b5460ff166002811115611e6357fe5b1415611e865760048054600c55600b805460ff1916600117905560009055611ed8565b6001600b5460ff166002811115611e9957fe5b14611ed8576040805162461bcd60e51b815260206004820152600a60248201526915d493d391d7d2d2539160b21b604482015290519081900360640190fd5b611ee0610f16565b6001600160a01b0316336001600160a01b0316146040518060400160405280600a8152602001692124a9afa9a2a72222a960b11b81525090611f635760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b50611f6c611dd4565b600854611f7a90439061238d565b11156040518060400160405280600c81526020016b4249535f444541444c494e4560a01b81525090611fed5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b506000806000611ffb612c33565b60018560ff168154811061200b57fe5b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b0316639d16dd04600260009054906101000a90046001600160a01b03168d60405180604001604052808f81526020018e8152508b8b6040518663ffffffff1660e01b815260040180866001600160a01b0316815260200185815260200184600260200280838360005b838110156120b1578181015183820152602001612099565b505050509050018060200180602001838103835285818151815260200191508051906020019080838360005b838110156120f55781810151838201526020016120dd565b50505050905090810190601f1680156121225780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561215557818101518382015260200161213d565b50505050905090810190601f1680156121825780820380516001836020036101000a031916815260200191505b5097505050505050505060c06040518083038186803b1580156121a457600080fd5b505afa1580156121b8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060c08110156121dd57600080fd5b508051602082015160055491955093506040909101915082111561223c576040805162461bcd60e51b8152602060048201526011602482015270544f4f5f4d414e595f4d4553534147455360781b604482015290519081900360640190fd5b61224a8a8a8a8686866127d5565b8c141561228a576040805162461bcd60e51b815260206004820152600960248201526815d493d391d7d1539160ba1b604482015290519081900360640190fd5b6122ab8d846001600160401b03166122a58e8e8e8e886124a8565b8f6125a3565b93505050506122bc818e8e8e6125e1565b604051600080516020612c7183398151915290600090a16122db6124de565b506002600b54610100900460ff1660028111156122f457fe5b141561232957612312610eb46008544361238d90919063ffffffff16565b600a55600b805461ff001916610100179055612354565b612341610eec6008544361238d90919063ffffffff16565b600955600b805461ff0019166102001790555b50504360085550505050505050505050565b6001818154811061237357fe5b6000918252602090912001546001600160a01b0316905081565b60006123c68383604051806040016040528060148152602001737375627472616374696f6e206f766572666c6f7760601b815250612858565b90505b92915050565b60035460075460065460408051637d3c01f360e11b81526001600160a01b039384166004820152918316602483015251919092169163fa7803e691604480830192600092919082900301818387803b15801561242a57600080fd5b505af115801561243e573d6000803e3d6000fd5b5050505061244b336128b2565b565b60035460065460075460408051637d3c01f360e11b81526001600160a01b039384166004820152918316602483015251919092169163fa7803e691604480830192600092919082900301818387803b15801561242a57600080fd5b81518151602084015160408501516000936124d49390926124cf928b92918b918b90612932565b612529565b9695505050505050565b6001600b54610100900460ff1660028111156124f657fe5b14156125095761250461244d565b61244b565b61244b6123cf565b6000818310156125225750816123c9565b50806123c9565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6000828201838110156123c6576040805162461bcd60e51b81526020600482015260116024820152706164646974696f6e206f766572666c6f7760781b604482015290519081900360640190fd5b604080516020808201969096528082019490945260608401929092526080808401919091528151808403909101815260a09092019052805191012090565b61262183838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525085925088915061297d9050565b600c5414604051806040016040528060088152602001672124a9afa82922ab60c11b815250906126925760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b5050505050565b8251600090600019016060816001600160401b03811180156126ba57600080fd5b506040519080825280602002602001820160405280156126e4578160200160208202803683370190505b50905060006126f38584612a4b565b9050600086905061272e81838a60008151811061270c57fe5b60200260200101518b60018151811061272157fe5b60200260200101516125a3565b8360008151811061273b57fe5b60209081029190910101526127508183612555565b905061275c8685612a69565b915060015b848110156127bc5761279182848b848151811061277a57fe5b60200260200101518c856001018151811061272157fe5b84828151811061279d57fe5b60209081029190910101526127b28284612555565b9150600101612761565b506127c683612a7c565b600c5550929695505050505050565b600061284d6127f56001600160401b03861687845b602002015190612555565b602084015160408501516124cf9187916128248d8214612816576001612819565b60005b60ff168c60016127ea565b60608901516128488e821461283a57600161283d565b60005b60ff168e60026127ea565b612932565b979650505050505050565b600081848411156128aa5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b505050900390565b6000546040805180820190915260098152684e4f545f434c4f4e4560b81b60208201529060ff16156129255760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610831578181015183820152602001610819565b50806001600160a01b0316ff5b60408051602080820198909852808201969096526060860194909452608085019290925260a084015260c0808401919091528151808403909101815260e09092019052805191012090565b825160009061010081111561299157600080fd5b8260005b82811015612a4157600286066129ee578681815181106129b157fe5b6020026020010151826040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209150612a33565b818782815181106129fb57fe5b602002602001015160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012091505b600286049550600101612995565b5095945050505050565b6000818381612a5657fe5b06828481612a6057fe5b04019392505050565b6000818381612a7457fe5b049392505050565b6000815b600181511115612bb35760606002825160010181612a9a57fe5b046001600160401b0381118015612ab057600080fd5b50604051908082528060200260200182016040528015612ada578160200160208202803683370190505b50905060005b8151811015612bab578251816002026001011015612b7357828160020281518110612b0757fe5b6020026020010151838260020260010181518110612b2157fe5b6020026020010151604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120828281518110612b6257fe5b602002602001018181525050612ba3565b828160020281518110612b8257fe5b6020026020010151828281518110612b9657fe5b6020026020010181815250505b600101612ae0565b509050612a80565b80600081518110612bc057fe5b6020026020010151915050919050565b828054828255906000526020600020908101928215612c23579160200282015b82811115612c235781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190612bf0565b50612c2f929150612c51565b5090565b60405180608001604052806004906020820280368337509192915050565b5b80821115612c2f5780546001600160a01b0319168155600101612c5256fe117efdf1fdd8be5a6ff0fb3c32333d7033bbd9523924bd0d9ca28f43540516f50a2bdfea671da507e80b0cbae49dd25100a5bdacc5dff43a9163a3fcbd7c3c7da2646970667358221220fc8ec645a22aad8ac24da4bda9864e59eac3e21808777a7695c41fd3ceeb430d64736f6c634300060c0033"

// DeployChallengeFactory deploys a new Ethereum contract, binding an instance of ChallengeFactory to it.
func DeployChallengeFactory(auth *bind.TransactOpts, backend bind.ContractBackend, _executors []common.Address) (common.Address, *types.Transaction, *ChallengeFactory, error) {
	parsed, err := abi.JSON(strings.NewReader(ChallengeFactoryABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ChallengeFactoryBin), backend, _executors)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ChallengeFactory{ChallengeFactoryCaller: ChallengeFactoryCaller{contract: contract}, ChallengeFactoryTransactor: ChallengeFactoryTransactor{contract: contract}, ChallengeFactoryFilterer: ChallengeFactoryFilterer{contract: contract}}, nil
}

// ChallengeFactory is an auto generated Go binding around an Ethereum contract.
type ChallengeFactory struct {
	ChallengeFactoryCaller     // Read-only binding to the contract
	ChallengeFactoryTransactor // Write-only binding to the contract
	ChallengeFactoryFilterer   // Log filterer for contract events
}

// ChallengeFactoryCaller is an auto generated read-only Go binding around an Ethereum contract.
type ChallengeFactoryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ChallengeFactoryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ChallengeFactoryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ChallengeFactoryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ChallengeFactoryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ChallengeFactorySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ChallengeFactorySession struct {
	Contract     *ChallengeFactory // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ChallengeFactoryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ChallengeFactoryCallerSession struct {
	Contract *ChallengeFactoryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// ChallengeFactoryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ChallengeFactoryTransactorSession struct {
	Contract     *ChallengeFactoryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// ChallengeFactoryRaw is an auto generated low-level Go binding around an Ethereum contract.
type ChallengeFactoryRaw struct {
	Contract *ChallengeFactory // Generic contract binding to access the raw methods on
}

// ChallengeFactoryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ChallengeFactoryCallerRaw struct {
	Contract *ChallengeFactoryCaller // Generic read-only contract binding to access the raw methods on
}

// ChallengeFactoryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ChallengeFactoryTransactorRaw struct {
	Contract *ChallengeFactoryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewChallengeFactory creates a new instance of ChallengeFactory, bound to a specific deployed contract.
func NewChallengeFactory(address common.Address, backend bind.ContractBackend) (*ChallengeFactory, error) {
	contract, err := bindChallengeFactory(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ChallengeFactory{ChallengeFactoryCaller: ChallengeFactoryCaller{contract: contract}, ChallengeFactoryTransactor: ChallengeFactoryTransactor{contract: contract}, ChallengeFactoryFilterer: ChallengeFactoryFilterer{contract: contract}}, nil
}

// NewChallengeFactoryCaller creates a new read-only instance of ChallengeFactory, bound to a specific deployed contract.
func NewChallengeFactoryCaller(address common.Address, caller bind.ContractCaller) (*ChallengeFactoryCaller, error) {
	contract, err := bindChallengeFactory(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ChallengeFactoryCaller{contract: contract}, nil
}

// NewChallengeFactoryTransactor creates a new write-only instance of ChallengeFactory, bound to a specific deployed contract.
func NewChallengeFactoryTransactor(address common.Address, transactor bind.ContractTransactor) (*ChallengeFactoryTransactor, error) {
	contract, err := bindChallengeFactory(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ChallengeFactoryTransactor{contract: contract}, nil
}

// NewChallengeFactoryFilterer creates a new log filterer instance of ChallengeFactory, bound to a specific deployed contract.
func NewChallengeFactoryFilterer(address common.Address, filterer bind.ContractFilterer) (*ChallengeFactoryFilterer, error) {
	contract, err := bindChallengeFactory(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ChallengeFactoryFilterer{contract: contract}, nil
}

// bindChallengeFactory binds a generic wrapper to an already deployed contract.
func bindChallengeFactory(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ChallengeFactoryABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ChallengeFactory *ChallengeFactoryRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ChallengeFactory.Contract.ChallengeFactoryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ChallengeFactory *ChallengeFactoryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ChallengeFactory.Contract.ChallengeFactoryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ChallengeFactory *ChallengeFactoryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ChallengeFactory.Contract.ChallengeFactoryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ChallengeFactory *ChallengeFactoryCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ChallengeFactory.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ChallengeFactory *ChallengeFactoryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ChallengeFactory.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ChallengeFactory *ChallengeFactoryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ChallengeFactory.Contract.contract.Transact(opts, method, params...)
}

// ChallengeTemplate is a free data retrieval call binding the contract method 0x777367c9.
//
// Solidity: function challengeTemplate() view returns(address)
func (_ChallengeFactory *ChallengeFactoryCaller) ChallengeTemplate(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ChallengeFactory.contract.Call(opts, &out, "challengeTemplate")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ChallengeTemplate is a free data retrieval call binding the contract method 0x777367c9.
//
// Solidity: function challengeTemplate() view returns(address)
func (_ChallengeFactory *ChallengeFactorySession) ChallengeTemplate() (common.Address, error) {
	return _ChallengeFactory.Contract.ChallengeTemplate(&_ChallengeFactory.CallOpts)
}

// ChallengeTemplate is a free data retrieval call binding the contract method 0x777367c9.
//
// Solidity: function challengeTemplate() view returns(address)
func (_ChallengeFactory *ChallengeFactoryCallerSession) ChallengeTemplate() (common.Address, error) {
	return _ChallengeFactory.Contract.ChallengeTemplate(&_ChallengeFactory.CallOpts)
}

// Executors is a free data retrieval call binding the contract method 0xf97a05df.
//
// Solidity: function executors(uint256 ) view returns(address)
func (_ChallengeFactory *ChallengeFactoryCaller) Executors(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _ChallengeFactory.contract.Call(opts, &out, "executors", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Executors is a free data retrieval call binding the contract method 0xf97a05df.
//
// Solidity: function executors(uint256 ) view returns(address)
func (_ChallengeFactory *ChallengeFactorySession) Executors(arg0 *big.Int) (common.Address, error) {
	return _ChallengeFactory.Contract.Executors(&_ChallengeFactory.CallOpts, arg0)
}

// Executors is a free data retrieval call binding the contract method 0xf97a05df.
//
// Solidity: function executors(uint256 ) view returns(address)
func (_ChallengeFactory *ChallengeFactoryCallerSession) Executors(arg0 *big.Int) (common.Address, error) {
	return _ChallengeFactory.Contract.Executors(&_ChallengeFactory.CallOpts, arg0)
}

// CreateChallenge is a paid mutator transaction binding the contract method 0x56a44dbb.
//
// Solidity: function createChallenge(address _resultReceiver, bytes32 _executionHash, uint256 _maxMessageCount, address _asserter, address _challenger, uint256 _asserterTimeLeft, uint256 _challengerTimeLeft, address _bridge) returns(address)
func (_ChallengeFactory *ChallengeFactoryTransactor) CreateChallenge(opts *bind.TransactOpts, _resultReceiver common.Address, _executionHash [32]byte, _maxMessageCount *big.Int, _asserter common.Address, _challenger common.Address, _asserterTimeLeft *big.Int, _challengerTimeLeft *big.Int, _bridge common.Address) (*types.Transaction, error) {
	return _ChallengeFactory.contract.Transact(opts, "createChallenge", _resultReceiver, _executionHash, _maxMessageCount, _asserter, _challenger, _asserterTimeLeft, _challengerTimeLeft, _bridge)
}

// CreateChallenge is a paid mutator transaction binding the contract method 0x56a44dbb.
//
// Solidity: function createChallenge(address _resultReceiver, bytes32 _executionHash, uint256 _maxMessageCount, address _asserter, address _challenger, uint256 _asserterTimeLeft, uint256 _challengerTimeLeft, address _bridge) returns(address)
func (_ChallengeFactory *ChallengeFactorySession) CreateChallenge(_resultReceiver common.Address, _executionHash [32]byte, _maxMessageCount *big.Int, _asserter common.Address, _challenger common.Address, _asserterTimeLeft *big.Int, _challengerTimeLeft *big.Int, _bridge common.Address) (*types.Transaction, error) {
	return _ChallengeFactory.Contract.CreateChallenge(&_ChallengeFactory.TransactOpts, _resultReceiver, _executionHash, _maxMessageCount, _asserter, _challenger, _asserterTimeLeft, _challengerTimeLeft, _bridge)
}

// CreateChallenge is a paid mutator transaction binding the contract method 0x56a44dbb.
//
// Solidity: function createChallenge(address _resultReceiver, bytes32 _executionHash, uint256 _maxMessageCount, address _asserter, address _challenger, uint256 _asserterTimeLeft, uint256 _challengerTimeLeft, address _bridge) returns(address)
func (_ChallengeFactory *ChallengeFactoryTransactorSession) CreateChallenge(_resultReceiver common.Address, _executionHash [32]byte, _maxMessageCount *big.Int, _asserter common.Address, _challenger common.Address, _asserterTimeLeft *big.Int, _challengerTimeLeft *big.Int, _bridge common.Address) (*types.Transaction, error) {
	return _ChallengeFactory.Contract.CreateChallenge(&_ChallengeFactory.TransactOpts, _resultReceiver, _executionHash, _maxMessageCount, _asserter, _challenger, _asserterTimeLeft, _challengerTimeLeft, _bridge)
}

// IOneStepProofABI is the input ABI used to generate the binding from.
const IOneStepProofABI = "[{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[4]\",\"name\":\"fields\",\"type\":\"bytes32[4]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStepDebug\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"startMachine\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"afterMachine\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// IOneStepProof is an auto generated Go binding around an Ethereum contract.
type IOneStepProof struct {
	IOneStepProofCaller     // Read-only binding to the contract
	IOneStepProofTransactor // Write-only binding to the contract
	IOneStepProofFilterer   // Log filterer for contract events
}

// IOneStepProofCaller is an auto generated read-only Go binding around an Ethereum contract.
type IOneStepProofCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IOneStepProofTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IOneStepProofTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IOneStepProofFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IOneStepProofFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IOneStepProofSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IOneStepProofSession struct {
	Contract     *IOneStepProof    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IOneStepProofCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IOneStepProofCallerSession struct {
	Contract *IOneStepProofCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// IOneStepProofTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IOneStepProofTransactorSession struct {
	Contract     *IOneStepProofTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// IOneStepProofRaw is an auto generated low-level Go binding around an Ethereum contract.
type IOneStepProofRaw struct {
	Contract *IOneStepProof // Generic contract binding to access the raw methods on
}

// IOneStepProofCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IOneStepProofCallerRaw struct {
	Contract *IOneStepProofCaller // Generic read-only contract binding to access the raw methods on
}

// IOneStepProofTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IOneStepProofTransactorRaw struct {
	Contract *IOneStepProofTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIOneStepProof creates a new instance of IOneStepProof, bound to a specific deployed contract.
func NewIOneStepProof(address common.Address, backend bind.ContractBackend) (*IOneStepProof, error) {
	contract, err := bindIOneStepProof(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IOneStepProof{IOneStepProofCaller: IOneStepProofCaller{contract: contract}, IOneStepProofTransactor: IOneStepProofTransactor{contract: contract}, IOneStepProofFilterer: IOneStepProofFilterer{contract: contract}}, nil
}

// NewIOneStepProofCaller creates a new read-only instance of IOneStepProof, bound to a specific deployed contract.
func NewIOneStepProofCaller(address common.Address, caller bind.ContractCaller) (*IOneStepProofCaller, error) {
	contract, err := bindIOneStepProof(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IOneStepProofCaller{contract: contract}, nil
}

// NewIOneStepProofTransactor creates a new write-only instance of IOneStepProof, bound to a specific deployed contract.
func NewIOneStepProofTransactor(address common.Address, transactor bind.ContractTransactor) (*IOneStepProofTransactor, error) {
	contract, err := bindIOneStepProof(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IOneStepProofTransactor{contract: contract}, nil
}

// NewIOneStepProofFilterer creates a new log filterer instance of IOneStepProof, bound to a specific deployed contract.
func NewIOneStepProofFilterer(address common.Address, filterer bind.ContractFilterer) (*IOneStepProofFilterer, error) {
	contract, err := bindIOneStepProof(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IOneStepProofFilterer{contract: contract}, nil
}

// bindIOneStepProof binds a generic wrapper to an already deployed contract.
func bindIOneStepProof(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IOneStepProofABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IOneStepProof *IOneStepProofRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IOneStepProof.Contract.IOneStepProofCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IOneStepProof *IOneStepProofRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IOneStepProof.Contract.IOneStepProofTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IOneStepProof *IOneStepProofRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IOneStepProof.Contract.IOneStepProofTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IOneStepProof *IOneStepProofCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _IOneStepProof.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IOneStepProof *IOneStepProofTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IOneStepProof.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IOneStepProof *IOneStepProofTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IOneStepProof.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[4] fields)
func (_IOneStepProof *IOneStepProofCaller) ExecuteStep(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	var out []interface{}
	err := _IOneStepProof.contract.Call(opts, &out, "executeStep", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		Gas               uint64
		TotalMessagesRead *big.Int
		Fields            [4][32]byte
	})

	outstruct.Gas = out[0].(uint64)
	outstruct.TotalMessagesRead = out[1].(*big.Int)
	outstruct.Fields = out[2].([4][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[4] fields)
func (_IOneStepProof *IOneStepProofSession) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	return _IOneStepProof.Contract.ExecuteStep(&_IOneStepProof.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[4] fields)
func (_IOneStepProof *IOneStepProofCallerSession) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	return _IOneStepProof.Contract.ExecuteStep(&_IOneStepProof.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_IOneStepProof *IOneStepProofCaller) ExecuteStepDebug(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	var out []interface{}
	err := _IOneStepProof.contract.Call(opts, &out, "executeStepDebug", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		StartMachine string
		AfterMachine string
	})

	outstruct.StartMachine = out[0].(string)
	outstruct.AfterMachine = out[1].(string)

	return *outstruct, err

}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_IOneStepProof *IOneStepProofSession) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _IOneStepProof.Contract.ExecuteStepDebug(&_IOneStepProof.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_IOneStepProof *IOneStepProofCallerSession) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _IOneStepProof.Contract.ExecuteStepDebug(&_IOneStepProof.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}
