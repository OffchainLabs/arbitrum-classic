// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OneStepProofABI is the input ABI used to generate the binding from.
const OneStepProofABI = "[{\"inputs\":[{\"internalType\":\"address[2]\",\"name\":\"bridges\",\"type\":\"address[2]\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"afterMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[4]\",\"name\":\"fields\",\"type\":\"bytes32[4]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[2]\",\"name\":\"bridges\",\"type\":\"address[2]\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStepDebug\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"startMachine\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"afterMachine\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// OneStepProofFuncSigs maps the 4-byte function signature to its string representation.
var OneStepProofFuncSigs = map[string]string{
	"47dda1d6": "executeStep(address[2],uint256,bytes32[2],bytes,bytes)",
	"eba67f6e": "executeStepDebug(address[2],uint256,bytes32[2],bytes,bytes)",
}

// OneStepProofBin is the compiled bytecode used for deploying new contracts.
var OneStepProofBin = "0x608060405234801561001057600080fd5b50615284806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806347dda1d61461003b578063eba67f6e14610159575b600080fd5b610107600480360360e081101561005157600080fd5b604082013590606083019083018360c0810160a0820135600160201b81111561007957600080fd5b82018360208201111561008b57600080fd5b803590602001918460018302840111600160201b831117156100ac57600080fd5b919390929091602081019035600160201b8111156100c957600080fd5b8201836020820111156100db57600080fd5b803590602001918460018302840111600160201b831117156100fc57600080fd5b509092509050610303565b60405180846001600160401b0316815260200183815260200182600460200280838360005b8381101561014457818101518382015260200161012c565b50505050905001935050505060405180910390f35b610225600480360360e081101561016f57600080fd5b604082013590606083019083018360c0810160a0820135600160201b81111561019757600080fd5b8201836020820111156101a957600080fd5b803590602001918460018302840111600160201b831117156101ca57600080fd5b919390929091602081019035600160201b8111156101e757600080fd5b8201836020820111156101f957600080fd5b803590602001918460018302840111600160201b8311171561021a57600080fd5b5090925090506103c2565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561026657818101518382015260200161024e565b50505050905090810190601f1680156102935780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156102c65781810151838201526020016102ae565b50505050905090810190601f1680156102f35780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b60008061030e614fc8565b610316614fe6565b61039a8a8a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b9081908401838280828437600081840152601f19601f820116905080830192505050505050508f610487565b90506103a58161093e565b6103ae81610d54565b935093509350509750975097945050505050565b6060806103cd614fe6565b610451898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600081840152601f19601f820116905080830192505050505050508e610487565b905061045c8161093e565b6104698160400151610db7565b92506104788160600151610db7565b91505097509795505050505050565b61048f614fe6565b60008460008151811061049e57fe5b602001015160f81c60f81b60f81c90506000856001815181106104bd57fe5b602001015160f81c60f81b60f81c90506000866002815181106104dc57fe5b016020015160f81c9050600360606004840160ff166001600160401b038111801561050657600080fd5b5060405190808252806020026020018201604052801561054057816020015b61052d615078565b8152602001906001900390816105255790505b50905060608360040160ff166001600160401b038111801561056157600080fd5b5060405190808252806020026020018201604052801561059b57816020015b610588615078565b8152602001906001900390816105805790505b50905060005b8560ff168110156105d7576105b68b856110c3565b8483815181106105c257fe5b602090810291909101015293506001016105a1565b5060005b8460ff16811015610611576105f08b856110c3565b8383815181106105fc57fe5b602090810291909101015293506001016105db565b5061061a6150b5565b6106248b85611285565b809250819550505060008b858151811061063a57fe5b01602001516001959095019460f81c9050610653614fe6565b6001600160a01b038b35811682526020808d0135909116908201526040810183905261067e83611325565b6060820152608081018f90528d3560a08201526020808f013560c0830152600060e0830181905260408051808201825260ff8c811682528185018a905261010086019190915281518083019092528a8116825292810187905261012084015283821660018114610140850152918b1661016084015261018083018f90526101c083018e90526101e08301526101a08201879052158061072057508160ff166001145b6040518060400160405280600b81526020016a04241445f494d4d5f5459560ac1b815250906107cd5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561079257818101518382015260200161077a565b50505050905090810190601f1680156107bf5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506107d6615078565b60ff83166107f7576107f08a83604001516000015161138e565b9050610897565b6000865111604051806040016040528060068152602001654e4f5f494d4d60d01b815250906108675760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561079257818101518382015260200161077a565b506108948a8360400151600001518860018d0360ff168151811061088757fe5b60200260200101516113f2565b90505b6108a081611476565b60408301515260005b838a0360ff168110156108e8576108e08782815181106108c557fe5b602002602001015184604001516115e390919063ffffffff16565b6001016108a9565b5060005b8860ff168110156109295761092186828151811061090657fe5b602002602001015184604001516115fd90919063ffffffff16565b6001016108ec565b50909f9e505050505050505050505050505050565b6000806000612c6a61095785610160015160ff16611617565b935093509350935060008411806109715750846101400151155b80156109835750610100850151518410155b806109ab57508461014001518015610999575083155b80156109ab5750610100850151516001145b6040518060400160405280600a815260200169535441434b5f4d414e5960b01b81525090610a1a5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561079257818101518382015260200161077a565b50610120850151516040805180820190915260088152674155585f4d414e5960c01b602082015290841015610a905760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561079257818101518382015260200161077a565b5061010085015151841115610b4e57610aaf610aaa611d78565b611476565b610ac0866060015160200151611476565b146040518060400160405280600d81526020016c535441434b5f4d495353494e4760981b81525090610b335760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561079257818101518382015260200161077a565b50610b3f856005611dbf565b50610b4985611e34565b610c0e565b61012085015151831115610be957610b67610aaa611d78565b610b78866060015160400151611476565b146040518060400160405280600b81526020016a4155585f4d495353494e4760a81b81525090610b335760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561079257818101518382015260200161077a565b610bf38583611dbf565b15610c0157610b4985611e34565b610c0e858263ffffffff16565b846101e0015115610cb35760408051600160f81b6020808301919091526000602183018190526022808401919091528351808403909101815260429092019092528051910120606086015160c001511415610c7557610c708560600151611e3f565b610cb3565b60006101e0860152606085015160c081015190526101408501518015610c99575083155b610ca857610100850151600090525b610120850151600090525b60005b61010086015151811015610cff57610cf7866101000151602001518281518110610cdc57fe5b602002602001015187606001516115e390919063ffffffff16565b600101610cb6565b5060005b61012086015151811015610d4c57610d44866101200151602001518281518110610d2957fe5b602002602001015187606001516115fd90919063ffffffff16565b600101610d03565b505050505050565b600080610d5f614fc8565b8360e0015184608001516040518060800160405280610d818860400151611e49565b8152602001610d938860600151611e49565b81526020018760a0015181526020018760c001518152509250925092509193909250565b6060610dc68260000151611f0d565b610ddb610dd68460200151611476565b611f0d565b610deb610dd68560400151611476565b610dfb610dd68660600151611476565b610e0b610dd68760800151611476565b610e188760a00151611fdc565b610e258860c00151611f0d565b60405160200180806709ac2c6d0d2dcca560c31b81525060080188805190602001908083835b60208310610e6a5780518252601f199092019160209182019101610e4b565b51815160209384036101000a60001901801990921691161790526216100560e91b9190930190815289516003909101928a0191508083835b60208310610ec15780518252601f199092019160209182019101610ea2565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528851600390910192890191508083835b60208310610f185780518252601f199092019160209182019101610ef9565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528751600390910192880191508083835b60208310610f6f5780518252601f199092019160209182019101610f50565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528651600390910192870191508083835b60208310610fc65780518252601f199092019160209182019101610fa7565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528551600390910192860191508083835b6020831061101d5780518252601f199092019160209182019101610ffe565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528451600390910192850191508083835b602083106110745780518252601f199092019160209182019101611055565b6001836020036101000a0380198251168184511680821785525050505050509050018061148560f11b81525060020197505050505050505060405160208183030381529060405290505b919050565b60006110cd615078565b83518310611113576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b60008061112086866120b6565b9150915061112c6120dd565b60ff168160ff16141561116057600061114587846120e2565b90935090508261115482612150565b9450945050505061127e565b611168612210565b60ff168160ff16141561118a5761117f8683612215565b93509350505061127e565b6111926122b7565b60ff168160ff1614156111ba5760006111ab87846120e2565b909350905082611154826122bc565b6111c26123a8565b60ff168160ff1614156111d95761117f86836123ad565b6111e1612442565b60ff168160ff161015801561120257506111f9612447565b60ff168160ff16105b1561123e576000611211612442565b82039050606061122282898661244c565b909450905083611231826124f4565b955095505050505061127e565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b9250929050565b600061128f6150b5565b6112976150b5565b600060e08201819052806112ab87876120e2565b90965091506112ba87876123ad565b602085015295506112cb87876123ad565b604085015295506112dc87876110c3565b606085015295506112ed87876110c3565b608085015295506112fe87876120e2565b60a0850152955061130f87876120e2565b92845260c0840192909252509590945092505050565b61132d6150b5565b60405180610100016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e001518152509050919050565b611396615078565b6040805160608101825260ff8516815260208082018590528251600080825291810184526113e9938301916113e1565b6113ce615078565b8152602001906001900390816113c65790505b509052612635565b90505b92915050565b6113fa615078565b604080516001808252818301909252606091816020015b611419615078565b815260200190600190039081611411579050509050828160008151811061143c57fe5b602002602001018190525061146d60405180606001604052808760ff16815260200186815260200183815250612635565b95945050505050565b60006114806120dd565b60ff16826080015160ff1614156114a357815161149c906126c5565b90506110be565b6114ab612210565b60ff16826080015160ff1614156114c95761149c82602001516126e9565b6114d16123a8565b60ff16826080015160ff1614156114f357815160a083015161149c91906127de565b6114fb612442565b60ff16826080015160ff16141561153457611514615078565b611521836040015161282c565b905061152c81611476565b9150506110be565b61153c6129a1565b60ff16826080015160ff161415611555575080516110be565b61155d6122b7565b60ff16826080015160ff1614156115a2575060608082015160408051607b602080830191909152818301939093528151808203830181529301905281519101206110be565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b6115f18260200151826129a6565b82602001819052505050565b61160b8260400151826129a6565b82604001819052505050565b60008080612c6a600185148061162d5750600285145b806116385750600385145b156116525750600292506000915060039050612a24611d71565b60048514806116615750600685145b1561167b5750600292506000915060049050612c86611d71565b600585148061168a5750600785145b156116a45750600292506000915060079050612c86611d71565b60088514806116b35750600985145b156116cd5750600392506000915060049050612d58611d71565b600a8514156116eb5750600292506000915060199050612a24611d71565b600b8514156117095750600292506000915060079050612a24611d71565b60108514806117185750601185145b806117235750601285145b8061172e5750601385145b806117395750601685145b806117445750601785145b8061174f5750601885145b1561176857506002925060009150829050612a24611d71565b601485141561178557506002925060009150829050612e45611d71565b60158514156117a257506001925060009150829050612e9e611d71565b60198514156117bf57506001925060009150829050612ef0611d71565b601a8514806117ce5750601b85145b806117d95750601c85145b806117e45750601d85145b156117fe5750600292506000915060049050612a24611d71565b603085141561181b57506001925060009150829050612f36611d71565b603185141561183857506000925082915060019050612f48611d71565b603285141561185557506000925082915060019050612f5f611d71565b60338514156118735750600192506000915060029050612f76611d71565b60348514156118915750600192506000915060049050612f90611d71565b60358514156118af5750600292506000915060049050612fd1611d71565b60368514156118cc57506000925082915060029050613045611d71565b60378514156118e957506000925082915060019050613089611d71565b6038851415611906575060019250600091508290506130a5611d71565b6039851415611923575060009250600191508190506130bc611d71565b603a851415611940575060009250829150600290506130d3611d71565b603b85141561195d57506000925082915060019050612c83611d71565b603c85141561197a57506000925082915060019050613101611d71565b603d8514156119975750600192506000915082905061311d611d71565b60408514156119b457506001925060009150829050613161611d71565b60418514156119d25750600292506000915060019050613197611d71565b60428514156119f057506003925060009150600190506131f4611d71565b6043851415611a0e5750600292506000915060019050613278611d71565b6044851415611a2c57506003925060009150600190506132b7611d71565b6050851415611a495750600292506000915082905061331d611d71565b6051851415611a6757506003925060009150602890506133ba611d71565b6052851415611a85575060019250600091506002905061347e611d71565b6053851415611aa2575060019250829150600390506134c9611d71565b6054851415611ac0575060029250600191506029905061354b611d71565b6060851415611add57506000925082915060649050612c83611d71565b6061851415611afb5750600192506000915060649050613608611d71565b6072851415611b185750600092508291506028905061364f611d71565b6073851415611b3557506000925082915060059050613661611d71565b6074851415611b52575060009250829150600a905061366a611d71565b6075851415611b6f57506001925060009150829050613677611d71565b6076851415611b8c575060009250829150600190506136b2611d71565b6077851415611ba9575060009250829150601990506136cc611d71565b6078851415611bc7575060029250600091506019905061371d611d71565b6079851415611be55750600392506000915060199050613795611d71565b607b851415611c0357506001925060009150600a9050613826611d71565b6080851415611c2257506004925060009150614e20905061389c611d71565b6081851415611c4157506004925060009150610dac9050613a1e611d71565b6082851415611c6157506003925060009150620140509050613b5b611d71565b6083851415611c80575060019250600091506103e89050613c5f611d71565b6090851415611c9d57506001925060009150829050612f36611d71565b60a0851415611cba57506000925082915060019050613fa7611d71565b60208510801590611ccc575060248511155b15611d085760405162461bcd60e51b815260040180806020018281038252602e8152602001806151f4602e913960400191505060405180910390fd5b60a18510801590611d1a575060a68511155b80611d255750607085145b15611d615760405162461bcd60e51b815260040180806020018281038252602d815260200180615222602d913960400191505060405180910390fd5b5060009250829150600590506136615b9193509193565b611d80615078565b60408051600080825260208201909252611dba91611db4565b611da1615078565b815260200190600190039081611d995790505b506124f4565b905090565b6000816001600160401b0316836060015160a001511015611e04575060e0820180516005016001600160401b03169052606082015160001960a09091015260016113ec565b5060e0820180516001600160401b039083018116909152606083015160a0018051918316909103905260006113ec565b60016101e090910152565b600160e090910152565b600060028260e001511415611e60575060006110be565b60018260e001511415611e75575060016110be565b81516020830151611e8590611476565b611e928460400151611476565b611e9f8560600151611476565b611eac8660800151611476565b8660a001518760c00151604051602001808881526020018781526020018681526020018581526020018481526020018381526020018281526020019750505050505050506040516020818303038152906040528051906020012090506110be565b60408051818152606081810183529182919060208201818036833701905050905060005b6020811015611fd5576000848260208110611f4857fe5b1a60f881811b9250601080830480831b9360ff9091169091029003901b611f6e82613fe2565b858560020281518110611f7d57fe5b60200101906001600160f81b031916908160001a905350611f9d81613fe2565b858560020260010181518110611faf57fe5b60200101906001600160f81b031916908160001a9053505060019092019150611f319050565b5092915050565b606081806120035750506040805180820190915260018152600360fc1b60208201526110be565b8060005b811561201b57600101600a82049150612007565b6060816001600160401b038111801561203357600080fd5b506040519080825280601f01601f19166020018201604052801561205e576020820181803683370190505b50905060001982015b84156120ac57600a850660300160f81b8282806001900393508151811061208a57fe5b60200101906001600160f81b031916908160001a905350600a85049450612067565b5095945050505050565b600080826001018484815181106120c957fe5b016020015190925060f81c90509250929050565b600090565b600080828451101580156120fa575060208385510310155b612137576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b602083016121458585614013565b915091509250929050565b612158615078565b6040805160c08101825283815281516060810183526000808252602080830182905284518281528082018652939490850193908301916121ae565b61219b615078565b8152602001906001900390816121935790505b509052815260200160006040519080825280602002602001820160405280156121f157816020015b6121de615078565b8152602001906001900390816121d65790505b5081526000602082018190526040820152600160609091015292915050565b600190565b600061221f615078565b8260008061222b615078565b600061223789866120b6565b909550935061224689866120b6565b9095509250600160ff851614156122675761226189866110c3565b90955091505b612271898661406c565b9095509050600160ff8516141561229c578461228e8483856113f2565b96509650505050505061127e565b846122a7848361138e565b9650965050505050509250929050565b600c90565b6122c4615078565b6040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b038111801561230b57600080fd5b5060405190808252806020026020018201604052801561234557816020015b612332615078565b81526020019060019003908161232a5790505b5090528152602001600060405190808252806020026020018201604052801561238857816020015b612375615078565b81526020019060019003908161236d5790505b50815260208101849052600c604082015260016060909101529050919050565b600290565b60006123b7615078565b828451101580156123cc575060408385510310155b612409576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b600080612416868661406c565b909450915061242586856120e2565b909450905083612435838361407d565b9350935050509250929050565b600390565b600d90565b60006060828160ff87166001600160401b038111801561246b57600080fd5b506040519080825280602002602001820160405280156124a557816020015b612492615078565b81526020019060019003908161248a5790505b50905060005b8760ff168160ff1610156124e7576124c387846110c3565b838360ff16815181106124d257fe5b602090810291909101015292506001016124ab565b5090969095509350505050565b6124fc615078565b612506825161413c565b612557576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b835181101561258e5783818151811061257157fe5b602002602001015160a0015182019150808060010191505061255c565b506040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b03811180156125d657600080fd5b5060405190808252806020026020018201604052801561261057816020015b6125fd615078565b8152602001906001900390816125f55790505b5090528152602081019490945260006040850152600360608501526080909301525090565b61263d615078565b6040518060c001604052806000815260200183815260200160006001600160401b038111801561266c57600080fd5b506040519080825280602002602001820160405280156126a657816020015b612693615078565b81526020019060019003908161268b5790505b5081526000602082015260016040820181905260609091015292915050565b60408051602080820193909352815180820384018152908201909152805191012090565b60006002826040015151106126fa57fe5b60408201515161275d5761270c612210565b82600001518360200151604051602001808460ff1660f81b81526001018360ff1660f81b815260010182815260200193505050506040516020818303038152906040528051906020012090506110be565b612765612210565b826000015161278b846040015160008151811061277e57fe5b6020026020010151611476565b8460200151604051602001808560ff1660f81b81526001018460ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b60006127e8612442565b8383604051602001808460ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b612834615078565b600882511115612882576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b606082516001600160401b038111801561289b57600080fd5b506040519080825280602002602001820160405280156128c5578160200160208202803683370190505b508051909150600160005b82811015612928576128e786828151811061277e57fe5b8482815181106128f357fe5b60200260200101818152505085818151811061290b57fe5b602002602001015160a001518201915080806001019150506128d0565b506000835184604051602001808360ff1660f81b8152600101828051906020019060200280838360005b8381101561296a578181015183820152602001612952565b5050505090500192505050604051602081830303815290604052805190602001209050612997818361407d565b9695505050505050565b606490565b6129ae615078565b6040805160028082526060828101909352816020015b6129cc615078565b8152602001906001900390816129c457905050905082816000815181106129ef57fe5b60200260200101819052508381600181518110612a0857fe5b6020026020010181905250612a1c8161282c565b949350505050565b612a2c615078565b612a3a826101000151614143565b9050612a44615078565b612a52836101000151614143565b9050612a5d82614185565b1580612a6f5750612a6d81614185565b155b15612a8457612a7d83614190565b5050612c83565b8151815161016085015160009060ff1660011415612aa55750818101612c6c565b61016086015160ff1660021415612abf5750818102612c6c565b61016086015160ff1660031415612ad95750808203612c6c565b61016086015160ff16600a1415612af3575080820a612c6c565b61016086015160ff16600b1415612b0d575080820b612c6c565b61016086015160ff1660101415612b275750808210612c6c565b61016086015160ff1660111415612b415750808211612c6c565b61016086015160ff1660121415612b5b5750808212612c6c565b61016086015160ff1660131415612b755750808213612c6c565b61016086015160ff1660161415612b8f5750818116612c6c565b61016086015160ff1660171415612ba95750818117612c6c565b61016086015160ff1660181415612bc35750818118612c6c565b61016086015160ff16601a1415612bdd575080821a612c6c565b61016086015160ff16601b1415612bf7575080821b612c6c565b61016086015160ff16601c1415612c11575080821c612c6c565b61016086015160ff16601d1415612c2b575080821d612c6c565b61016086015160ff1660221415612c6a575060408051602080820185905281830184905282518083038401815260609092019092528051910120612c6c565bfe5b610d4c866101000151612c7e83612150565b614199565b50565b612c8e615078565b612c9c826101000151614143565b9050612ca6615078565b612cb4836101000151614143565b9050612cbf82614185565b1580612cd15750612ccf81614185565b155b80612cdb57508051155b15612ce957612a7d83614190565b8151815161016085015160009060ff1660041415612d0a5750808204612c6c565b61016086015160ff1660051415612d245750808205612c6c565b61016086015160ff1660061415612d3e5750808206612c6c565b61016086015160ff1660071415612c6a5750808207612c6c565b612d60615078565b612d6e826101000151614143565b9050612d78615078565b612d86836101000151614143565b9050612d90615078565b612d9e846101000151614143565b9050612da983614185565b1580612dbb5750612db982614185565b155b80612dcc5750612dca81614185565b155b80612dd657508051155b15612dec57612de484614190565b505050612c83565b82518251825161016087015160009060ff1660081415612e1157818385089050612e29565b61016088015160ff1660091415612c6a578183850990505b612e3b886101000151612c7e83612150565b5050505050505050565b612e4d615078565b612e5b826101000151614143565b9050612e65615078565b612e73836101000151614143565b9050612e99836101000151612c7e612e8a84611476565b612e9386611476565b146141c3565b505050565b612ea6615078565b612eb4826101000151614143565b9050612ebf81614185565b612ed257612ecc82614190565b50612c83565b8051610100830151811590612eea90612c7e83612150565b50505050565b612ef8615078565b612f06826101000151614143565b9050612f1181614185565b612f1e57612ecc82614190565b8051610100830151811990612eea90612c7e83612150565b612f44816101000151614143565b5050565b612c83816101000151826060015160800151614199565b612c83816101000151826060015160600151614199565b612f84816101000151614143565b60609182015190910152565b612f98615078565b612fa6826101000151614143565b9050612fb1816141e5565b612fbe57612ecc82614190565b612fc781611476565b6060830151525050565b612fd9615078565b612fe7826101000151614143565b9050612ff1615078565b612fff836101000151614143565b905061300a826141e5565b158061301c575061301a81614185565b155b1561302a57612a7d83614190565b805115612e995761303a82611476565b606084015152505050565b610100810151516000901580156130755750613062610aaa611d78565b613073836060015160200151611476565b145b9050612f44826101000151612c7e836141c3565b612c83816101000151612c7e83604001516000015160016141f2565b612c83816101200151612c7e836101000151614143565b612c83816101000151612c7e836101200151614143565b6101208101515160009015801561307557506130f0610aaa611d78565b613073836060015160400151611476565b612c83816101000151612c7e836060015160c0015160016141f2565b613125615078565b613133826101000151614143565b905061313e816141e5565b61314b57612ecc82614190565b61315481611476565b606083015160c001525050565b613169615078565b613177826101000151614143565b905061318882610100015182614199565b612f4482610100015182614199565b61319f615078565b6131ad826101000151614143565b90506131b7615078565b6131c5836101000151614143565b90506131d683610100015182614199565b6131e583610100015183614199565b612e9983610100015182614199565b6131fc615078565b61320a826101000151614143565b9050613214615078565b613222836101000151614143565b905061322c615078565b61323a846101000151614143565b905061324b84610100015182614199565b61325a84610100015183614199565b61326984610100015184614199565b612eea84610100015182614199565b613280615078565b61328e826101000151614143565b9050613298615078565b6132a6836101000151614143565b90506131e583610100015183614199565b6132bf615078565b6132cd826101000151614143565b90506132d7615078565b6132e5836101000151614143565b90506132ef615078565b6132fd846101000151614143565b905061330e84610100015184614199565b61326984610100015183614199565b613325615078565b613333826101000151614143565b905061333d615078565b61334b836101000151614143565b905061335682614185565b15806133685750613366816142b1565b155b806133825750613377816142be565b60ff16826000015110155b1561339057612a7d83614190565b612e9983610100015182604001518460000151815181106133ad57fe5b6020026020010151614199565b6133c2615078565b6133d0826101000151614143565b90506133da615078565b6133e8836101000151614143565b90506133f2615078565b613400846101000151614143565b905061340b83614185565b158061341d575061341b826142b1565b155b80613437575061342c826142be565b60ff16836000015110155b1561344557612de484614190565b60408201518351815183918391811061345a57fe5b6020026020010181905250613477856101000151612c7e836124f4565b5050505050565b613486615078565b613494826101000151614143565b905061349f816142b1565b6134ac57612ecc82614190565b612f44826101000151612c7e6134c1846142be565b60ff16612150565b6134d1615078565b6134df826101000151614143565b90506134e9615078565b6134f7836101200151614143565b905061350282614185565b15806135145750613512816142b1565b155b8061352e5750613523816142be565b60ff16826000015110155b1561353c57612a7d83614190565b61339083610120015182614199565b613553615078565b613561826101000151614143565b905061356b615078565b613579836101000151614143565b9050613583615078565b613591846101200151614143565b905061359c816142b1565b15806135ae57506135ac83614185565b155b806135c857506135bd816142be565b60ff16836000015110155b156135d657612de484614190565b6040810151835181518491839181106135eb57fe5b6020026020010181905250613477856101200151612c7e836124f4565b8060c0015161361e610aaa836101000151614143565b604080516020808201949094528082019290925280518083038201815260609092019052805191012060c090910152565b612c83816101000151612c7e836142e5565b612c8381614190565b612c838160600151614d31565b61367f615078565b61368d826101000151614143565b905061369881614185565b6136a557612ecc82614190565b51606082015160a0015250565b612c83816101000151612c7e836060015160a00151612150565b61010081015160408051600160f81b6020808301919091526000602183018190526022808401919091528351808403909101815260429092019092528051910120612c839190612c7e9060016141f2565b613725615078565b613733826101000151614143565b905061373d615078565b61374b836101000151614143565b905061375682614185565b15806137685750613766816141e5565b155b1561377657612a7d83614190565b612e99836101000151612c7e846000015161379085611476565b61138e565b61379d615078565b6137ab826101000151614143565b90506137b5615078565b6137c3836101000151614143565b90506137cd615078565b6137db846101000151614143565b90506137e683614185565b15806137f857506137f6816141e5565b155b1561380657612de484614190565b612eea846101000151612c7e856000015161382085611476565b866113f2565b61382e615078565b61383c826101000151614143565b905061384781614185565b61385457612ecc82614190565b60408051600080825260208201909252606091613887565b613874615078565b81526020019060019003908161386c5790505b509050612e99836101000151612c7e836124f4565b6138a4615078565b6138b2826101000151614143565b90506138bc615078565b6138ca836101000151614143565b90506138d4615078565b6138e2846101000151614143565b90506138ec615078565b6138fa856101000151614143565b905061390584614185565b1580613917575061391583614185565b155b80613928575061392682614185565b155b80613939575061393781614185565b155b156139505761394785614190565b50505050612c83565b8351835183511580159061396657508351600114155b156139895761397e876101000151612c7e6000612150565b505050505050612c83565b83518351604080516000808252602080830180855285905260ff601b9096019586168385015260608301889052608083018790529251909260019260a080820193601f1981019281900390910190855afa1580156139eb573d6000803e3d6000fd5b505050602060405103519050613a128a6101000151612c7e836001600160a01b0316612150565b50505050505050505050565b613a26615078565b613a34826101000151614143565b9050613a3e615078565b613a4c836101000151614143565b9050613a56615078565b613a64846101000151614143565b9050613a6e615078565b613a7c856101000151614143565b9050613a8784614185565b1580613a995750613a9783614185565b155b80613aaa5750613aa882614185565b155b80613abb5750613ab981614185565b155b15613ac95761394785614190565b613ad1614fc8565b5060408051608081018252855181528451602082015283519181019190915281516060820152613aff615113565b600060408260808560066107d05a03fa905080613b2b57613b1f88614190565b50505050505050612c83565b610100880151613b4690612c7e8460015b6020020151612150565b610100880151612e3b90612c7e846000613b3c565b613b63615078565b613b71826101000151614143565b9050613b7b615078565b613b89836101000151614143565b9050613b93615078565b613ba1846101000151614143565b9050613bac83614185565b1580613bbe5750613bbc82614185565b155b80613bcf5750613bcd81614185565b155b15613bdd57612de484614190565b613be5615131565b50604080516060810182528451815283516020820152825191810191909152613c0c615113565b600060408260808560076107d05a03fa905080613c2c5761397e87614190565b610100870151613c4190612c7e846001613b3c565b610100870151613c5690612c7e846000613b3c565b50505050505050565b613c67615078565b613c75826101000151614143565b9050613c7f61514f565b6000805b601e811015613d1157613c95846142b1565b613ca25760019150613d11565b60408401518051613cb35750613d11565b8051600214613cc6576001925050613d11565b80600081518110613cd357fe5b60200260200101518483601e8110613ce757fe5b6020020152805181906001908110613cfb57fe5b6020908102919091010151945050600101613c83565b613d20856207a1208302611dbf565b15613d445760e0850180516103e719016001600160401b0316905261394785611e34565b8180613d565750613d54846142b1565b155b80613d65575060408401515115155b15613d735761394785614190565b613d7b61517d565b60005b82811015613f5857613d8e615078565b8582601e8110613d9a57fe5b60200201519050613daa816142b1565b613db757613b1f88614190565b60408101518051600614613ddb57613dce89614190565b5050505050505050612c83565b60005b6006811015613e2657613e03828281518110613df657fe5b6020026020010151614185565b613e1e57613e108a614190565b505050505050505050612c83565b600101613dde565b5080600081518110613e3457fe5b602002602001015160000151848460060260b48110613e4f57fe5b6020020152805181906001908110613e6357fe5b602002602001015160000151848460060260010160b48110613e8157fe5b6020020152805181906003908110613e9557fe5b602002602001015160000151848460060260020160b48110613eb357fe5b6020020152805181906002908110613ec757fe5b602002602001015160000151848460060260030160b48110613ee557fe5b6020020152805181906005908110613ef957fe5b602002602001015160000151848460060260040160b48110613f1757fe5b6020020152805181906004908110613f2b57fe5b602002602001015160000151848460060260050160b48110613f4957fe5b60200201525050600101613d7e565b5060c08202613f6561519c565b6000602082848660086107d05a03fa905080613f8457613dce89614190565b6101008901518251613f9c9190612c7e9015156141c3565b505050505050505050565b612c83816101000151612c7e6000801b60405160200180828152602001915050604051602081830303815290604052805190602001206122bc565b6000600a60f883901c1015614002578160f81c60300160f81b90506110be565b8160f81c60570160f81b90506110be565b60008160200183511015614063576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b600080602083016121458585614013565b614085615078565b6040805160c08101825284815281516060810183526000808252602080830182905284518281528082018652939490850193908301916140db565b6140c8615078565b8152602001906001900390816140c05790505b5090528152602001600060405190808252806020026020018201604052801561411e57816020015b61410b615078565b8152602001906001900390816141035790505b50815260006020820152600260408201526060019290925250919050565b6008101590565b61414b615078565b614153615078565b826020015160018460000151038151811061416a57fe5b60209081029190910101518351600019018452915050919050565b6080015160ff161590565b612c8381611e34565b8082602001518360000151815181106141ae57fe5b60209081029190910101525080516001019052565b6141cb615078565b81156141db5761149c6001612150565b61149c6000612150565b6080015160ff1660011490565b6141fa615078565b6040805160c0810182528481528151606081018352600080825260208083018290528451828152808201865293949085019390830191614250565b61423d615078565b8152602001906001900390816142355790505b5090528152602001600060405190808252806020026020018201604052801561429357816020015b614280615078565b8152602001906001900390816142785790505b50815260006020820152606460408201526060019290925250919050565b6080015160ff1660031490565b608081015160009060ff16600314156142dd57506040810151516110be565b5060016110be565b6142ed615078565b61018082015160408051600880825261012082019092526000918291606091816020015b614319615078565b815260200190600190039081614311579050509050600084876101a001518151811061434157fe5b01602001516101a0880180516001019081905260f89190911c9150600090819081908190614370908a90614d3b565b6101a08c0180516014019081905290915061438c908a906120e2565b6101a08d0182905294506143a1908a906120e2565b6101a08d0182905293506143b6908a906120e2565b6101a08d0182905297506143cb908a906120e2565b6101a08d0182905292506000906143e3908b906120e2565b6101a08e0182905291506000906143fc908c9084614d9b565b6101a08e0180518d810160200185902085820190925291925061442489868a8a8f8b87614dc4565b9b506144328960ff16612150565b8a60008151811061443f57fe5b602002602001018190525061445388612150565b8a60018151811061446057fe5b602002602001018190525061447487612150565b8a60028151811061448157fe5b602002602001018190525061449e856001600160a01b0316612150565b8a6003815181106144ab57fe5b60200260200101819052506144bf8b612150565b8a6004815181106144cc57fe5b60200260200101819052506144e086612150565b8a6005815181106144ed57fe5b602002602001018190525061450184612150565b8a60068151811061450e57fe5b60200260200101819052506145248360016141f2565b8a60078151811061453157fe5b6020026020010181905250505050505050505050600061455685886101a001516120e2565b6101a0890182905286519092506000918791811061457057fe5b01602001516101a089018051600101905260f81c905080158061459657508060ff166001145b6145d8576040805162461bcd60e51b815260206004820152600e60248201526d1254d7d111531056515117d5905360921b604482015290519081900360640190fd5b60006145e9878a6101a001516120e2565b6101a08b0191909152905060ff82166146b057604080517129b2b8bab2b731b2b91036b2b9b9b0b3b29d60711b60208083019190915260328201939093526052810187905260728082018990528251808303909101815260929091019091528051910120608089015185146146a5576040805162461bcd60e51b815260206004820152601b60248201527f57524f4e475f53455155454e4345525f4d53475f5345515f4e554d0000000000604482015290519081900360640190fd5b600190940193614a27565b60008060006146c48a8d6101a001516120e2565b6101a08e0182905293506146d9908b906120e2565b6101a08e0182905292506146ee908b906120e2565b6101a08e01919091526020808e01516040805163d9dd67ab60e01b81526000198501600482015290519394506000936001600160a01b039092169263d9dd67ab92602480840193829003018186803b15801561474957600080fd5b505afa15801561475d573d6000803e3d6000fd5b505050506040513d602081101561477357600080fd5b50519050828910156147bc576040805162461bcd60e51b815260206004820152600d60248201526c1111531056515117d4d5105495609a1b604482015290519081900360640190fd5b8189106147fe576040805162461bcd60e51b815260206004820152600b60248201526a1111531056515117d1539160aa1b604482015290519081900360640190fd5b60008915614880578d602001516001600160a01b031663d9dd67ab60018c036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561485157600080fd5b505afa158015614865573d6000803e3d6000fd5b505050506040513d602081101561487b57600080fd5b505190505b8d602001516001600160a01b031663d9dd67ab8b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156148c857600080fd5b505afa1580156148dc573d6000803e3d6000fd5b505050506040513d60208110156148f257600080fd5b50516148fe828d614e3a565b1461493e576040805162461bcd60e51b815260206004820152600b60248201526a44454c415945445f41434360a81b604482015290519081900360640190fd5b61494d8a600160ff1b17612150565b8960048151811061495a57fe5b60200260200101819052508d6080015185858c0301146149c1576040805162461bcd60e51b815260206004820152601960248201527f57524f4e475f44454c415945445f4d53475f5345515f4e554d00000000000000604482015290519081900360640190fd5b5060408051702232b630bcb2b21036b2b9b9b0b3b2b99d60791b602080830191909152603182019790975260518101869052607181018590526091810184905260b1808201939093528151808203909301835260d1019052805194019390932092030194505b86896101a0015181518110614a3857fe5b016020015160f81c91506002821415614a5057614c57565b60ff82161580614a6357508160ff166001145b614aa9576040805162461bcd60e51b815260206004820152601260248201527114915357d254d7d111531056515117d5905360721b604482015290519081900360640190fd5b6101a089018051600101905260ff8216614b36576000614ace888b6101a001516120e2565b6101a08c0191909152604080517129b2b8bab2b731b2b91036b2b9b9b0b3b29d60711b60208083019190915260328201959095526052810189905260728082019390935281518082039093018352609201905280519201919091206001909501949050614c52565b600080614b48898c6101a001516120e2565b6101a08d018290529250614b5d908a906120e2565b8c6101a001819350828152505050828783838e602001516001600160a01b031663d9dd67ab600187036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614bba57600080fd5b505afa158015614bce573d6000803e3d6000fd5b505050506040513d6020811015614be457600080fd5b505160408051702232b630bcb2b21036b2b9b9b0b3b2b99d60791b602082810191909152603182019790975260518101959095526071850193909352609184019190915260b1808401919091528151808403909101815260d190920190528051910120919003959095019490505b614a27565b88600001516001600160a01b031663d9dd67ab846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614c9f57600080fd5b505afa158015614cb3573d6000803e3d6000fd5b505050506040513d6020811015614cc957600080fd5b50518114614d10576040805162461bcd60e51b815260206004820152600f60248201526e57524f4e475f42415443485f41434360881b604482015290519081900360640190fd5b6080890180516001019052614d24846124f4565b9998505050505050505050565b600260e090910152565b60008160140183511015614d8b576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b500160200151600160601b900490565b600080614db68584860186614daf87614e66565b6001614e91565b50905061146d607b82614e3a565b6040805160f89890981b6001600160f81b0319166020808a019190915260609790971b6bffffffffffffffffffffffff19166021890152603588019590955260558701939093526075860191909152609585015260b5808501919091528151808503909101815260d59093019052815191012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600060018211614e78575060016110be565b614e8760026001840104614e66565b60020290506110be565b60008060208411614ee557858510614eb857614ead60006126c5565b600191509150614f5f565b6000614ecd614ec889888a614f69565b6126c5565b905080614eda60006126c5565b909350149050614f5f565b600080614eff8989600289048a0160028a5b046000614e91565b91509150808015614f0d5750845b15614f2d57614f2289898960028a0489614e91565b935093505050614f5f565b600080614f3e8b8b8b60028c614ef7565b91509150614f4c8285614e3a565b818015614f565750835b95509550505050505b9550959350505050565b600080805b6020811015614fbf57600882901b915060008186018511614f90576000614fae565b8682870181518110614f9e57fe5b01602001516001600160f81b0319165b60f81c929092179150600101614f6e565b50949350505050565b60405180608001604052806004906020820280368337509192915050565b6040805161020081018252600080825260208201529081016150066150b5565b81526020016150136150b5565b81526000602082018190526040820181905260608201819052608082015260a00161503c6151ba565b81526020016150496151ba565b81526000602082018190526040820181905260608083018190526080830182905260a083015260c09091015290565b6040518060c00160405280600081526020016150926151d4565b815260606020820181905260006040830181905290820181905260809091015290565b60408051610100810190915260008152602081016150d1615078565b81526020016150de615078565b81526020016150eb615078565b81526020016150f8615078565b81526000602082018190526040820181905260609091015290565b60405180604001604052806002906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b604051806103c00160405280601e905b615167615078565b81526020019060019003908161515f5790505090565b60405180611680016040528060b4906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b604051806040016040528060008152602001606081525090565b604080516060808201835260008083526020830152918101919091529056fe75736520616e6f7468657220636f6e747261637420746f2068616e646c652068617368696e67206f70636f64657375736520616e6f7468657220636f6e747261637420746f2068616e646c6520627566666572206f70636f646573a2646970667358221220bd6c7b6830d82c4f9109c43b73fca5c9095789fa7956dc2274d5c1df29379cfd64736f6c634300060c0033"

// DeployOneStepProof deploys a new Ethereum contract, binding an instance of OneStepProof to it.
func DeployOneStepProof(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OneStepProof, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProofABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OneStepProofBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneStepProof{OneStepProofCaller: OneStepProofCaller{contract: contract}, OneStepProofTransactor: OneStepProofTransactor{contract: contract}, OneStepProofFilterer: OneStepProofFilterer{contract: contract}}, nil
}

// OneStepProof is an auto generated Go binding around an Ethereum contract.
type OneStepProof struct {
	OneStepProofCaller     // Read-only binding to the contract
	OneStepProofTransactor // Write-only binding to the contract
	OneStepProofFilterer   // Log filterer for contract events
}

// OneStepProofCaller is an auto generated read-only Go binding around an Ethereum contract.
type OneStepProofCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProofTransactor is an auto generated write-only Go binding around an Ethereum contract.
type OneStepProofTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProofFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneStepProofFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProofSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneStepProofSession struct {
	Contract     *OneStepProof     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneStepProofCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneStepProofCallerSession struct {
	Contract *OneStepProofCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// OneStepProofTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneStepProofTransactorSession struct {
	Contract     *OneStepProofTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// OneStepProofRaw is an auto generated low-level Go binding around an Ethereum contract.
type OneStepProofRaw struct {
	Contract *OneStepProof // Generic contract binding to access the raw methods on
}

// OneStepProofCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneStepProofCallerRaw struct {
	Contract *OneStepProofCaller // Generic read-only contract binding to access the raw methods on
}

// OneStepProofTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneStepProofTransactorRaw struct {
	Contract *OneStepProofTransactor // Generic write-only contract binding to access the raw methods on
}

// NewOneStepProof creates a new instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProof(address common.Address, backend bind.ContractBackend) (*OneStepProof, error) {
	contract, err := bindOneStepProof(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneStepProof{OneStepProofCaller: OneStepProofCaller{contract: contract}, OneStepProofTransactor: OneStepProofTransactor{contract: contract}, OneStepProofFilterer: OneStepProofFilterer{contract: contract}}, nil
}

// NewOneStepProofCaller creates a new read-only instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProofCaller(address common.Address, caller bind.ContractCaller) (*OneStepProofCaller, error) {
	contract, err := bindOneStepProof(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProofCaller{contract: contract}, nil
}

// NewOneStepProofTransactor creates a new write-only instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProofTransactor(address common.Address, transactor bind.ContractTransactor) (*OneStepProofTransactor, error) {
	contract, err := bindOneStepProof(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProofTransactor{contract: contract}, nil
}

// NewOneStepProofFilterer creates a new log filterer instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProofFilterer(address common.Address, filterer bind.ContractFilterer) (*OneStepProofFilterer, error) {
	contract, err := bindOneStepProof(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneStepProofFilterer{contract: contract}, nil
}

// bindOneStepProof binds a generic wrapper to an already deployed contract.
func bindOneStepProof(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProofABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof *OneStepProofRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof.Contract.OneStepProofCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof *OneStepProofRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof.Contract.OneStepProofTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof *OneStepProofRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof.Contract.OneStepProofTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof *OneStepProofCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof *OneStepProofTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof *OneStepProofTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x47dda1d6.
//
// Solidity: function executeStep(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 afterMessagesRead, bytes32[4] fields)
func (_OneStepProof *OneStepProofCaller) ExecuteStep(opts *bind.CallOpts, bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	AfterMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	var out []interface{}
	err := _OneStepProof.contract.Call(opts, &out, "executeStep", bridges, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		Gas               uint64
		AfterMessagesRead *big.Int
		Fields            [4][32]byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Gas = *abi.ConvertType(out[0], new(uint64)).(*uint64)
	outstruct.AfterMessagesRead = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Fields = *abi.ConvertType(out[2], new([4][32]byte)).(*[4][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x47dda1d6.
//
// Solidity: function executeStep(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 afterMessagesRead, bytes32[4] fields)
func (_OneStepProof *OneStepProofSession) ExecuteStep(bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	AfterMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	return _OneStepProof.Contract.ExecuteStep(&_OneStepProof.CallOpts, bridges, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x47dda1d6.
//
// Solidity: function executeStep(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 afterMessagesRead, bytes32[4] fields)
func (_OneStepProof *OneStepProofCallerSession) ExecuteStep(bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	AfterMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	return _OneStepProof.Contract.ExecuteStep(&_OneStepProof.CallOpts, bridges, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0xeba67f6e.
//
// Solidity: function executeStepDebug(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof *OneStepProofCaller) ExecuteStepDebug(opts *bind.CallOpts, bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	var out []interface{}
	err := _OneStepProof.contract.Call(opts, &out, "executeStepDebug", bridges, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		StartMachine string
		AfterMachine string
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.StartMachine = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.AfterMachine = *abi.ConvertType(out[1], new(string)).(*string)

	return *outstruct, err

}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0xeba67f6e.
//
// Solidity: function executeStepDebug(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof *OneStepProofSession) ExecuteStepDebug(bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof.Contract.ExecuteStepDebug(&_OneStepProof.CallOpts, bridges, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0xeba67f6e.
//
// Solidity: function executeStepDebug(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof *OneStepProofCallerSession) ExecuteStepDebug(bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof.Contract.ExecuteStepDebug(&_OneStepProof.CallOpts, bridges, initialMessagesRead, accs, proof, bproof)
}
