// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OneStepProofABI is the input ABI used to generate the binding from.
const OneStepProofABI = "[{\"inputs\":[{\"internalType\":\"address[2]\",\"name\":\"bridges\",\"type\":\"address[2]\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"afterMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[4]\",\"name\":\"fields\",\"type\":\"bytes32[4]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[2]\",\"name\":\"bridges\",\"type\":\"address[2]\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStepDebug\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"startMachine\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"afterMachine\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// OneStepProofFuncSigs maps the 4-byte function signature to its string representation.
var OneStepProofFuncSigs = map[string]string{
	"47dda1d6": "executeStep(address[2],uint256,bytes32[2],bytes,bytes)",
	"eba67f6e": "executeStepDebug(address[2],uint256,bytes32[2],bytes,bytes)",
}

// OneStepProofBin is the compiled bytecode used for deploying new contracts.
var OneStepProofBin = "0x608060405234801561001057600080fd5b50615281806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806347dda1d61461003b578063eba67f6e14610159575b600080fd5b610107600480360360e081101561005157600080fd5b604082013590606083019083018360c0810160a0820135600160201b81111561007957600080fd5b82018360208201111561008b57600080fd5b803590602001918460018302840111600160201b831117156100ac57600080fd5b919390929091602081019035600160201b8111156100c957600080fd5b8201836020820111156100db57600080fd5b803590602001918460018302840111600160201b831117156100fc57600080fd5b509092509050610303565b60405180846001600160401b0316815260200183815260200182600460200280838360005b8381101561014457818101518382015260200161012c565b50505050905001935050505060405180910390f35b610225600480360360e081101561016f57600080fd5b604082013590606083019083018360c0810160a0820135600160201b81111561019757600080fd5b8201836020820111156101a957600080fd5b803590602001918460018302840111600160201b831117156101ca57600080fd5b919390929091602081019035600160201b8111156101e757600080fd5b8201836020820111156101f957600080fd5b803590602001918460018302840111600160201b8311171561021a57600080fd5b5090925090506103c2565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561026657818101518382015260200161024e565b50505050905090810190601f1680156102935780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156102c65781810151838201526020016102ae565b50505050905090810190601f1680156102f35780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b60008061030e614fc5565b610316614fe3565b61039a8a8a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b9081908401838280828437600081840152601f19601f820116905080830192505050505050508f610487565b90506103a581610936565b6103ae81610d4c565b935093509350509750975097945050505050565b6060806103cd614fe3565b610451898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600081840152601f19601f820116905080830192505050505050508e610487565b905061045c81610936565b6104698160400151610daf565b92506104788160600151610daf565b91505097509795505050505050565b61048f614fe3565b60008460008151811061049e57fe5b602001015160f81c60f81b60f81c90506000856001815181106104bd57fe5b602001015160f81c60f81b60f81c90506000866002815181106104dc57fe5b016020015160f81c9050600360606004840160ff166001600160401b038111801561050657600080fd5b5060405190808252806020026020018201604052801561054057816020015b61052d615075565b8152602001906001900390816105255790505b50905060608360040160ff166001600160401b038111801561056157600080fd5b5060405190808252806020026020018201604052801561059b57816020015b610588615075565b8152602001906001900390816105805790505b50905060005b8560ff168110156105d7576105b68b856110bb565b8483815181106105c257fe5b602090810291909101015293506001016105a1565b5060005b8460ff16811015610611576105f08b856110bb565b8383815181106105fc57fe5b602090810291909101015293506001016105db565b5061061a6150b2565b6106248b8561127d565b809250819550505060008b858151811061063a57fe5b01602001516001959095019460f81c9050610653614fe3565b6001600160a01b038b35168082526020820152604081018390526106768361131d565b6060820152608081018f90528d3560a08201526020808f013560c0830152600060e0830181905260408051808201825260ff8c811682528185018a905261010086019190915281518083019092528a8116825292810187905261012084015283821660018114610140850152918b1661016084015261018083018f90526101c083018e90526101e08301526101a08201879052158061071857508160ff166001145b6040518060400160405280600b81526020016a04241445f494d4d5f5459560ac1b815250906107c55760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561078a578181015183820152602001610772565b50505050905090810190601f1680156107b75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506107ce615075565b60ff83166107ef576107e88a836040015160000151611386565b905061088f565b6000865111604051806040016040528060068152602001654e4f5f494d4d60d01b8152509061085f5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561078a578181015183820152602001610772565b5061088c8a8360400151600001518860018d0360ff168151811061087f57fe5b60200260200101516113ea565b90505b6108988161146e565b60408301515260005b838a0360ff168110156108e0576108d88782815181106108bd57fe5b602002602001015184604001516115db90919063ffffffff16565b6001016108a1565b5060005b8860ff16811015610921576109198682815181106108fe57fe5b602002602001015184604001516115f590919063ffffffff16565b6001016108e4565b50909f9e505050505050505050505050505050565b6000806000612c6261094f85610160015160ff1661160f565b935093509350935060008411806109695750846101400151155b801561097b5750610100850151518410155b806109a357508461014001518015610991575083155b80156109a35750610100850151516001145b6040518060400160405280600a815260200169535441434b5f4d414e5960b01b81525090610a125760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561078a578181015183820152602001610772565b50610120850151516040805180820190915260088152674155585f4d414e5960c01b602082015290841015610a885760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561078a578181015183820152602001610772565b5061010085015151841115610b4657610aa7610aa2611d70565b61146e565b610ab886606001516020015161146e565b146040518060400160405280600d81526020016c535441434b5f4d495353494e4760981b81525090610b2b5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561078a578181015183820152602001610772565b50610b37856005611db7565b50610b4185611e2c565b610c06565b61012085015151831115610be157610b5f610aa2611d70565b610b7086606001516040015161146e565b146040518060400160405280600b81526020016a4155585f4d495353494e4760a81b81525090610b2b5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561078a578181015183820152602001610772565b610beb8583611db7565b15610bf957610b4185611e2c565b610c06858263ffffffff16565b846101e0015115610cab5760408051600160f81b6020808301919091526000602183018190526022808401919091528351808403909101815260429092019092528051910120606086015160c001511415610c6d57610c688560600151611e37565b610cab565b60006101e0860152606085015160c081015190526101408501518015610c91575083155b610ca057610100850151600090525b610120850151600090525b60005b61010086015151811015610cf757610cef866101000151602001518281518110610cd457fe5b602002602001015187606001516115db90919063ffffffff16565b600101610cae565b5060005b61012086015151811015610d4457610d3c866101200151602001518281518110610d2157fe5b602002602001015187606001516115f590919063ffffffff16565b600101610cfb565b505050505050565b600080610d57614fc5565b8360e0015184608001516040518060800160405280610d798860400151611e41565b8152602001610d8b8860600151611e41565b81526020018760a0015181526020018760c001518152509250925092509193909250565b6060610dbe8260000151611f05565b610dd3610dce846020015161146e565b611f05565b610de3610dce856040015161146e565b610df3610dce866060015161146e565b610e03610dce876080015161146e565b610e108760a00151611fd4565b610e1d8860c00151611f05565b60405160200180806709ac2c6d0d2dcca560c31b81525060080188805190602001908083835b60208310610e625780518252601f199092019160209182019101610e43565b51815160209384036101000a60001901801990921691161790526216100560e91b9190930190815289516003909101928a0191508083835b60208310610eb95780518252601f199092019160209182019101610e9a565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528851600390910192890191508083835b60208310610f105780518252601f199092019160209182019101610ef1565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528751600390910192880191508083835b60208310610f675780518252601f199092019160209182019101610f48565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528651600390910192870191508083835b60208310610fbe5780518252601f199092019160209182019101610f9f565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528551600390910192860191508083835b602083106110155780518252601f199092019160209182019101610ff6565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528451600390910192850191508083835b6020831061106c5780518252601f19909201916020918201910161104d565b6001836020036101000a0380198251168184511680821785525050505050509050018061148560f11b81525060020197505050505050505060405160208183030381529060405290505b919050565b60006110c5615075565b8351831061110b576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b60008061111886866120ae565b915091506111246120d5565b60ff168160ff16141561115857600061113d87846120da565b90935090508261114c82612148565b94509450505050611276565b611160612208565b60ff168160ff16141561118257611177868361220d565b935093505050611276565b61118a6122af565b60ff168160ff1614156111b25760006111a387846120da565b90935090508261114c826122b4565b6111ba6123a0565b60ff168160ff1614156111d15761117786836123a5565b6111d961243a565b60ff168160ff16101580156111fa57506111f161243f565b60ff168160ff16105b1561123657600061120961243a565b82039050606061121a828986612444565b909450905083611229826124ec565b9550955050505050611276565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b9250929050565b60006112876150b2565b61128f6150b2565b600060e08201819052806112a387876120da565b90965091506112b287876123a5565b602085015295506112c387876123a5565b604085015295506112d487876110bb565b606085015295506112e587876110bb565b608085015295506112f687876120da565b60a0850152955061130787876120da565b92845260c0840192909252509590945092505050565b6113256150b2565b60405180610100016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e001518152509050919050565b61138e615075565b6040805160608101825260ff8516815260208082018590528251600080825291810184526113e1938301916113d9565b6113c6615075565b8152602001906001900390816113be5790505b50905261262d565b90505b92915050565b6113f2615075565b604080516001808252818301909252606091816020015b611411615075565b815260200190600190039081611409579050509050828160008151811061143457fe5b602002602001018190525061146560405180606001604052808760ff1681526020018681526020018381525061262d565b95945050505050565b60006114786120d5565b60ff16826080015160ff16141561149b578151611494906126bd565b90506110b6565b6114a3612208565b60ff16826080015160ff1614156114c15761149482602001516126e1565b6114c96123a0565b60ff16826080015160ff1614156114eb57815160a083015161149491906127d6565b6114f361243a565b60ff16826080015160ff16141561152c5761150c615075565b6115198360400151612824565b90506115248161146e565b9150506110b6565b611534612999565b60ff16826080015160ff16141561154d575080516110b6565b6115556122af565b60ff16826080015160ff16141561159a575060608082015160408051607b602080830191909152818301939093528151808203830181529301905281519101206110b6565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b6115e982602001518261299e565b82602001819052505050565b61160382604001518261299e565b82604001819052505050565b60008080612c6260018514806116255750600285145b806116305750600385145b1561164a5750600292506000915060039050612a1c611d69565b60048514806116595750600685145b156116735750600292506000915060049050612c7e611d69565b60058514806116825750600785145b1561169c5750600292506000915060079050612c7e611d69565b60088514806116ab5750600985145b156116c55750600392506000915060049050612d50611d69565b600a8514156116e35750600292506000915060199050612a1c611d69565b600b8514156117015750600292506000915060079050612a1c611d69565b60108514806117105750601185145b8061171b5750601285145b806117265750601385145b806117315750601685145b8061173c5750601785145b806117475750601885145b1561176057506002925060009150829050612a1c611d69565b601485141561177d57506002925060009150829050612e3d611d69565b601585141561179a57506001925060009150829050612e96611d69565b60198514156117b757506001925060009150829050612ee8611d69565b601a8514806117c65750601b85145b806117d15750601c85145b806117dc5750601d85145b156117f65750600292506000915060049050612a1c611d69565b603085141561181357506001925060009150829050612f2e611d69565b603185141561183057506000925082915060019050612f40611d69565b603285141561184d57506000925082915060019050612f57611d69565b603385141561186b5750600192506000915060029050612f6e611d69565b60348514156118895750600192506000915060049050612f88611d69565b60358514156118a75750600292506000915060049050612fc9611d69565b60368514156118c45750600092508291506002905061303d611d69565b60378514156118e157506000925082915060019050613081611d69565b60388514156118fe5750600192506000915082905061309d611d69565b603985141561191b575060009250600191508190506130b4611d69565b603a851415611938575060009250829150600290506130cb611d69565b603b85141561195557506000925082915060019050612c7b611d69565b603c851415611972575060009250829150600190506130f9611d69565b603d85141561198f57506001925060009150829050613115611d69565b60408514156119ac57506001925060009150829050613159611d69565b60418514156119ca575060029250600091506001905061318f611d69565b60428514156119e857506003925060009150600190506131ec611d69565b6043851415611a065750600292506000915060019050613270611d69565b6044851415611a2457506003925060009150600190506132af611d69565b6050851415611a4157506002925060009150829050613315611d69565b6051851415611a5f57506003925060009150602890506133b2611d69565b6052851415611a7d5750600192506000915060029050613476611d69565b6053851415611a9a575060019250829150600390506134c1611d69565b6054851415611ab85750600292506001915060299050613543611d69565b6060851415611ad557506000925082915060649050612c7b611d69565b6061851415611af35750600192506000915060649050613600611d69565b6072851415611b1057506000925082915060289050613647611d69565b6073851415611b2d57506000925082915060059050613659611d69565b6074851415611b4a575060009250829150600a9050613662611d69565b6075851415611b675750600192506000915082905061366f611d69565b6076851415611b84575060009250829150600190506136aa611d69565b6077851415611ba1575060009250829150601990506136c4611d69565b6078851415611bbf5750600292506000915060199050613715611d69565b6079851415611bdd575060039250600091506019905061378d611d69565b607b851415611bfb57506001925060009150600a905061381e611d69565b6080851415611c1a57506004925060009150614e209050613894611d69565b6081851415611c3957506004925060009150610dac9050613a16611d69565b6082851415611c5957506003925060009150620140509050613b53611d69565b6083851415611c78575060019250600091506103e89050613c57611d69565b6090851415611c9557506001925060009150829050612f2e611d69565b60a0851415611cb257506000925082915060019050613f9f611d69565b60208510801590611cc4575060248511155b15611d005760405162461bcd60e51b815260040180806020018281038252602e8152602001806151f1602e913960400191505060405180910390fd5b60a18510801590611d12575060a68511155b80611d1d5750607085145b15611d595760405162461bcd60e51b815260040180806020018281038252602d81526020018061521f602d913960400191505060405180910390fd5b5060009250829150600590506136595b9193509193565b611d78615075565b60408051600080825260208201909252611db291611dac565b611d99615075565b815260200190600190039081611d915790505b506124ec565b905090565b6000816001600160401b0316836060015160a001511015611dfc575060e0820180516005016001600160401b03169052606082015160001960a09091015260016113e4565b5060e0820180516001600160401b039083018116909152606083015160a0018051918316909103905260006113e4565b60016101e090910152565b600160e090910152565b600060028260e001511415611e58575060006110b6565b60018260e001511415611e6d575060016110b6565b81516020830151611e7d9061146e565b611e8a846040015161146e565b611e97856060015161146e565b611ea4866080015161146e565b8660a001518760c00151604051602001808881526020018781526020018681526020018581526020018481526020018381526020018281526020019750505050505050506040516020818303038152906040528051906020012090506110b6565b60408051818152606081810183529182919060208201818036833701905050905060005b6020811015611fcd576000848260208110611f4057fe5b1a60f881811b9250601080830480831b9360ff9091169091029003901b611f6682613fda565b858560020281518110611f7557fe5b60200101906001600160f81b031916908160001a905350611f9581613fda565b858560020260010181518110611fa757fe5b60200101906001600160f81b031916908160001a9053505060019092019150611f299050565b5092915050565b60608180611ffb5750506040805180820190915260018152600360fc1b60208201526110b6565b8060005b811561201357600101600a82049150611fff565b6060816001600160401b038111801561202b57600080fd5b506040519080825280601f01601f191660200182016040528015612056576020820181803683370190505b50905060001982015b84156120a457600a850660300160f81b8282806001900393508151811061208257fe5b60200101906001600160f81b031916908160001a905350600a8504945061205f565b5095945050505050565b600080826001018484815181106120c157fe5b016020015190925060f81c90509250929050565b600090565b600080828451101580156120f2575060208385510310155b61212f576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b6020830161213d858561400b565b915091509250929050565b612150615075565b6040805160c08101825283815281516060810183526000808252602080830182905284518281528082018652939490850193908301916121a6565b612193615075565b81526020019060019003908161218b5790505b509052815260200160006040519080825280602002602001820160405280156121e957816020015b6121d6615075565b8152602001906001900390816121ce5790505b5081526000602082018190526040820152600160609091015292915050565b600190565b6000612217615075565b82600080612223615075565b600061222f89866120ae565b909550935061223e89866120ae565b9095509250600160ff8516141561225f5761225989866110bb565b90955091505b6122698986614064565b9095509050600160ff8516141561229457846122868483856113ea565b965096505050505050611276565b8461229f8483611386565b9650965050505050509250929050565b600c90565b6122bc615075565b6040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b038111801561230357600080fd5b5060405190808252806020026020018201604052801561233d57816020015b61232a615075565b8152602001906001900390816123225790505b5090528152602001600060405190808252806020026020018201604052801561238057816020015b61236d615075565b8152602001906001900390816123655790505b50815260208101849052600c604082015260016060909101529050919050565b600290565b60006123af615075565b828451101580156123c4575060408385510310155b612401576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b60008061240e8686614064565b909450915061241d86856120da565b90945090508361242d8383614075565b9350935050509250929050565b600390565b600d90565b60006060828160ff87166001600160401b038111801561246357600080fd5b5060405190808252806020026020018201604052801561249d57816020015b61248a615075565b8152602001906001900390816124825790505b50905060005b8760ff168160ff1610156124df576124bb87846110bb565b838360ff16815181106124ca57fe5b602090810291909101015292506001016124a3565b5090969095509350505050565b6124f4615075565b6124fe8251614134565b61254f576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b83518110156125865783818151811061256957fe5b602002602001015160a00151820191508080600101915050612554565b506040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b03811180156125ce57600080fd5b5060405190808252806020026020018201604052801561260857816020015b6125f5615075565b8152602001906001900390816125ed5790505b5090528152602081019490945260006040850152600360608501526080909301525090565b612635615075565b6040518060c001604052806000815260200183815260200160006001600160401b038111801561266457600080fd5b5060405190808252806020026020018201604052801561269e57816020015b61268b615075565b8152602001906001900390816126835790505b5081526000602082015260016040820181905260609091015292915050565b60408051602080820193909352815180820384018152908201909152805191012090565b60006002826040015151106126f257fe5b60408201515161275557612704612208565b82600001518360200151604051602001808460ff1660f81b81526001018360ff1660f81b815260010182815260200193505050506040516020818303038152906040528051906020012090506110b6565b61275d612208565b8260000151612783846040015160008151811061277657fe5b602002602001015161146e565b8460200151604051602001808560ff1660f81b81526001018460ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b60006127e061243a565b8383604051602001808460ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b61282c615075565b60088251111561287a576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b606082516001600160401b038111801561289357600080fd5b506040519080825280602002602001820160405280156128bd578160200160208202803683370190505b508051909150600160005b82811015612920576128df86828151811061277657fe5b8482815181106128eb57fe5b60200260200101818152505085818151811061290357fe5b602002602001015160a001518201915080806001019150506128c8565b506000835184604051602001808360ff1660f81b8152600101828051906020019060200280838360005b8381101561296257818101518382015260200161294a565b505050509050019250505060405160208183030381529060405280519060200120905061298f8183614075565b9695505050505050565b606490565b6129a6615075565b6040805160028082526060828101909352816020015b6129c4615075565b8152602001906001900390816129bc57905050905082816000815181106129e757fe5b60200260200101819052508381600181518110612a0057fe5b6020026020010181905250612a1481612824565b949350505050565b612a24615075565b612a3282610100015161413b565b9050612a3c615075565b612a4a83610100015161413b565b9050612a558261417d565b1580612a675750612a658161417d565b155b15612a7c57612a7583614188565b5050612c7b565b8151815161016085015160009060ff1660011415612a9d5750818101612c64565b61016086015160ff1660021415612ab75750818102612c64565b61016086015160ff1660031415612ad15750808203612c64565b61016086015160ff16600a1415612aeb575080820a612c64565b61016086015160ff16600b1415612b05575080820b612c64565b61016086015160ff1660101415612b1f5750808210612c64565b61016086015160ff1660111415612b395750808211612c64565b61016086015160ff1660121415612b535750808212612c64565b61016086015160ff1660131415612b6d5750808213612c64565b61016086015160ff1660161415612b875750818116612c64565b61016086015160ff1660171415612ba15750818117612c64565b61016086015160ff1660181415612bbb5750818118612c64565b61016086015160ff16601a1415612bd5575080821a612c64565b61016086015160ff16601b1415612bef575080821b612c64565b61016086015160ff16601c1415612c09575080821c612c64565b61016086015160ff16601d1415612c23575080821d612c64565b61016086015160ff1660221415612c62575060408051602080820185905281830184905282518083038401815260609092019092528051910120612c64565bfe5b610d44866101000151612c7683612148565b614191565b50565b612c86615075565b612c9482610100015161413b565b9050612c9e615075565b612cac83610100015161413b565b9050612cb78261417d565b1580612cc95750612cc78161417d565b155b80612cd357508051155b15612ce157612a7583614188565b8151815161016085015160009060ff1660041415612d025750808204612c64565b61016086015160ff1660051415612d1c5750808205612c64565b61016086015160ff1660061415612d365750808206612c64565b61016086015160ff1660071415612c625750808207612c64565b612d58615075565b612d6682610100015161413b565b9050612d70615075565b612d7e83610100015161413b565b9050612d88615075565b612d9684610100015161413b565b9050612da18361417d565b1580612db35750612db18261417d565b155b80612dc45750612dc28161417d565b155b80612dce57508051155b15612de457612ddc84614188565b505050612c7b565b82518251825161016087015160009060ff1660081415612e0957818385089050612e21565b61016088015160ff1660091415612c62578183850990505b612e33886101000151612c7683612148565b5050505050505050565b612e45615075565b612e5382610100015161413b565b9050612e5d615075565b612e6b83610100015161413b565b9050612e91836101000151612c76612e828461146e565b612e8b8661146e565b146141bb565b505050565b612e9e615075565b612eac82610100015161413b565b9050612eb78161417d565b612eca57612ec482614188565b50612c7b565b8051610100830151811590612ee290612c7683612148565b50505050565b612ef0615075565b612efe82610100015161413b565b9050612f098161417d565b612f1657612ec482614188565b8051610100830151811990612ee290612c7683612148565b612f3c81610100015161413b565b5050565b612c7b816101000151826060015160800151614191565b612c7b816101000151826060015160600151614191565b612f7c81610100015161413b565b60609182015190910152565b612f90615075565b612f9e82610100015161413b565b9050612fa9816141dd565b612fb657612ec482614188565b612fbf8161146e565b6060830151525050565b612fd1615075565b612fdf82610100015161413b565b9050612fe9615075565b612ff783610100015161413b565b9050613002826141dd565b158061301457506130128161417d565b155b1561302257612a7583614188565b805115612e91576130328261146e565b606084015152505050565b6101008101515160009015801561306d575061305a610aa2611d70565b61306b83606001516020015161146e565b145b9050612f3c826101000151612c76836141bb565b612c7b816101000151612c7683604001516000015160016141ea565b612c7b816101200151612c7683610100015161413b565b612c7b816101000151612c7683610120015161413b565b6101208101515160009015801561306d57506130e8610aa2611d70565b61306b83606001516040015161146e565b612c7b816101000151612c76836060015160c0015160016141ea565b61311d615075565b61312b82610100015161413b565b9050613136816141dd565b61314357612ec482614188565b61314c8161146e565b606083015160c001525050565b613161615075565b61316f82610100015161413b565b905061318082610100015182614191565b612f3c82610100015182614191565b613197615075565b6131a582610100015161413b565b90506131af615075565b6131bd83610100015161413b565b90506131ce83610100015182614191565b6131dd83610100015183614191565b612e9183610100015182614191565b6131f4615075565b61320282610100015161413b565b905061320c615075565b61321a83610100015161413b565b9050613224615075565b61323284610100015161413b565b905061324384610100015182614191565b61325284610100015183614191565b61326184610100015184614191565b612ee284610100015182614191565b613278615075565b61328682610100015161413b565b9050613290615075565b61329e83610100015161413b565b90506131dd83610100015183614191565b6132b7615075565b6132c582610100015161413b565b90506132cf615075565b6132dd83610100015161413b565b90506132e7615075565b6132f584610100015161413b565b905061330684610100015184614191565b61326184610100015183614191565b61331d615075565b61332b82610100015161413b565b9050613335615075565b61334383610100015161413b565b905061334e8261417d565b1580613360575061335e816142a9565b155b8061337a575061336f816142b6565b60ff16826000015110155b1561338857612a7583614188565b612e9183610100015182604001518460000151815181106133a557fe5b6020026020010151614191565b6133ba615075565b6133c882610100015161413b565b90506133d2615075565b6133e083610100015161413b565b90506133ea615075565b6133f884610100015161413b565b90506134038361417d565b15806134155750613413826142a9565b155b8061342f5750613424826142b6565b60ff16836000015110155b1561343d57612ddc84614188565b60408201518351815183918391811061345257fe5b602002602001018190525061346f856101000151612c76836124ec565b5050505050565b61347e615075565b61348c82610100015161413b565b9050613497816142a9565b6134a457612ec482614188565b612f3c826101000151612c766134b9846142b6565b60ff16612148565b6134c9615075565b6134d782610100015161413b565b90506134e1615075565b6134ef83610120015161413b565b90506134fa8261417d565b158061350c575061350a816142a9565b155b80613526575061351b816142b6565b60ff16826000015110155b1561353457612a7583614188565b61338883610120015182614191565b61354b615075565b61355982610100015161413b565b9050613563615075565b61357183610100015161413b565b905061357b615075565b61358984610120015161413b565b9050613594816142a9565b15806135a657506135a48361417d565b155b806135c057506135b5816142b6565b60ff16836000015110155b156135ce57612ddc84614188565b6040810151835181518491839181106135e357fe5b602002602001018190525061346f856101200151612c76836124ec565b8060c00151613616610aa283610100015161413b565b604080516020808201949094528082019290925280518083038201815260609092019052805191012060c090910152565b612c7b816101000151612c76836142dd565b612c7b81614188565b612c7b8160600151614d29565b613677615075565b61368582610100015161413b565b90506136908161417d565b61369d57612ec482614188565b51606082015160a0015250565b612c7b816101000151612c76836060015160a00151612148565b61010081015160408051600160f81b6020808301919091526000602183018190526022808401919091528351808403909101815260429092019092528051910120612c7b9190612c769060016141ea565b61371d615075565b61372b82610100015161413b565b9050613735615075565b61374383610100015161413b565b905061374e8261417d565b1580613760575061375e816141dd565b155b1561376e57612a7583614188565b612e91836101000151612c7684600001516137888561146e565b611386565b613795615075565b6137a382610100015161413b565b90506137ad615075565b6137bb83610100015161413b565b90506137c5615075565b6137d384610100015161413b565b90506137de8361417d565b15806137f057506137ee816141dd565b155b156137fe57612ddc84614188565b612ee2846101000151612c7685600001516138188561146e565b866113ea565b613826615075565b61383482610100015161413b565b905061383f8161417d565b61384c57612ec482614188565b6040805160008082526020820190925260609161387f565b61386c615075565b8152602001906001900390816138645790505b509050612e91836101000151612c76836124ec565b61389c615075565b6138aa82610100015161413b565b90506138b4615075565b6138c283610100015161413b565b90506138cc615075565b6138da84610100015161413b565b90506138e4615075565b6138f285610100015161413b565b90506138fd8461417d565b158061390f575061390d8361417d565b155b80613920575061391e8261417d565b155b80613931575061392f8161417d565b155b156139485761393f85614188565b50505050612c7b565b8351835183511580159061395e57508351600114155b1561398157613976876101000151612c766000612148565b505050505050612c7b565b83518351604080516000808252602080830180855285905260ff601b9096019586168385015260608301889052608083018790529251909260019260a080820193601f1981019281900390910190855afa1580156139e3573d6000803e3d6000fd5b505050602060405103519050613a0a8a6101000151612c76836001600160a01b0316612148565b50505050505050505050565b613a1e615075565b613a2c82610100015161413b565b9050613a36615075565b613a4483610100015161413b565b9050613a4e615075565b613a5c84610100015161413b565b9050613a66615075565b613a7485610100015161413b565b9050613a7f8461417d565b1580613a915750613a8f8361417d565b155b80613aa25750613aa08261417d565b155b80613ab35750613ab18161417d565b155b15613ac15761393f85614188565b613ac9614fc5565b5060408051608081018252855181528451602082015283519181019190915281516060820152613af7615110565b600060408260808560066107d05a03fa905080613b2357613b1788614188565b50505050505050612c7b565b610100880151613b3e90612c768460015b6020020151612148565b610100880151612e3390612c76846000613b34565b613b5b615075565b613b6982610100015161413b565b9050613b73615075565b613b8183610100015161413b565b9050613b8b615075565b613b9984610100015161413b565b9050613ba48361417d565b1580613bb65750613bb48261417d565b155b80613bc75750613bc58161417d565b155b15613bd557612ddc84614188565b613bdd61512e565b50604080516060810182528451815283516020820152825191810191909152613c04615110565b600060408260808560076107d05a03fa905080613c245761397687614188565b610100870151613c3990612c76846001613b34565b610100870151613c4e90612c76846000613b34565b50505050505050565b613c5f615075565b613c6d82610100015161413b565b9050613c7761514c565b6000805b601e811015613d0957613c8d846142a9565b613c9a5760019150613d09565b60408401518051613cab5750613d09565b8051600214613cbe576001925050613d09565b80600081518110613ccb57fe5b60200260200101518483601e8110613cdf57fe5b6020020152805181906001908110613cf357fe5b6020908102919091010151945050600101613c7b565b613d18856207a1208302611db7565b15613d3c5760e0850180516103e719016001600160401b0316905261393f85611e2c565b8180613d4e5750613d4c846142a9565b155b80613d5d575060408401515115155b15613d6b5761393f85614188565b613d7361517a565b60005b82811015613f5057613d86615075565b8582601e8110613d9257fe5b60200201519050613da2816142a9565b613daf57613b1788614188565b60408101518051600614613dd357613dc689614188565b5050505050505050612c7b565b60005b6006811015613e1e57613dfb828281518110613dee57fe5b602002602001015161417d565b613e1657613e088a614188565b505050505050505050612c7b565b600101613dd6565b5080600081518110613e2c57fe5b602002602001015160000151848460060260b48110613e4757fe5b6020020152805181906001908110613e5b57fe5b602002602001015160000151848460060260010160b48110613e7957fe5b6020020152805181906003908110613e8d57fe5b602002602001015160000151848460060260020160b48110613eab57fe5b6020020152805181906002908110613ebf57fe5b602002602001015160000151848460060260030160b48110613edd57fe5b6020020152805181906005908110613ef157fe5b602002602001015160000151848460060260040160b48110613f0f57fe5b6020020152805181906004908110613f2357fe5b602002602001015160000151848460060260050160b48110613f4157fe5b60200201525050600101613d76565b5060c08202613f5d615199565b6000602082848660086107d05a03fa905080613f7c57613dc689614188565b6101008901518251613f949190612c769015156141bb565b505050505050505050565b612c7b816101000151612c766000801b60405160200180828152602001915050604051602081830303815290604052805190602001206122b4565b6000600a60f883901c1015613ffa578160f81c60300160f81b90506110b6565b8160f81c60570160f81b90506110b6565b6000816020018351101561405b576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b6000806020830161213d858561400b565b61407d615075565b6040805160c08101825284815281516060810183526000808252602080830182905284518281528082018652939490850193908301916140d3565b6140c0615075565b8152602001906001900390816140b85790505b5090528152602001600060405190808252806020026020018201604052801561411657816020015b614103615075565b8152602001906001900390816140fb5790505b50815260006020820152600260408201526060019290925250919050565b6008101590565b614143615075565b61414b615075565b826020015160018460000151038151811061416257fe5b60209081029190910101518351600019018452915050919050565b6080015160ff161590565b612c7b81611e2c565b8082602001518360000151815181106141a657fe5b60209081029190910101525080516001019052565b6141c3615075565b81156141d3576114946001612148565b6114946000612148565b6080015160ff1660011490565b6141f2615075565b6040805160c0810182528481528151606081018352600080825260208083018290528451828152808201865293949085019390830191614248565b614235615075565b81526020019060019003908161422d5790505b5090528152602001600060405190808252806020026020018201604052801561428b57816020015b614278615075565b8152602001906001900390816142705790505b50815260006020820152606460408201526060019290925250919050565b6080015160ff1660031490565b608081015160009060ff16600314156142d557506040810151516110b6565b5060016110b6565b6142e5615075565b61018082015160408051600880825261012082019092526000918291606091816020015b614311615075565b815260200190600190039081614309579050509050600084876101a001518151811061433957fe5b01602001516101a0880180516001019081905260f89190911c9150600090819081908190614368908a90614d33565b6101a08c01805160140190819052909150614384908a906120da565b6101a08d018290529450614399908a906120da565b6101a08d0182905293506143ae908a906120da565b6101a08d0182905297506143c3908a906120da565b6101a08d0182905292506000906143db908b906120da565b6101a08e0182905291506000906143f4908c9084614d93565b6101a08e0180518d810160200185902085820190925291925061441c89868a8a8f8b87614dc5565b9b5061442a8960ff16612148565b8a60008151811061443757fe5b602002602001018190525061444b88612148565b8a60018151811061445857fe5b602002602001018190525061446c87612148565b8a60028151811061447957fe5b6020026020010181905250614496856001600160a01b0316612148565b8a6003815181106144a357fe5b60200260200101819052506144b78b612148565b8a6004815181106144c457fe5b60200260200101819052506144d886612148565b8a6005815181106144e557fe5b60200260200101819052506144f984612148565b8a60068151811061450657fe5b602002602001018190525061451c8360016141ea565b8a60078151811061452957fe5b6020026020010181905250505050505050505050600061454e85886101a001516120da565b6101a0890182905286519092506000918791811061456857fe5b01602001516101a089018051600101905260f81c905080158061458e57508060ff166001145b6145d0576040805162461bcd60e51b815260206004820152600e60248201526d1254d7d111531056515117d5905360921b604482015290519081900360640190fd5b600060ff82166146a9576145e9878a6101a001516120da565b6101a08b0191909152604080517129b2b8bab2b731b2b91036b2b9b9b0b3b29d60711b60208083019190915260328201939093526052810188905260728082018a9052825180830390910181526092909101909152805191012060808a0151909150851461469e576040805162461bcd60e51b815260206004820152601b60248201527f57524f4e475f53455155454e4345525f4d53475f5345515f4e554d0000000000604482015290519081900360640190fd5b600190940193614a54565b6000831561472b5789600001516001600160a01b031663d9dd67ab600186036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156146fc57600080fd5b505afa158015614710573d6000803e3d6000fd5b505050506040513d602081101561472657600080fd5b505190505b6000806000806147408c8f6101a001516120da565b8f6101a00181965082815250505061475d8c8f6101a001516120da565b8f6101a00181955082815250505061477a8c8f6101a001516120da565b8f6101a0018194508281525050506147978c8f6101a001516120da565b8f6101a001819350828152505050828a10156147ea576040805162461bcd60e51b815260206004820152600d60248201526c1111531056515117d4d5105495609a1b604482015290519081900360640190fd5b818a1061482c576040805162461bcd60e51b815260206004820152600b60248201526a1111531056515117d1539160aa1b604482015290519081900360640190fd5b60008a156148ae578e602001516001600160a01b031663d9dd67ab60018d036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561487f57600080fd5b505afa158015614893573d6000803e3d6000fd5b505050506040513d60208110156148a957600080fd5b505190505b8e602001516001600160a01b031663d9dd67ab8c6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156148f657600080fd5b505afa15801561490a573d6000803e3d6000fd5b505050506040513d602081101561492057600080fd5b505161492c828e614e3b565b1461496c576040805162461bcd60e51b815260206004820152600b60248201526a44454c415945445f41434360a81b604482015290519081900360640190fd5b84848c03019a5061497c8b612148565b8a60048151811061498957fe5b60200260200101819052508e608001518b146149ec576040805162461bcd60e51b815260206004820152601960248201527f57524f4e475f44454c415945445f4d53475f5345515f4e554d00000000000000604482015290519081900360640190fd5b5060408051702232b630bcb2b21036b2b9b9b0b3b2b99d60791b602080830191909152603182019790975260518101869052607181018590526091810184905260b1808201939093528151808203909301835260d10190528051940193909320920301955090505b6000614a65888b6101a001516120da565b6101a08c0191909152905060005b81811015614c4d57888b6101a0015181518110614a8c57fe5b016020015160f81c9350831580614aa657508360ff166001145b614aec576040805162461bcd60e51b815260206004820152601260248201527114915357d254d7d111531056515117d5905360721b604482015290519081900360640190fd5b6101a08b018051600101905260ff8416614b79576000614b118a8d6101a001516120da565b6101a08e0191909152604080517129b2b8bab2b731b2b91036b2b9b9b0b3b29d60711b6020808301919091526032820197909752605281018b905260728082019390935281518082039093018352609201905280519401939093206001909701969250614c45565b6000806000614b8d8c8f6101a001516120da565b8f6101a001819550828152505050614baa8c8f6101a001516120da565b8f6101a001819450828152505050614bc78c8f6101a001516120da565b8f6101a001819350828152505050858a8484846040516020018080702232b630bcb2b21036b2b9b9b0b3b2b99d60791b815250601101868152602001858152602001848152602001838152602001828152602001955050505050506040516020818303038152906040528051906020012095508282038a0199505050505b600101614a73565b5089600001516001600160a01b031663d9dd67ab856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614c9657600080fd5b505afa158015614caa573d6000803e3d6000fd5b505050506040513d6020811015614cc057600080fd5b50518214614d07576040805162461bcd60e51b815260206004820152600f60248201526e57524f4e475f42415443485f41434360881b604482015290519081900360640190fd5b60808a0180516001019052614d1b856124ec565b9a9950505050505050505050565b600260e090910152565b60008160140183511015614d83576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b500160200151600160601b900490565b600080614dab8585614da486614e67565b6001614e92565b50855190915061146590614dc0607b84614e3b565b614e3b565b6040805160f89890981b6001600160f81b0319166020808a019190915260609790971b6bffffffffffffffffffffffff19166021890152603588019590955260558701939093526075860191909152609585015260b5808501919091528151808503909101815260d59093019052815191012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600060018211614e79575060016110b6565b614e8860026001840104614e67565b60020290506110b6565b60008060208411614ee65785518510614eba57614eaf60006126bd565b600191509150614f5d565b6000614ece614ec98888614f66565b6126bd565b905080614edb60006126bd565b909350149050614f5d565b600080614eff886002880489016002895b046000614e92565b91509150808015614f0d5750845b15614f2c57614f2188886002890488614e92565b935093505050614f5d565b600080614f3c8a8a60028b614ef7565b91509150614f4a8285614e3b565b818015614f545750835b95509550505050505b94509492505050565b600080805b6020811015614fbd57600882901b91506000818501865111614f8e576000614fac565b8582860181518110614f9c57fe5b01602001516001600160f81b0319165b60f81c929092179150600101614f6b565b509392505050565b60405180608001604052806004906020820280368337509192915050565b6040805161020081018252600080825260208201529081016150036150b2565b81526020016150106150b2565b81526000602082018190526040820181905260608201819052608082015260a0016150396151b7565b81526020016150466151b7565b81526000602082018190526040820181905260608083018190526080830182905260a083015260c09091015290565b6040518060c001604052806000815260200161508f6151d1565b815260606020820181905260006040830181905290820181905260809091015290565b60408051610100810190915260008152602081016150ce615075565b81526020016150db615075565b81526020016150e8615075565b81526020016150f5615075565b81526000602082018190526040820181905260609091015290565b60405180604001604052806002906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b604051806103c00160405280601e905b615164615075565b81526020019060019003908161515c5790505090565b60405180611680016040528060b4906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b604051806040016040528060008152602001606081525090565b604080516060808201835260008083526020830152918101919091529056fe75736520616e6f7468657220636f6e747261637420746f2068616e646c652068617368696e67206f70636f64657375736520616e6f7468657220636f6e747261637420746f2068616e646c6520627566666572206f70636f646573a26469706673582212202d80d88e3b5148bfb50489694e6d5e29ed72792102e523f7e782ab85126a4fd264736f6c634300060c0033"

// DeployOneStepProof deploys a new Ethereum contract, binding an instance of OneStepProof to it.
func DeployOneStepProof(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OneStepProof, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProofABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OneStepProofBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneStepProof{OneStepProofCaller: OneStepProofCaller{contract: contract}, OneStepProofTransactor: OneStepProofTransactor{contract: contract}, OneStepProofFilterer: OneStepProofFilterer{contract: contract}}, nil
}

// OneStepProof is an auto generated Go binding around an Ethereum contract.
type OneStepProof struct {
	OneStepProofCaller     // Read-only binding to the contract
	OneStepProofTransactor // Write-only binding to the contract
	OneStepProofFilterer   // Log filterer for contract events
}

// OneStepProofCaller is an auto generated read-only Go binding around an Ethereum contract.
type OneStepProofCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProofTransactor is an auto generated write-only Go binding around an Ethereum contract.
type OneStepProofTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProofFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneStepProofFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProofSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneStepProofSession struct {
	Contract     *OneStepProof     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneStepProofCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneStepProofCallerSession struct {
	Contract *OneStepProofCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// OneStepProofTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneStepProofTransactorSession struct {
	Contract     *OneStepProofTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// OneStepProofRaw is an auto generated low-level Go binding around an Ethereum contract.
type OneStepProofRaw struct {
	Contract *OneStepProof // Generic contract binding to access the raw methods on
}

// OneStepProofCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneStepProofCallerRaw struct {
	Contract *OneStepProofCaller // Generic read-only contract binding to access the raw methods on
}

// OneStepProofTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneStepProofTransactorRaw struct {
	Contract *OneStepProofTransactor // Generic write-only contract binding to access the raw methods on
}

// NewOneStepProof creates a new instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProof(address common.Address, backend bind.ContractBackend) (*OneStepProof, error) {
	contract, err := bindOneStepProof(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneStepProof{OneStepProofCaller: OneStepProofCaller{contract: contract}, OneStepProofTransactor: OneStepProofTransactor{contract: contract}, OneStepProofFilterer: OneStepProofFilterer{contract: contract}}, nil
}

// NewOneStepProofCaller creates a new read-only instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProofCaller(address common.Address, caller bind.ContractCaller) (*OneStepProofCaller, error) {
	contract, err := bindOneStepProof(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProofCaller{contract: contract}, nil
}

// NewOneStepProofTransactor creates a new write-only instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProofTransactor(address common.Address, transactor bind.ContractTransactor) (*OneStepProofTransactor, error) {
	contract, err := bindOneStepProof(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProofTransactor{contract: contract}, nil
}

// NewOneStepProofFilterer creates a new log filterer instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProofFilterer(address common.Address, filterer bind.ContractFilterer) (*OneStepProofFilterer, error) {
	contract, err := bindOneStepProof(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneStepProofFilterer{contract: contract}, nil
}

// bindOneStepProof binds a generic wrapper to an already deployed contract.
func bindOneStepProof(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProofABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof *OneStepProofRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof.Contract.OneStepProofCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof *OneStepProofRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof.Contract.OneStepProofTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof *OneStepProofRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof.Contract.OneStepProofTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof *OneStepProofCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof *OneStepProofTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof *OneStepProofTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x47dda1d6.
//
// Solidity: function executeStep(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 afterMessagesRead, bytes32[4] fields)
func (_OneStepProof *OneStepProofCaller) ExecuteStep(opts *bind.CallOpts, bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	AfterMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	var out []interface{}
	err := _OneStepProof.contract.Call(opts, &out, "executeStep", bridges, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		Gas               uint64
		AfterMessagesRead *big.Int
		Fields            [4][32]byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Gas = *abi.ConvertType(out[0], new(uint64)).(*uint64)
	outstruct.AfterMessagesRead = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Fields = *abi.ConvertType(out[2], new([4][32]byte)).(*[4][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x47dda1d6.
//
// Solidity: function executeStep(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 afterMessagesRead, bytes32[4] fields)
func (_OneStepProof *OneStepProofSession) ExecuteStep(bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	AfterMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	return _OneStepProof.Contract.ExecuteStep(&_OneStepProof.CallOpts, bridges, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x47dda1d6.
//
// Solidity: function executeStep(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 afterMessagesRead, bytes32[4] fields)
func (_OneStepProof *OneStepProofCallerSession) ExecuteStep(bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	AfterMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	return _OneStepProof.Contract.ExecuteStep(&_OneStepProof.CallOpts, bridges, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0xeba67f6e.
//
// Solidity: function executeStepDebug(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof *OneStepProofCaller) ExecuteStepDebug(opts *bind.CallOpts, bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	var out []interface{}
	err := _OneStepProof.contract.Call(opts, &out, "executeStepDebug", bridges, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		StartMachine string
		AfterMachine string
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.StartMachine = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.AfterMachine = *abi.ConvertType(out[1], new(string)).(*string)

	return *outstruct, err

}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0xeba67f6e.
//
// Solidity: function executeStepDebug(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof *OneStepProofSession) ExecuteStepDebug(bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof.Contract.ExecuteStepDebug(&_OneStepProof.CallOpts, bridges, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0xeba67f6e.
//
// Solidity: function executeStepDebug(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof *OneStepProofCallerSession) ExecuteStepDebug(bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof.Contract.ExecuteStepDebug(&_OneStepProof.CallOpts, bridges, initialMessagesRead, accs, proof, bproof)
}
