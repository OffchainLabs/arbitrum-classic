/*
* Copyright 2020, Offchain Labs, Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
 */

package arbostest

import (
	"crypto/ecdsa"
	"github.com/offchainlabs/arbitrum/packages/arb-evm/evm"
	"github.com/offchainlabs/arbitrum/packages/arb-util/value"
	"log"
	"math/big"
	"strings"
	"testing"

	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/common/hexutil"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/crypto"

	"github.com/offchainlabs/arbitrum/packages/arb-avm-cpp/cmachine"
	"github.com/offchainlabs/arbitrum/packages/arb-evm/l2message"
	"github.com/offchainlabs/arbitrum/packages/arb-util/arbos"
	"github.com/offchainlabs/arbitrum/packages/arb-util/common"
	"github.com/offchainlabs/arbitrum/packages/arb-validator-core/message"
)

func TestFib(t *testing.T) {
	mach, _ := initArbOS(t)

	fib, err := abi.JSON(strings.NewReader(FibonacciABI))
	if err != nil {
		t.Fatal(err)
	}

	pk, err := crypto.GenerateKey()
	if err != nil {
		t.Fatal(err)
	}

	addr := common.NewAddressFromEth(crypto.PubkeyToAddress(pk.PublicKey))
	constructorData, err := hexutil.Decode(FibonacciBin)
	if err != nil {
		t.Fatal(err)
	}

	fibAddress, err := deployContract(t, mach, addr, constructorData, big.NewInt(0))
	if err != nil {
		t.Fatal(err)
	}

	depositEth(t, mach, addr, big.NewInt(1000))

	generateFibABI := fib.Methods["generateFib"]
	generateFibData, err := generateFibABI.Inputs.Pack(big.NewInt(20))
	if err != nil {
		t.Fatal(err)
	}

	generateSignature, err := hexutil.Decode("0x2ddec39b")
	if err != nil {
		t.Fatal(err)
	}

	generateTx := l2message.Transaction{
		MaxGas:      big.NewInt(1000000000),
		GasPriceBid: big.NewInt(0),
		SequenceNum: big.NewInt(1),
		DestAddress: fibAddress,
		Payment:     big.NewInt(300),
		Data:        append(generateSignature, generateFibData...),
	}

	generateResult, err := runTransaction(t, mach, generateTx, addr)
	if err != nil {
		t.Fatal(err)
	}
	if len(generateResult.EVMLogs) != 1 {
		t.Fatal("incorrect log count")
	}
	evmLog := generateResult.EVMLogs[0]
	if evmLog.Address != fibAddress {
		t.Fatal("log came from incorrect address")
	}
	if evmLog.Topics[0].ToEthHash() != fib.Events["TestEvent"].ID {
		t.Fatal("incorrect log topic")
	}
	if hexutil.Encode(evmLog.Data) != "0x0000000000000000000000000000000000000000000000000000000000000014" {
		t.Fatal("incorrect log data")
	}

	getFibABI := fib.Methods["getFib"]
	getFibData, err := getFibABI.Inputs.Pack(big.NewInt(5))
	if err != nil {
		t.Fatal(err)
	}

	getFibSignature, err := hexutil.Decode("0x90a3e3de")
	if err != nil {
		t.Fatal(err)
	}

	getFibTx := l2message.Call{
		MaxGas:      big.NewInt(1000000000),
		GasPriceBid: big.NewInt(0),
		DestAddress: fibAddress,
		Data:        append(getFibSignature, getFibData...),
	}

	getFibResult, err := runTransaction(t, mach, getFibTx, addr)
	if err != nil {
		t.Fatal(err)
	}
	if hexutil.Encode(getFibResult.ReturnData) != "0x0000000000000000000000000000000000000000000000000000000000000008" {
		t.Fatal("getFib had incorrect result")
	}
}
func TestDeposit(t *testing.T) {
	mach, err := cmachine.New(arbos.Path())
	if err != nil {
		t.Fatal(err)
	}

	pk, err := crypto.GenerateKey()
	if err != nil {
		t.Fatal(err)
	}

	addr := common.NewAddressFromEth(crypto.PubkeyToAddress(pk.PublicKey))

	amount := big.NewInt(1000)
	depositEth(t, mach, addr, amount)

	if getBalanceCall(t, mach, addr).Cmp(amount) != 0 {
		t.Fatal("incorrect balance")
	}
}

func TestReddit(t *testing.T) {
	mach, _ := initArbOS(t)

	constructorData, err := hexutil.Decode("")
	if err != nil {
		t.Fatal(err)
	}

	redditAddress, err := deployContract(t, mach, common.RandAddress(), constructorData, big.NewInt(0))
	if err != nil {
		t.Fatal(err)
	}
	log.Println(redditAddress)
}

func TestSignedTx(t *testing.T) {
	chain := common.RandAddress()
	mach, err := cmachine.New(arbos.Path())
	if err != nil {
		t.Fatal(err)
	}

	dest := common.RandAddress()
	pk, err := crypto.GenerateKey()
	if err != nil {
		t.Fatal(err)
	}
	addr := common.NewAddressFromEth(crypto.PubkeyToAddress(pk.PublicKey))

	chainTime := message.ChainTime{
		BlockNum:  common.NewTimeBlocksInt(0),
		Timestamp: big.NewInt(0),
	}

	inbox := value.NewEmptyTuple()
	inbox = value.NewTuple2(
		inbox,
		message.NewInboxMessage(
			simpleInitMessage(),
			chain,
			big.NewInt(0),
			chainTime,
		).AsValue(),
	)
	inbox = value.NewTuple2(
		inbox,
		message.NewInboxMessage(
			message.Eth{
				Dest:  addr,
				Value: big.NewInt(1000),
			},
			common.RandAddress(),
			big.NewInt(1),
			chainTime,
		).AsValue(),
	)

	tx := types.NewTransaction(0, dest.ToEthAddress(), big.NewInt(0), 100000000000, big.NewInt(0), []byte{})
	signedTx, err := types.SignTx(tx, types.NewEIP155Signer(l2message.ChainAddressToID(chain)), pk)
	if err != nil {
		t.Fatal(err)
	}

	inbox = value.NewTuple2(
		inbox,
		message.NewInboxMessage(
			message.L2Message{Data: l2message.L2MessageAsData(l2message.NewSignedTransactionFromEth(signedTx))},
			common.RandAddress(),
			big.NewInt(2),
			chainTime,
		).AsValue(),
	)
	assertion, _ := mach.ExecuteAssertion(1000000000, inbox, 0)
	logs := assertion.ParseLogs()
	testCase, err := value.TestVectorJSON(inbox, logs, assertion.ParseOutMessages())
	if err != nil {
		t.Fatal(err)
	}
	t.Log(string(testCase))
	if len(logs) != 1 {
		t.Fatal("incorrect log output count")
	}
	result, err := evm.NewTxResultFromValue(logs[0])
	if err != nil {
		t.Fatal(err)
	}
	if result.ResultCode != evm.ReturnCode {
		t.Fatal("unexpected result code", result.ResultCode)
	}
	if result.L1Message.Sender != addr {
		t.Error("l2message had incorrect sender", result.L1Message.Sender, addr)
	}
	if result.L1Message.Kind != message.L2Type {
		t.Error("l2message has incorrect type")
	}
	l2Message, err := l2message.NewL2MessageFromData(result.L1Message.Data)
	if err != nil {
		t.Fatal(err)
	}

	if result.L1Message.MessageID().ToEthHash() != signedTx.Hash() {
		t.Errorf("l2message of type %T had incorrect id %v instead of %v", l2Message, result.L1Message.MessageID(), signedTx.Hash().Hex())
	}

	_, ok := l2Message.(l2message.SignedTransaction)
	if !ok {
		t.Error("bad transaction format")
	}
}

func TestUnsignedTx(t *testing.T) {
	chain := common.RandAddress()
	mach, err := cmachine.New(arbos.Path())
	if err != nil {
		t.Fatal(err)
	}

	chainTime := message.ChainTime{
		BlockNum:  common.NewTimeBlocksInt(0),
		Timestamp: big.NewInt(0),
	}
	inbox := value.NewEmptyTuple()
	inbox = value.NewTuple2(
		inbox,
		message.NewInboxMessage(
			simpleInitMessage(),
			chain,
			big.NewInt(0),
			chainTime,
		).AsValue(),
	)
	sender := common.RandAddress()
	inbox = value.NewTuple2(
		inbox,
		message.NewInboxMessage(
			message.Eth{
				Dest:  sender,
				Value: big.NewInt(1000),
			},
			common.RandAddress(),
			big.NewInt(1),
			chainTime,
		).AsValue(),
	)

	tx1 := l2message.Transaction{
		MaxGas:      big.NewInt(100000000000),
		GasPriceBid: big.NewInt(0),
		SequenceNum: big.NewInt(0),
		DestAddress: common.RandAddress(),
		Payment:     big.NewInt(10),
		Data:        []byte{},
	}

	tx2 := l2message.Transaction{
		MaxGas:      big.NewInt(100000000000),
		GasPriceBid: big.NewInt(0),
		SequenceNum: big.NewInt(1),
		DestAddress: common.RandAddress(),
		Payment:     big.NewInt(10),
		Data:        []byte{},
	}

	inbox = value.NewTuple2(
		inbox,
		message.NewInboxMessage(
			message.L2Message{Data: l2message.L2MessageAsData(tx1)},
			sender,
			big.NewInt(2),
			chainTime,
		).AsValue(),
	)
	inbox = value.NewTuple2(
		inbox,
		message.NewInboxMessage(
			message.L2Message{Data: l2message.L2MessageAsData(tx2)},
			sender,
			big.NewInt(3),
			chainTime,
		).AsValue(),
	)
	assertion, _ := mach.ExecuteAssertion(1000000000, inbox, 0)
	logs := assertion.ParseLogs()
	testCase, err := value.TestVectorJSON(inbox, logs, assertion.ParseOutMessages())
	if err != nil {
		t.Fatal(err)
	}
	t.Log(string(testCase))
	if len(logs) != 2 {
		t.Fatal("incorrect log output count")
	}
	for i, avmLog := range logs {
		result, err := evm.NewTxResultFromValue(avmLog)
		if err != nil {
			t.Fatal(err)
		}
		if result.ResultCode != evm.ReturnCode {
			t.Fatal("unexpected result code", result.ResultCode)
		}
		if result.L1Message.Sender != sender {
			t.Error("l2message had incorrect sender", result.L1Message.Sender, sender)
		}
		if result.L1Message.Kind != message.L2Type {
			t.Error("l2message has incorrect type")
		}
		l2Message, err := l2message.NewL2MessageFromData(result.L1Message.Data)
		if err != nil {
			t.Fatal(err)
		}

		var correctHash common.Hash
		if i == 0 {
			correctHash = tx1.MessageID(sender, chain)
		} else {
			correctHash = tx2.MessageID(sender, chain)
		}
		if result.L1Message.MessageID() != correctHash {
			t.Errorf("l2message of type %T had incorrect id %v instead of %v", l2Message, result.L1Message.MessageID(), correctHash)
		}

		_, ok := l2Message.(l2message.Transaction)
		if !ok {
			t.Error("bad transaction format")
		}
	}
}

func TestBatch(t *testing.T) {
	mach, chain := initArbOS(t)

	pks := make([]*ecdsa.PrivateKey, 0)
	for i := 0; i < 20; i++ {
		pk, err := crypto.GenerateKey()
		if err != nil {
			t.Fatal(err)
		}
		depositResults := runMessage(
			t,
			mach,
			message.Eth{
				Dest:  common.NewAddressFromEth(crypto.PubkeyToAddress(pk.PublicKey)),
				Value: big.NewInt(1000),
			},
			common.RandAddress(),
		)
		if len(depositResults) != 0 {
			t.Fatal("deposit should not have had a result")
		}
		pks = append(pks, pk)
	}

	batchSender := common.RandAddress()

	depositResults := runMessage(
		t,
		mach,
		message.Eth{
			Dest:  batchSender,
			Value: big.NewInt(1000),
		},
		common.RandAddress(),
	)
	if len(depositResults) != 0 {
		t.Fatal("deposit should not have had a result")
	}

	senders := make([]common.Address, 0)
	txes := make([]l2message.AbstractL2Message, 0)
	hashes := make([]common.Hash, 0)

	for _, pk := range pks {
		tx := types.NewTransaction(0, common.RandAddress().ToEthAddress(), big.NewInt(0), 100000000000, big.NewInt(0), []byte{})
		signedTx, err := types.SignTx(tx, types.NewEIP155Signer(l2message.ChainAddressToID(chain)), pk)
		if err != nil {
			t.Fatal(err)
		}
		addr := common.NewAddressFromEth(crypto.PubkeyToAddress(pk.PublicKey))
		senders = append(senders, addr)
		txes = append(txes, l2message.NewSignedTransactionFromEth(signedTx))
		hashes = append(hashes, common.NewHashFromEth(signedTx.Hash()))
	}

	batchSenderSeq := int64(0)
	for i := 0; i < 10; i++ {
		tx := l2message.Transaction{
			MaxGas:      big.NewInt(100000000000),
			GasPriceBid: big.NewInt(0),
			SequenceNum: big.NewInt(batchSenderSeq),
			DestAddress: common.RandAddress(),
			Payment:     big.NewInt(0),
			Data:        []byte{},
		}
		hashes = append(hashes, tx.MessageID(batchSender, chain))
		senders = append(senders, batchSender)
		txes = append(txes, tx)
		batchSenderSeq++
	}

	msg := l2message.NewTransactionBatchFromMessages(txes)
	results := runMessage(t, mach, message.L2Message{Data: l2message.L2MessageAsData(msg)}, batchSender)
	if len(results) != len(txes) {
		t.Fatal("incorrect result count", len(results), "instead of", len(txes))
	}
	for i, result := range results {
		if result.L1Message.Sender != senders[i] {
			t.Error("l2message had incorrect sender", result.L1Message.Sender, senders[i])
		}
		if result.L1Message.Kind != message.L2Type {
			t.Error("l2message has incorrect type")
		}
		msg, err := l2message.NewL2MessageFromData(result.L1Message.Data)
		if err != nil {
			t.Fatal(err)
		}

		if result.L1Message.MessageID() != hashes[i] {
			t.Errorf("l2message of type %T had incorrect id %v instead of %v", msg, result.L1Message.MessageID(), hashes[i])
		} else {
			t.Log("correct request id")
		}

		switch msg := msg.(type) {
		case l2message.Transaction:
			match, ok := txes[i].(l2message.Transaction)
			if !ok {
				t.Error("l2 type didn't match")
			}
			if !msg.Equals(match) {
				t.Error("transaction didn't match input")
			}
		case l2message.SignedTransaction:
			match, ok := txes[i].(l2message.SignedTransaction)
			if !ok {
				t.Error("l2 type didn't match")
			}
			if !msg.Equals(match) {
				t.Error("signed transaction didn't match input")
			}
		default:
			t.Error("unexpected output type")
		}
	}
}
