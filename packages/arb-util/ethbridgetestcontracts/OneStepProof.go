// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OneStepProofMetaData contains all meta data concerning the OneStepProof contract.
var OneStepProofMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address[2]\",\"name\":\"bridges\",\"type\":\"address[2]\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"afterMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[4]\",\"name\":\"fields\",\"type\":\"bytes32[4]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[2]\",\"name\":\"bridges\",\"type\":\"address[2]\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStepDebug\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"startMachine\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"afterMachine\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b5061531b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806347dda1d61461003b578063eba67f6e14610157575b600080fd5b610107600480360360e081101561005157600080fd5b604082013590606083019083018360c0810160a0820135600160201b81111561007957600080fd5b82018360208201111561008b57600080fd5b803590602001918460018302840111600160201b831117156100ac57600080fd5b919390929091602081019035600160201b8111156100c957600080fd5b8201836020820111156100db57600080fd5b803590602001918460018302840111600160201b831117156100fc57600080fd5b509092509050610301565b604080516001600160401b03851681526020810184905290810182608080838360005b8381101561014257818101518382015260200161012a565b50505050905001935050505060405180910390f35b610223600480360360e081101561016d57600080fd5b604082013590606083019083018360c0810160a0820135600160201b81111561019557600080fd5b8201836020820111156101a757600080fd5b803590602001918460018302840111600160201b831117156101c857600080fd5b919390929091602081019035600160201b8111156101e557600080fd5b8201836020820111156101f757600080fd5b803590602001918460018302840111600160201b8311171561021857600080fd5b5090925090506103c0565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561026457818101518382015260200161024c565b50505050905090810190601f1680156102915780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156102c45781810151838201526020016102ac565b50505050905090810190601f1680156102f15780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b60008061030c61505f565b61031461507d565b6103988a8a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b9081908401838280828437600081840152601f19601f820116905080830192505050505050508f610485565b90506103a38161093c565b6103ac81610d52565b935093509350509750975097945050505050565b6060806103cb61507d565b61044f898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600081840152601f19601f820116905080830192505050505050508e610485565b905061045a8161093c565b6104678160400151610db5565b92506104768160600151610db5565b91505097509795505050505050565b61048d61507d565b60008460008151811061049c57fe5b602001015160f81c60f81b60f81c90506000856001815181106104bb57fe5b602001015160f81c60f81b60f81c90506000866002815181106104da57fe5b016020015160f81c9050600360606004840160ff166001600160401b038111801561050457600080fd5b5060405190808252806020026020018201604052801561053e57816020015b61052b61510f565b8152602001906001900390816105235790505b50905060608360040160ff166001600160401b038111801561055f57600080fd5b5060405190808252806020026020018201604052801561059957816020015b61058661510f565b81526020019060019003908161057e5790505b50905060005b8560ff168110156105d5576105b48b856110c1565b8483815181106105c057fe5b6020908102919091010152935060010161059f565b5060005b8460ff1681101561060f576105ee8b856110c1565b8383815181106105fa57fe5b602090810291909101015293506001016105d9565b5061061861514c565b6106228b85611283565b809250819550505060008b858151811061063857fe5b01602001516001959095019460f81c905061065161507d565b6001600160a01b038b35811682526020808d0135909116908201526040810183905261067c83611323565b6060820152608081018f90528d3560a08201526020808f013560c0830152600060e0830181905260408051808201825260ff8c811682528185018a905261010086019190915281518083019092528a8116825292810187905261012084015283821660018114610140850152918b1661016084015261018083018f90526101c083018e90526101e08301526101a08201879052158061071e57508160ff166001145b6040518060400160405280600b81526020016a04241445f494d4d5f5459560ac1b815250906107cb5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610790578181015183820152602001610778565b50505050905090810190601f1680156107bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506107d461510f565b60ff83166107f5576107ee8a83604001516000015161138c565b9050610895565b6000865111604051806040016040528060068152602001654e4f5f494d4d60d01b815250906108655760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610790578181015183820152602001610778565b506108928a8360400151600001518860018d0360ff168151811061088557fe5b60200260200101516113f0565b90505b61089e81611474565b60408301515260005b838a0360ff168110156108e6576108de8782815181106108c357fe5b602002602001015184604001516115e190919063ffffffff16565b6001016108a7565b5060005b8860ff168110156109275761091f86828151811061090457fe5b602002602001015184604001516115fb90919063ffffffff16565b6001016108ea565b50909f9e505050505050505050505050505050565b6000806000612c7c61095585610160015160ff16611615565b9350935093509350600084118061096f5750846101400151155b80156109815750610100850151518410155b806109a957508461014001518015610997575083155b80156109a95750610100850151516001145b6040518060400160405280600a815260200169535441434b5f4d414e5960b01b81525090610a185760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610790578181015183820152602001610778565b50610120850151516040805180820190915260088152674155585f4d414e5960c01b602082015290841015610a8e5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610790578181015183820152602001610778565b5061010085015151841115610b4c57610aad610aa8611d76565b611474565b610abe866060015160200151611474565b146040518060400160405280600d81526020016c535441434b5f4d495353494e4760981b81525090610b315760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610790578181015183820152602001610778565b50610b3d856005611dbd565b50610b4785611e32565b610c0c565b61012085015151831115610be757610b65610aa8611d76565b610b76866060015160400151611474565b146040518060400160405280600b81526020016a4155585f4d495353494e4760a81b81525090610b315760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610790578181015183820152602001610778565b610bf18583611dbd565b15610bff57610b4785611e32565b610c0c858263ffffffff16565b846101e0015115610cb15760408051600160f81b6020808301919091526000602183018190526022808401919091528351808403909101815260429092019092528051910120606086015160c001511415610c7357610c6e8560600151611e3d565b610cb1565b60006101e0860152606085015160c081015190526101408501518015610c97575083155b610ca657610100850151600090525b610120850151600090525b60005b61010086015151811015610cfd57610cf5866101000151602001518281518110610cda57fe5b602002602001015187606001516115e190919063ffffffff16565b600101610cb4565b5060005b61012086015151811015610d4a57610d42866101200151602001518281518110610d2757fe5b602002602001015187606001516115fb90919063ffffffff16565b600101610d01565b505050505050565b600080610d5d61505f565b8360e0015184608001516040518060800160405280610d7f8860400151611e47565b8152602001610d918860600151611e47565b81526020018760a0015181526020018760c001518152509250925092509193909250565b6060610dc48260000151611f0b565b610dd9610dd48460200151611474565b611f0b565b610de9610dd48560400151611474565b610df9610dd48660600151611474565b610e09610dd48760800151611474565b610e168760a00151611fda565b610e238860c00151611f0b565b60405160200180806709ac2c6d0d2dcca560c31b81525060080188805190602001908083835b60208310610e685780518252601f199092019160209182019101610e49565b51815160209384036101000a60001901801990921691161790526216100560e91b9190930190815289516003909101928a0191508083835b60208310610ebf5780518252601f199092019160209182019101610ea0565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528851600390910192890191508083835b60208310610f165780518252601f199092019160209182019101610ef7565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528751600390910192880191508083835b60208310610f6d5780518252601f199092019160209182019101610f4e565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528651600390910192870191508083835b60208310610fc45780518252601f199092019160209182019101610fa5565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528551600390910192860191508083835b6020831061101b5780518252601f199092019160209182019101610ffc565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528451600390910192850191508083835b602083106110725780518252601f199092019160209182019101611053565b6001836020036101000a0380198251168184511680821785525050505050509050018061148560f11b81525060020197505050505050505060405160208183030381529060405290505b919050565b60006110cb61510f565b83518310611111576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b60008061111e86866120b4565b9150915061112a6120db565b60ff168160ff16141561115e57600061114387846120e0565b90935090508261115282612154565b9450945050505061127c565b611166612214565b60ff168160ff1614156111885761117d8683612219565b93509350505061127c565b6111906122bb565b60ff168160ff1614156111b85760006111a987846120e0565b909350905082611152826122c0565b6111c06123ac565b60ff168160ff1614156111d75761117d86836123b1565b6111df612446565b60ff168160ff161015801561120057506111f761244b565b60ff168160ff16105b1561123c57600061120f612446565b820390506060611220828986612450565b90945090508361122f826124f8565b955095505050505061127c565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b9250929050565b600061128d61514c565b61129561514c565b600060e08201819052806112a987876120e0565b90965091506112b887876123b1565b602085015295506112c987876123b1565b604085015295506112da87876110c1565b606085015295506112eb87876110c1565b608085015295506112fc87876120e0565b60a0850152955061130d87876120e0565b92845260c0840192909252509590945092505050565b61132b61514c565b60405180610100016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e001518152509050919050565b61139461510f565b6040805160608101825260ff8516815260208082018590528251600080825291810184526113e7938301916113df565b6113cc61510f565b8152602001906001900390816113c45790505b509052612639565b90505b92915050565b6113f861510f565b604080516001808252818301909252606091816020015b61141761510f565b81526020019060019003908161140f579050509050828160008151811061143a57fe5b602002602001018190525061146b60405180606001604052808760ff16815260200186815260200183815250612639565b95945050505050565b600061147e6120db565b60ff16826080015160ff1614156114a157815161149a906126c9565b90506110bc565b6114a9612214565b60ff16826080015160ff1614156114c75761149a82602001516126ed565b6114cf6123ac565b60ff16826080015160ff1614156114f157815160a083015161149a91906127ea565b6114f9612446565b60ff16826080015160ff1614156115325761151261510f565b61151f836040015161283b565b905061152a81611474565b9150506110bc565b61153a6129b3565b60ff16826080015160ff161415611553575080516110bc565b61155b6122bb565b60ff16826080015160ff1614156115a0575060608082015160408051607b602080830191909152818301939093528151808203830181529301905281519101206110bc565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b6115ef8260200151826129b8565b82602001819052505050565b6116098260400151826129b8565b82604001819052505050565b60008080612c7c600185148061162b5750600285145b806116365750600385145b156116505750600292506000915060039050612a36611d6f565b600485148061165f5750600685145b156116795750600292506000915060049050612c98611d6f565b60058514806116885750600785145b156116a25750600292506000915060079050612c98611d6f565b60088514806116b15750600985145b156116cb5750600392506000915060049050612d6a611d6f565b600a8514156116e95750600292506000915060199050612a36611d6f565b600b8514156117075750600292506000915060079050612a36611d6f565b60108514806117165750601185145b806117215750601285145b8061172c5750601385145b806117375750601685145b806117425750601785145b8061174d5750601885145b1561176657506002925060009150829050612a36611d6f565b601485141561178357506002925060009150829050612e57611d6f565b60158514156117a057506001925060009150829050612eb0611d6f565b60198514156117bd57506001925060009150829050612f02611d6f565b601a8514806117cc5750601b85145b806117d75750601c85145b806117e25750601d85145b156117fc5750600292506000915060049050612a36611d6f565b603085141561181957506001925060009150829050612f48611d6f565b603185141561183657506000925082915060019050612f5a611d6f565b603285141561185357506000925082915060019050612f71611d6f565b60338514156118715750600192506000915060029050612f88611d6f565b603485141561188f5750600192506000915060049050612fa2611d6f565b60358514156118ad5750600292506000915060049050612fe3611d6f565b60368514156118ca57506000925082915060029050613057611d6f565b60378514156118e75750600092508291506001905061309b611d6f565b6038851415611904575060019250600091508290506130b7611d6f565b6039851415611921575060009250600191508190506130ce611d6f565b603a85141561193e575060009250829150600290506130e5611d6f565b603b85141561195b57506000925082915060019050612c95611d6f565b603c85141561197857506000925082915060019050613113611d6f565b603d8514156119955750600192506000915082905061312f611d6f565b60408514156119b257506001925060009150829050613173611d6f565b60418514156119d057506002925060009150600190506131a9611d6f565b60428514156119ee5750600392506000915060019050613206611d6f565b6043851415611a0c575060029250600091506001905061328a611d6f565b6044851415611a2a57506003925060009150600190506132c9611d6f565b6050851415611a475750600292506000915082905061332f611d6f565b6051851415611a6557506003925060009150602890506133cc611d6f565b6052851415611a835750600192506000915060029050613490611d6f565b6053851415611aa0575060019250829150600390506134db611d6f565b6054851415611abe575060029250600191506029905061355d611d6f565b6060851415611adb57506000925082915060649050612c95611d6f565b6061851415611af9575060019250600091506064905061361a611d6f565b6072851415611b1657506000925082915060289050613661611d6f565b6073851415611b3357506000925082915060059050613673611d6f565b6074851415611b50575060009250829150600a905061367c611d6f565b6075851415611b6d57506001925060009150829050613689611d6f565b6076851415611b8a575060009250829150600190506136c4611d6f565b6077851415611ba7575060009250829150601990506136de611d6f565b6078851415611bc5575060029250600091506019905061372f611d6f565b6079851415611be357506003925060009150601990506137a7611d6f565b607b851415611c0157506001925060009150600a9050613838611d6f565b6080851415611c2057506004925060009150614e2090506138ae611d6f565b6081851415611c3f57506004925060009150610dac9050613a30611d6f565b6082851415611c5f57506003925060009150620140509050613b6d611d6f565b6083851415611c7e575060019250600091506103e89050613c71611d6f565b6090851415611c9b57506001925060009150829050612f48611d6f565b60a0851415611cb857506000925082915060019050613fb9611d6f565b60208510801590611cca575060248511155b15611d065760405162461bcd60e51b815260040180806020018281038252602e81526020018061528b602e913960400191505060405180910390fd5b60a18510801590611d18575060a68511155b80611d235750607085145b15611d5f5760405162461bcd60e51b815260040180806020018281038252602d8152602001806152b9602d913960400191505060405180910390fd5b5060009250829150600590506136735b9193509193565b611d7e61510f565b60408051600080825260208201909252611db891611db2565b611d9f61510f565b815260200190600190039081611d975790505b506124f8565b905090565b6000816001600160401b0316836060015160a001511015611e02575060e0820180516005016001600160401b03169052606082015160001960a09091015260016113ea565b5060e0820180516001600160401b039083018116909152606083015160a0018051918316909103905260006113ea565b60016101e090910152565b600160e090910152565b600060028260e001511415611e5e575060006110bc565b60018260e001511415611e73575060016110bc565b81516020830151611e8390611474565b611e908460400151611474565b611e9d8560600151611474565b611eaa8660800151611474565b8660a001518760c00151604051602001808881526020018781526020018681526020018581526020018481526020018381526020018281526020019750505050505050506040516020818303038152906040528051906020012090506110bc565b60408051818152606081810183529182919060208201818036833701905050905060005b6020811015611fd3576000848260208110611f4657fe5b1a60f881811b9250601080830480831b9360ff9091169091029003901b611f6c82613ff4565b858560020281518110611f7b57fe5b60200101906001600160f81b031916908160001a905350611f9b81613ff4565b858560020260010181518110611fad57fe5b60200101906001600160f81b031916908160001a9053505060019092019150611f2f9050565b5092915050565b606081806120015750506040805180820190915260018152600360fc1b60208201526110bc565b8060005b811561201957600101600a82049150612005565b6060816001600160401b038111801561203157600080fd5b506040519080825280601f01601f19166020018201604052801561205c576020820181803683370190505b50905060001982015b84156120aa57600a850660300160f81b8282806001900393508151811061208857fe5b60200101906001600160f81b031916908160001a905350600a85049450612065565b5095945050505050565b600080826001018484815181106120c757fe5b016020015190925060f81c90509250929050565b600090565b600080828451101580156120f8575060208385510310155b612135576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b60208301612149858563ffffffff61402516565b915091509250929050565b61215c61510f565b6040805160c08101825283815281516060810183526000808252602080830182905284518281528082018652939490850193908301916121b2565b61219f61510f565b8152602001906001900390816121975790505b509052815260200160006040519080825280602002602001820160405280156121f557816020015b6121e261510f565b8152602001906001900390816121da5790505b5081526000602082018190526040820152600160609091015292915050565b600190565b600061222361510f565b8260008061222f61510f565b600061223b89866120b4565b909550935061224a89866120b4565b9095509250600160ff8516141561226b5761226589866110c1565b90955091505b612275898661407e565b9095509050600160ff851614156122a057846122928483856113f0565b96509650505050505061127c565b846122ab848361138c565b9650965050505050509250929050565b600c90565b6122c861510f565b6040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b038111801561230f57600080fd5b5060405190808252806020026020018201604052801561234957816020015b61233661510f565b81526020019060019003908161232e5790505b5090528152602001600060405190808252806020026020018201604052801561238c57816020015b61237961510f565b8152602001906001900390816123715790505b50815260208101849052600c604082015260016060909101529050919050565b600290565b60006123bb61510f565b828451101580156123d0575060408385510310155b61240d576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b60008061241a868661407e565b909450915061242986856120e0565b9094509050836124398383614095565b9350935050509250929050565b600390565b600d90565b60006060828160ff87166001600160401b038111801561246f57600080fd5b506040519080825280602002602001820160405280156124a957816020015b61249661510f565b81526020019060019003908161248e5790505b50905060005b8760ff168160ff1610156124eb576124c787846110c1565b838360ff16815181106124d657fe5b602090810291909101015292506001016124af565b5090969095509350505050565b61250061510f565b61250a8251614154565b61255b576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b83518110156125925783818151811061257557fe5b602002602001015160a00151820191508080600101915050612560565b506040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b03811180156125da57600080fd5b5060405190808252806020026020018201604052801561261457816020015b61260161510f565b8152602001906001900390816125f95790505b5090528152602081019490945260006040850152600360608501526080909301525090565b61264161510f565b6040518060c001604052806000815260200183815260200160006001600160401b038111801561267057600080fd5b506040519080825280602002602001820160405280156126aa57816020015b61269761510f565b81526020019060019003908161268f5790505b5081526000602082015260016040820181905260609091015292915050565b60408051602080820193909352815180820384018152908201909152805191012090565b60006002826040015151106126fe57fe5b60408201515161276357612710612214565b8251602080850151604080516001600160f81b031960f896871b8116828601529490951b9093166021850152602280850191909152825180850390910181526042909301909152815191012090506110bc565b61276b612214565b8260000151612791846040015160008151811061278457fe5b6020026020010151611474565b8460200151604051602001808560ff1660ff1660f81b81526001018460ff1660ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b60006127f4612446565b8383604051602001808460ff1660ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b61284361510f565b600882511115612891576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b606082516001600160401b03811180156128aa57600080fd5b506040519080825280602002602001820160405280156128d4578160200160208202803683370190505b508051909150600160005b82811015612937576128f686828151811061278457fe5b84828151811061290257fe5b60200260200101818152505085818151811061291a57fe5b602002602001015160a001518201915080806001019150506128df565b506000835184604051602001808360ff1660ff1660f81b8152600101828051906020019060200280838360005b8381101561297c578181015183820152602001612964565b50505050905001925050506040516020818303038152906040528051906020012090506129a98183614095565b9695505050505050565b606490565b6129c061510f565b6040805160028082526060828101909352816020015b6129de61510f565b8152602001906001900390816129d65790505090508281600081518110612a0157fe5b60200260200101819052508381600181518110612a1a57fe5b6020026020010181905250612a2e8161283b565b949350505050565b612a3e61510f565b612a4c82610100015161415b565b9050612a5661510f565b612a6483610100015161415b565b9050612a6f8261419d565b1580612a815750612a7f8161419d565b155b15612a9657612a8f836141a8565b5050612c95565b8151815161016085015160009060ff1660011415612ab75750818101612c7e565b61016086015160ff1660021415612ad15750818102612c7e565b61016086015160ff1660031415612aeb5750808203612c7e565b61016086015160ff16600a1415612b05575080820a612c7e565b61016086015160ff16600b1415612b1f575080820b612c7e565b61016086015160ff1660101415612b395750808210612c7e565b61016086015160ff1660111415612b535750808211612c7e565b61016086015160ff1660121415612b6d5750808212612c7e565b61016086015160ff1660131415612b875750808213612c7e565b61016086015160ff1660161415612ba15750818116612c7e565b61016086015160ff1660171415612bbb5750818117612c7e565b61016086015160ff1660181415612bd55750818118612c7e565b61016086015160ff16601a1415612bef575080821a612c7e565b61016086015160ff16601b1415612c09575080821b612c7e565b61016086015160ff16601c1415612c23575080821c612c7e565b61016086015160ff16601d1415612c3d575080821d612c7e565b61016086015160ff1660221415612c7c575060408051602080820185905281830184905282518083038401815260609092019092528051910120612c7e565bfe5b610d4a866101000151612c9083612154565b6141b1565b50565b612ca061510f565b612cae82610100015161415b565b9050612cb861510f565b612cc683610100015161415b565b9050612cd18261419d565b1580612ce35750612ce18161419d565b155b80612ced57508051155b15612cfb57612a8f836141a8565b8151815161016085015160009060ff1660041415612d1c5750808204612c7e565b61016086015160ff1660051415612d365750808205612c7e565b61016086015160ff1660061415612d505750808206612c7e565b61016086015160ff1660071415612c7c5750808207612c7e565b612d7261510f565b612d8082610100015161415b565b9050612d8a61510f565b612d9883610100015161415b565b9050612da261510f565b612db084610100015161415b565b9050612dbb8361419d565b1580612dcd5750612dcb8261419d565b155b80612dde5750612ddc8161419d565b155b80612de857508051155b15612dfe57612df6846141a8565b505050612c95565b82518251825161016087015160009060ff1660081415612e2357818385089050612e3b565b61016088015160ff1660091415612c7c578183850990505b612e4d886101000151612c9083612154565b5050505050505050565b612e5f61510f565b612e6d82610100015161415b565b9050612e7761510f565b612e8583610100015161415b565b9050612eab836101000151612c90612e9c84611474565b612ea586611474565b146141db565b505050565b612eb861510f565b612ec682610100015161415b565b9050612ed18161419d565b612ee457612ede826141a8565b50612c95565b8051610100830151811590612efc90612c9083612154565b50505050565b612f0a61510f565b612f1882610100015161415b565b9050612f238161419d565b612f3057612ede826141a8565b8051610100830151811990612efc90612c9083612154565b612f5681610100015161415b565b5050565b612c958161010001518260600151608001516141b1565b612c958161010001518260600151606001516141b1565b612f9681610100015161415b565b60609182015190910152565b612faa61510f565b612fb882610100015161415b565b9050612fc3816141fd565b612fd057612ede826141a8565b612fd981611474565b6060830151525050565b612feb61510f565b612ff982610100015161415b565b905061300361510f565b61301183610100015161415b565b905061301c826141fd565b158061302e575061302c8161419d565b155b1561303c57612a8f836141a8565b805115612eab5761304c82611474565b606084015152505050565b610100810151516000901580156130875750613074610aa8611d76565b613085836060015160200151611474565b145b9050612f56826101000151612c90836141db565b612c95816101000151612c90836040015160000151600161420a565b612c95816101200151612c9083610100015161415b565b612c95816101000151612c9083610120015161415b565b610120810151516000901580156130875750613102610aa8611d76565b613085836060015160400151611474565b612c95816101000151612c90836060015160c00151600161420a565b61313761510f565b61314582610100015161415b565b9050613150816141fd565b61315d57612ede826141a8565b61316681611474565b606083015160c001525050565b61317b61510f565b61318982610100015161415b565b905061319a826101000151826141b1565b612f56826101000151826141b1565b6131b161510f565b6131bf82610100015161415b565b90506131c961510f565b6131d783610100015161415b565b90506131e8836101000151826141b1565b6131f7836101000151836141b1565b612eab836101000151826141b1565b61320e61510f565b61321c82610100015161415b565b905061322661510f565b61323483610100015161415b565b905061323e61510f565b61324c84610100015161415b565b905061325d846101000151826141b1565b61326c846101000151836141b1565b61327b846101000151846141b1565b612efc846101000151826141b1565b61329261510f565b6132a082610100015161415b565b90506132aa61510f565b6132b883610100015161415b565b90506131f7836101000151836141b1565b6132d161510f565b6132df82610100015161415b565b90506132e961510f565b6132f783610100015161415b565b905061330161510f565b61330f84610100015161415b565b9050613320846101000151846141b1565b61327b846101000151836141b1565b61333761510f565b61334582610100015161415b565b905061334f61510f565b61335d83610100015161415b565b90506133688261419d565b158061337a5750613378816142c9565b155b806133945750613389816142d6565b60ff16826000015110155b156133a257612a8f836141a8565b612eab83610100015182604001518460000151815181106133bf57fe5b60200260200101516141b1565b6133d461510f565b6133e282610100015161415b565b90506133ec61510f565b6133fa83610100015161415b565b905061340461510f565b61341284610100015161415b565b905061341d8361419d565b158061342f575061342d826142c9565b155b80613449575061343e826142d6565b60ff16836000015110155b1561345757612df6846141a8565b60408201518351815183918391811061346c57fe5b6020026020010181905250613489856101000151612c90836124f8565b5050505050565b61349861510f565b6134a682610100015161415b565b90506134b1816142c9565b6134be57612ede826141a8565b612f56826101000151612c906134d3846142d6565b60ff16612154565b6134e361510f565b6134f182610100015161415b565b90506134fb61510f565b61350983610120015161415b565b90506135148261419d565b15806135265750613524816142c9565b155b806135405750613535816142d6565b60ff16826000015110155b1561354e57612a8f836141a8565b6133a2836101200151826141b1565b61356561510f565b61357382610100015161415b565b905061357d61510f565b61358b83610100015161415b565b905061359561510f565b6135a384610120015161415b565b90506135ae816142c9565b15806135c057506135be8361419d565b155b806135da57506135cf816142d6565b60ff16836000015110155b156135e857612df6846141a8565b6040810151835181518491839181106135fd57fe5b6020026020010181905250613489856101200151612c90836124f8565b8060c00151613630610aa883610100015161415b565b604080516020808201949094528082019290925280518083038201815260609092019052805191012060c090910152565b612c95816101000151612c90836142fd565b612c95816141a8565b612c958160600151614dcd565b61369161510f565b61369f82610100015161415b565b90506136aa8161419d565b6136b757612ede826141a8565b51606082015160a0015250565b612c95816101000151612c90836060015160a00151612154565b61010081015160408051600160f81b6020808301919091526000602183018190526022808401919091528351808403909101815260429092019092528051910120612c959190612c9090600161420a565b61373761510f565b61374582610100015161415b565b905061374f61510f565b61375d83610100015161415b565b90506137688261419d565b158061377a5750613778816141fd565b155b1561378857612a8f836141a8565b612eab836101000151612c9084600001516137a285611474565b61138c565b6137af61510f565b6137bd82610100015161415b565b90506137c761510f565b6137d583610100015161415b565b90506137df61510f565b6137ed84610100015161415b565b90506137f88361419d565b158061380a5750613808816141fd565b155b1561381857612df6846141a8565b612efc846101000151612c90856000015161383285611474565b866113f0565b61384061510f565b61384e82610100015161415b565b90506138598161419d565b61386657612ede826141a8565b60408051600080825260208201909252606091613899565b61388661510f565b81526020019060019003908161387e5790505b509050612eab836101000151612c90836124f8565b6138b661510f565b6138c482610100015161415b565b90506138ce61510f565b6138dc83610100015161415b565b90506138e661510f565b6138f484610100015161415b565b90506138fe61510f565b61390c85610100015161415b565b90506139178461419d565b158061392957506139278361419d565b155b8061393a57506139388261419d565b155b8061394b57506139498161419d565b155b1561396257613959856141a8565b50505050612c95565b8351835183511580159061397857508351600114155b1561399b57613990876101000151612c906000612154565b505050505050612c95565b83518351604080516000808252602080830180855285905260ff601b9096019586168385015260608301889052608083018790529251909260019260a080820193601f1981019281900390910190855afa1580156139fd573d6000803e3d6000fd5b505050602060405103519050613a248a6101000151612c90836001600160a01b0316612154565b50505050505050505050565b613a3861510f565b613a4682610100015161415b565b9050613a5061510f565b613a5e83610100015161415b565b9050613a6861510f565b613a7684610100015161415b565b9050613a8061510f565b613a8e85610100015161415b565b9050613a998461419d565b1580613aab5750613aa98361419d565b155b80613abc5750613aba8261419d565b155b80613acd5750613acb8161419d565b155b15613adb57613959856141a8565b613ae361505f565b5060408051608081018252855181528451602082015283519181019190915281516060820152613b116151aa565b600060408260808560066107d05a03fa905080613b3d57613b31886141a8565b50505050505050612c95565b610100880151613b5890612c908460015b6020020151612154565b610100880151612e4d90612c90846000613b4e565b613b7561510f565b613b8382610100015161415b565b9050613b8d61510f565b613b9b83610100015161415b565b9050613ba561510f565b613bb384610100015161415b565b9050613bbe8361419d565b1580613bd05750613bce8261419d565b155b80613be15750613bdf8161419d565b155b15613bef57612df6846141a8565b613bf76151c8565b50604080516060810182528451815283516020820152825191810191909152613c1e6151aa565b600060408260808560076107d05a03fa905080613c3e57613990876141a8565b610100870151613c5390612c90846001613b4e565b610100870151613c6890612c90846000613b4e565b50505050505050565b613c7961510f565b613c8782610100015161415b565b9050613c916151e6565b6000805b601e811015613d2357613ca7846142c9565b613cb45760019150613d23565b60408401518051613cc55750613d23565b8051600214613cd8576001925050613d23565b80600081518110613ce557fe5b60200260200101518483601e8110613cf957fe5b6020020152805181906001908110613d0d57fe5b6020908102919091010151945050600101613c95565b613d32856207a1208302611dbd565b15613d565760e0850180516103e719016001600160401b0316905261395985611e32565b8180613d685750613d66846142c9565b155b80613d77575060408401515115155b15613d8557613959856141a8565b613d8d615214565b60005b82811015613f6a57613da061510f565b8582601e8110613dac57fe5b60200201519050613dbc816142c9565b613dc957613b31886141a8565b60408101518051600614613ded57613de0896141a8565b5050505050505050612c95565b60005b6006811015613e3857613e15828281518110613e0857fe5b602002602001015161419d565b613e3057613e228a6141a8565b505050505050505050612c95565b600101613df0565b5080600081518110613e4657fe5b602002602001015160000151848460060260b48110613e6157fe5b6020020152805181906001908110613e7557fe5b602002602001015160000151848460060260010160b48110613e9357fe5b6020020152805181906003908110613ea757fe5b602002602001015160000151848460060260020160b48110613ec557fe5b6020020152805181906002908110613ed957fe5b602002602001015160000151848460060260030160b48110613ef757fe5b6020020152805181906005908110613f0b57fe5b602002602001015160000151848460060260040160b48110613f2957fe5b6020020152805181906004908110613f3d57fe5b602002602001015160000151848460060260050160b48110613f5b57fe5b60200201525050600101613d90565b5060c08202613f77615233565b6000602082848660086107d05a03fa905080613f9657613de0896141a8565b6101008901518251613fae9190612c909015156141db565b505050505050505050565b612c95816101000151612c906000801b60405160200180828152602001915050604051602081830303815290604052805190602001206122c0565b6000600a60f883901c1015614014578160f81c60300160f81b90506110bc565b8160f81c60570160f81b90506110bc565b60008160200183511015614075576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b60008060208301612149858563ffffffff61402516565b61409d61510f565b6040805160c08101825284815281516060810183526000808252602080830182905284518281528082018652939490850193908301916140f3565b6140e061510f565b8152602001906001900390816140d85790505b5090528152602001600060405190808252806020026020018201604052801561413657816020015b61412361510f565b81526020019060019003908161411b5790505b50815260006020820152600260408201526060019290925250919050565b6008101590565b61416361510f565b61416b61510f565b826020015160018460000151038151811061418257fe5b60209081029190910101518351600019018452915050919050565b6080015160ff161590565b612c9581611e32565b8082602001518360000151815181106141c657fe5b60209081029190910101525080516001019052565b6141e361510f565b81156141f35761149a6001612154565b61149a6000612154565b6080015160ff1660011490565b61421261510f565b6040805160c0810182528481528151606081018352600080825260208083018290528451828152808201865293949085019390830191614268565b61425561510f565b81526020019060019003908161424d5790505b509052815260200160006040519080825280602002602001820160405280156142ab57816020015b61429861510f565b8152602001906001900390816142905790505b50815260006020820152606460408201526060019290925250919050565b6080015160ff1660031490565b608081015160009060ff16600314156142f557506040810151516110bc565b5060016110bc565b61430561510f565b6101808201516143136151c8565b604080516008808252610120820190925260009160609190816020015b61433861510f565b815260200190600190039081614330579050509050600084876101a001518151811061436057fe5b01602001516101a0880180516001019081905260f89190911c9150600090819081908190614395908a9063ffffffff614dd716565b6101a08c018051601401908190529091506143b1908a906120e0565b6101a08d0182905294506143c6908a906120e0565b6101a08d0182905293506143db908a906120e0565b6101a08d0182905297506143f0908a906120e0565b6101a08d018290529250600090614408908b906120e0565b6101a08e018290529150600090614421908c9084614e37565b6101a08e0180518d810160200185902085820190925291925061444989868a8a8f8b87614e60565b8c526000841561445b5750600361445f565b5060065b8060ff168a60ff16148015614472575086155b156144c65760408051606088901b6001600160601b031916602080830191909152603482018c905260548083018c90528351808403909101815260749092018352815191810191909120908f01528d018290525b6144d28a60ff16612154565b8b6000815181106144df57fe5b60200260200101819052506144f389612154565b8b60018151811061450057fe5b602002602001018190525061451488612154565b8b60028151811061452157fe5b602002602001018190525061453e866001600160a01b0316612154565b8b60038151811061454b57fe5b602002602001018190525061455f8c612154565b8b60048151811061456c57fe5b602002602001018190525061458087612154565b8b60058151811061458d57fe5b60200260200101819052506145a185612154565b8b6006815181106145ae57fe5b60200260200101819052506145c484600161420a565b8b6007815181106145d157fe5b60200260200101819052505050505050505050505060006145f785886101a001516120e0565b6101a0890182905286519092506000918791811061461157fe5b01602001516101a089018051600101905260f81c905080158061463757508060ff166001145b614679576040805162461bcd60e51b815260206004820152600e60248201526d1254d7d111531056515117d5905360921b604482015290519081900360640190fd5b600061468a878a6101a001516120e0565b6101a08b0191909152905060ff821661474f578085876001602002015188600260200201516040516020018085815260200184815260200183815260200182815260200194505050505060405160208183030381529060405280519060200120905088608001518514614744576040805162461bcd60e51b815260206004820152601b60248201527f57524f4e475f53455155454e4345525f4d53475f5345515f4e554d0000000000604482015290519081900360640190fd5b600190940193614ac5565b60008060006147638a8d6101a001516120e0565b6101a08e018290529350614778908b906120e0565b6101a08e01829052925061478d908b906120e0565b6101a08e01919091526020808e01516040805163d9dd67ab60e01b81526000198501600482015290519394506000936001600160a01b039092169263d9dd67ab92602480840193829003018186803b1580156147e857600080fd5b505afa1580156147fc573d6000803e3d6000fd5b505050506040513d602081101561481257600080fd5b505190508289101561485b576040805162461bcd60e51b815260206004820152600d60248201526c1111531056515117d4d5105495609a1b604482015290519081900360640190fd5b81891061489d576040805162461bcd60e51b815260206004820152600b60248201526a1111531056515117d1539160aa1b604482015290519081900360640190fd5b6000891561491f578d602001516001600160a01b031663d9dd67ab60018c036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156148f057600080fd5b505afa158015614904573d6000803e3d6000fd5b505050506040513d602081101561491a57600080fd5b505190505b8d602001516001600160a01b031663d9dd67ab8b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561496757600080fd5b505afa15801561497b573d6000803e3d6000fd5b505050506040513d602081101561499157600080fd5b50518b516149a0908390614ed1565b146149e0576040805162461bcd60e51b815260206004820152600b60248201526a44454c415945445f41434360a81b604482015290519081900360640190fd5b6149ef8a600160ff1b17612154565b896004815181106149fc57fe5b60200260200101819052508d6080015185858c030114614a5f576040805162461bcd60e51b815260206004820152601960248201527857524f4e475f44454c415945445f4d53475f5345515f4e554d60381b604482015290519081900360640190fd5b5060408051702232b630bcb2b21036b2b9b9b0b3b2b99d60791b602080830191909152603182019790975260518101869052607181018590526091810184905260b1808201939093528151808203909301835260d1019052805194019390932092030194505b86896101a0015181518110614ad657fe5b016020015160f81c91506002821415614aee57614cf3565b60ff82161580614b0157508160ff166001145b614b47576040805162461bcd60e51b815260206004820152601260248201527114915357d254d7d111531056515117d5905360721b604482015290519081900360640190fd5b6101a089018051600101905260ff8216614bd257600080614b6d898c6101a001516120e0565b6101a08d018290529250614b82908a906120e0565b6101a08d0191909152604080516020808201969096528082018a905260608101949094526080808501929092528051808503909201825260a0909301909252508051910120600190940193614cee565b600080614be4898c6101a001516120e0565b6101a08d018290529250614bf9908a906120e0565b8c6101a001819350828152505050828783838e602001516001600160a01b031663d9dd67ab600187036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614c5657600080fd5b505afa158015614c6a573d6000803e3d6000fd5b505050506040513d6020811015614c8057600080fd5b505160408051702232b630bcb2b21036b2b9b9b0b3b2b99d60791b602082810191909152603182019790975260518101959095526071850193909352609184019190915260b1808401919091528151808403909101815260d190920190528051910120919003959095019490505b614ac5565b88600001516001600160a01b031663d9dd67ab846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614d3b57600080fd5b505afa158015614d4f573d6000803e3d6000fd5b505050506040513d6020811015614d6557600080fd5b50518114614dac576040805162461bcd60e51b815260206004820152600f60248201526e57524f4e475f42415443485f41434360881b604482015290519081900360640190fd5b6080890180516001019052614dc0846124f8565b9998505050505050505050565b600260e090910152565b60008160140183511015614e27576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b500160200151600160601b900490565b600080614e528584860186614e4b87614efd565b6001614f28565b50905061146b607b82614ed1565b6040805160f89890981b6001600160f81b0319166020808a019190915260609790971b6001600160601b0319166021890152603588019590955260558701939093526075860191909152609585015260b5808501919091528151808503909101815260d59093019052815191012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600060018211614f0f575060016110bc565b614f1e60026001840104614efd565b60020290506110bc565b60008060208411614f7c57858510614f4f57614f4460006126c9565b600191509150614ff6565b6000614f64614f5f89888a615000565b6126c9565b905080614f7160006126c9565b909350149050614ff6565b600080614f968989600289048a0160028a5b046000614f28565b91509150808015614fa45750845b15614fc457614fb989898960028a0489614f28565b935093505050614ff6565b600080614fd58b8b8b60028c614f8e565b91509150614fe38285614ed1565b818015614fed5750835b95509550505050505b9550959350505050565b600080805b602081101561505657600882901b915060008186018511615027576000615045565b868287018151811061503557fe5b01602001516001600160f81b0319165b60f81c929092179150600101615005565b50949350505050565b60405180608001604052806004906020820280368337509192915050565b60408051610200810182526000808252602082015290810161509d61514c565b81526020016150aa61514c565b81526000602082018190526040820181905260608201819052608082015260a0016150d3615251565b81526020016150e0615251565b81526000602082018190526040820181905260608083018190526080830182905260a083015260c09091015290565b6040518060c001604052806000815260200161512961526b565b815260606020820181905260006040830181905290820181905260809091015290565b604080516101008101909152600081526020810161516861510f565b815260200161517561510f565b815260200161518261510f565b815260200161518f61510f565b81526000602082018190526040820181905260609091015290565b60405180604001604052806002906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b604051806103c00160405280601e905b6151fe61510f565b8152602001906001900390816151f65790505090565b60405180611680016040528060b4906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b604051806040016040528060008152602001606081525090565b604080516060808201835260008083526020830152918101919091529056fe75736520616e6f7468657220636f6e747261637420746f2068616e646c652068617368696e67206f70636f64657375736520616e6f7468657220636f6e747261637420746f2068616e646c6520627566666572206f70636f646573a2646970667358221220945f68336a5da298bb7b7543a78366d07acffb6ca07fe1d35af9f6a4457d7f9764736f6c634300060b0033",
}

// OneStepProofABI is the input ABI used to generate the binding from.
// Deprecated: Use OneStepProofMetaData.ABI instead.
var OneStepProofABI = OneStepProofMetaData.ABI

// OneStepProofBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use OneStepProofMetaData.Bin instead.
var OneStepProofBin = OneStepProofMetaData.Bin

// DeployOneStepProof deploys a new Ethereum contract, binding an instance of OneStepProof to it.
func DeployOneStepProof(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OneStepProof, error) {
	parsed, err := OneStepProofMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(OneStepProofBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneStepProof{OneStepProofCaller: OneStepProofCaller{contract: contract}, OneStepProofTransactor: OneStepProofTransactor{contract: contract}, OneStepProofFilterer: OneStepProofFilterer{contract: contract}}, nil
}

// OneStepProof is an auto generated Go binding around an Ethereum contract.
type OneStepProof struct {
	OneStepProofCaller     // Read-only binding to the contract
	OneStepProofTransactor // Write-only binding to the contract
	OneStepProofFilterer   // Log filterer for contract events
}

// OneStepProofCaller is an auto generated read-only Go binding around an Ethereum contract.
type OneStepProofCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProofTransactor is an auto generated write-only Go binding around an Ethereum contract.
type OneStepProofTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProofFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneStepProofFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProofSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneStepProofSession struct {
	Contract     *OneStepProof     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneStepProofCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneStepProofCallerSession struct {
	Contract *OneStepProofCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// OneStepProofTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneStepProofTransactorSession struct {
	Contract     *OneStepProofTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// OneStepProofRaw is an auto generated low-level Go binding around an Ethereum contract.
type OneStepProofRaw struct {
	Contract *OneStepProof // Generic contract binding to access the raw methods on
}

// OneStepProofCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneStepProofCallerRaw struct {
	Contract *OneStepProofCaller // Generic read-only contract binding to access the raw methods on
}

// OneStepProofTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneStepProofTransactorRaw struct {
	Contract *OneStepProofTransactor // Generic write-only contract binding to access the raw methods on
}

// NewOneStepProof creates a new instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProof(address common.Address, backend bind.ContractBackend) (*OneStepProof, error) {
	contract, err := bindOneStepProof(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneStepProof{OneStepProofCaller: OneStepProofCaller{contract: contract}, OneStepProofTransactor: OneStepProofTransactor{contract: contract}, OneStepProofFilterer: OneStepProofFilterer{contract: contract}}, nil
}

// NewOneStepProofCaller creates a new read-only instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProofCaller(address common.Address, caller bind.ContractCaller) (*OneStepProofCaller, error) {
	contract, err := bindOneStepProof(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProofCaller{contract: contract}, nil
}

// NewOneStepProofTransactor creates a new write-only instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProofTransactor(address common.Address, transactor bind.ContractTransactor) (*OneStepProofTransactor, error) {
	contract, err := bindOneStepProof(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProofTransactor{contract: contract}, nil
}

// NewOneStepProofFilterer creates a new log filterer instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProofFilterer(address common.Address, filterer bind.ContractFilterer) (*OneStepProofFilterer, error) {
	contract, err := bindOneStepProof(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneStepProofFilterer{contract: contract}, nil
}

// bindOneStepProof binds a generic wrapper to an already deployed contract.
func bindOneStepProof(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProofABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof *OneStepProofRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof.Contract.OneStepProofCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof *OneStepProofRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof.Contract.OneStepProofTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof *OneStepProofRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof.Contract.OneStepProofTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof *OneStepProofCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof *OneStepProofTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof *OneStepProofTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x47dda1d6.
//
// Solidity: function executeStep(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 afterMessagesRead, bytes32[4] fields)
func (_OneStepProof *OneStepProofCaller) ExecuteStep(opts *bind.CallOpts, bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	AfterMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	var out []interface{}
	err := _OneStepProof.contract.Call(opts, &out, "executeStep", bridges, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		Gas               uint64
		AfterMessagesRead *big.Int
		Fields            [4][32]byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Gas = *abi.ConvertType(out[0], new(uint64)).(*uint64)
	outstruct.AfterMessagesRead = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Fields = *abi.ConvertType(out[2], new([4][32]byte)).(*[4][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x47dda1d6.
//
// Solidity: function executeStep(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 afterMessagesRead, bytes32[4] fields)
func (_OneStepProof *OneStepProofSession) ExecuteStep(bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	AfterMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	return _OneStepProof.Contract.ExecuteStep(&_OneStepProof.CallOpts, bridges, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x47dda1d6.
//
// Solidity: function executeStep(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 afterMessagesRead, bytes32[4] fields)
func (_OneStepProof *OneStepProofCallerSession) ExecuteStep(bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	AfterMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	return _OneStepProof.Contract.ExecuteStep(&_OneStepProof.CallOpts, bridges, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0xeba67f6e.
//
// Solidity: function executeStepDebug(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof *OneStepProofCaller) ExecuteStepDebug(opts *bind.CallOpts, bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	var out []interface{}
	err := _OneStepProof.contract.Call(opts, &out, "executeStepDebug", bridges, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		StartMachine string
		AfterMachine string
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.StartMachine = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.AfterMachine = *abi.ConvertType(out[1], new(string)).(*string)

	return *outstruct, err

}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0xeba67f6e.
//
// Solidity: function executeStepDebug(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof *OneStepProofSession) ExecuteStepDebug(bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof.Contract.ExecuteStepDebug(&_OneStepProof.CallOpts, bridges, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0xeba67f6e.
//
// Solidity: function executeStepDebug(address[2] bridges, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof *OneStepProofCallerSession) ExecuteStepDebug(bridges [2]common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof.Contract.ExecuteStepDebug(&_OneStepProof.CallOpts, bridges, initialMessagesRead, accs, proof, bproof)
}
